// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const ADDDATE = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_DATE = 57750
const CURDATE = 57751
const DATE_ADD = 57752
const DATE_SUB = 57753
const NOW = 57754
const SUBDATE = 57755
const CURTIME = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const CURRENT_USER = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const SYSDATE = 57764
const DAY = 57765
const DAY_HOUR = 57766
const DAY_MICROSECOND = 57767
const DAY_MINUTE = 57768
const DAY_SECOND = 57769
const HOUR = 57770
const HOUR_MICROSECOND = 57771
const HOUR_MINUTE = 57772
const HOUR_SECOND = 57773
const MICROSECOND = 57774
const MINUTE = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const MONTH = 57778
const QUARTER = 57779
const SECOND = 57780
const SECOND_MICROSECOND = 57781
const YEAR_MONTH = 57782
const WEEK = 57783
const SQL_TSI_DAY = 57784
const SQL_TSI_WEEK = 57785
const SQL_TSI_HOUR = 57786
const SQL_TSI_MINUTE = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MICROSECOND = 57791
const SQL_TSI_YEAR = 57792
const REPLACE = 57793
const CONVERT = 57794
const CAST = 57795
const SUBSTR = 57796
const SUBSTRING = 57797
const SEPARATOR = 57798
const TIMESTAMPADD = 57799
const TIMESTAMPDIFF = 57800
const WEIGHT_STRING = 57801
const LTRIM = 57802
const RTRIM = 57803
const TRIM = 57804
const JSON_ARRAY = 57805
const JSON_OBJECT = 57806
const JSON_QUOTE = 57807
const JSON_DEPTH = 57808
const JSON_TYPE = 57809
const JSON_LENGTH = 57810
const JSON_VALID = 57811
const JSON_ARRAY_APPEND = 57812
const JSON_ARRAY_INSERT = 57813
const JSON_INSERT = 57814
const JSON_MERGE = 57815
const JSON_MERGE_PATCH = 57816
const JSON_MERGE_PRESERVE = 57817
const JSON_REMOVE = 57818
const JSON_REPLACE = 57819
const JSON_SET = 57820
const JSON_UNQUOTE = 57821
const COUNT = 57822
const AVG = 57823
const MAX = 57824
const MIN = 57825
const SUM = 57826
const GROUP_CONCAT = 57827
const BIT_AND = 57828
const BIT_OR = 57829
const BIT_XOR = 57830
const STD = 57831
const STDDEV = 57832
const STDDEV_POP = 57833
const STDDEV_SAMP = 57834
const VAR_POP = 57835
const VAR_SAMP = 57836
const VARIANCE = 57837
const ANY_VALUE = 57838
const REGEXP_INSTR = 57839
const REGEXP_LIKE = 57840
const REGEXP_REPLACE = 57841
const REGEXP_SUBSTR = 57842
const ExtractValue = 57843
const UpdateXML = 57844
const GET_LOCK = 57845
const RELEASE_LOCK = 57846
const RELEASE_ALL_LOCKS = 57847
const IS_FREE_LOCK = 57848
const IS_USED_LOCK = 57849
const LOCATE = 57850
const POSITION = 57851
const ST_GeometryCollectionFromText = 57852
const ST_GeometryFromText = 57853
const ST_LineStringFromText = 57854
const ST_MultiLineStringFromText = 57855
const ST_MultiPointFromText = 57856
const ST_MultiPolygonFromText = 57857
const ST_PointFromText = 57858
const ST_PolygonFromText = 57859
const ST_GeometryCollectionFromWKB = 57860
const ST_GeometryFromWKB = 57861
const ST_LineStringFromWKB = 57862
const ST_MultiLineStringFromWKB = 57863
const ST_MultiPointFromWKB = 57864
const ST_MultiPolygonFromWKB = 57865
const ST_PointFromWKB = 57866
const ST_PolygonFromWKB = 57867
const ST_AsBinary = 57868
const ST_AsText = 57869
const ST_Dimension = 57870
const ST_Envelope = 57871
const ST_IsSimple = 57872
const ST_IsEmpty = 57873
const ST_GeometryType = 57874
const ST_X = 57875
const ST_Y = 57876
const ST_Latitude = 57877
const ST_Longitude = 57878
const ST_EndPoint = 57879
const ST_IsClosed = 57880
const ST_Length = 57881
const ST_NumPoints = 57882
const ST_StartPoint = 57883
const ST_PointN = 57884
const ST_Area = 57885
const ST_Centroid = 57886
const ST_ExteriorRing = 57887
const ST_InteriorRingN = 57888
const ST_NumInteriorRings = 57889
const ST_NumGeometries = 57890
const ST_GeometryN = 57891
const ST_LongFromGeoHash = 57892
const ST_PointFromGeoHash = 57893
const ST_LatFromGeoHash = 57894
const ST_GeoHash = 57895
const ST_AsGeoJSON = 57896
const ST_GeomFromGeoJSON = 57897
const MATCH = 57898
const AGAINST = 57899
const BOOLEAN = 57900
const LANGUAGE = 57901
const WITH = 57902
const QUERY = 57903
const EXPANSION = 57904
const WITHOUT = 57905
const VALIDATION = 57906
const UNUSED = 57907
const ARRAY = 57908
const BYTE = 57909
const CUME_DIST = 57910
const DESCRIPTION = 57911
const DENSE_RANK = 57912
const EMPTY = 57913
const EXCEPT = 57914
const FIRST_VALUE = 57915
const GROUPING = 57916
const GROUPS = 57917
const JSON_TABLE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LATERAL = 57921
const LEAD = 57922
const NTH_VALUE = 57923
const NTILE = 57924
const OF = 57925
const OVER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const RECURSIVE = 57929
const ROW_NUMBER = 57930
const SYSTEM = 57931
const WINDOW = 57932
const ACTIVE = 57933
const ADMIN = 57934
const AUTOEXTEND_SIZE = 57935
const BUCKETS = 57936
const CLONE = 57937
const COLUMN_FORMAT = 57938
const COMPONENT = 57939
const DEFINITION = 57940
const ENFORCED = 57941
const ENGINE_ATTRIBUTE = 57942
const EXCLUDE = 57943
const FOLLOWING = 57944
const GET_MASTER_PUBLIC_KEY = 57945
const HISTOGRAM = 57946
const HISTORY = 57947
const INACTIVE = 57948
const INVISIBLE = 57949
const LOCKED = 57950
const MASTER_COMPRESSION_ALGORITHMS = 57951
const MASTER_PUBLIC_KEY_PATH = 57952
const MASTER_TLS_CIPHERSUITES = 57953
const MASTER_ZSTD_COMPRESSION_LEVEL = 57954
const NESTED = 57955
const NETWORK_NAMESPACE = 57956
const NOWAIT = 57957
const NULLS = 57958
const OJ = 57959
const OLD = 57960
const OPTIONAL = 57961
const ORDINALITY = 57962
const ORGANIZATION = 57963
const OTHERS = 57964
const PARTIAL = 57965
const PATH = 57966
const PERSIST = 57967
const PERSIST_ONLY = 57968
const PRECEDING = 57969
const PRIVILEGE_CHECKS_USER = 57970
const PROCESS = 57971
const RANDOM = 57972
const REFERENCE = 57973
const REQUIRE_ROW_FORMAT = 57974
const RESOURCE = 57975
const RESPECT = 57976
const RESTART = 57977
const RETAIN = 57978
const REUSE = 57979
const ROLE = 57980
const SECONDARY = 57981
const SECONDARY_ENGINE = 57982
const SECONDARY_ENGINE_ATTRIBUTE = 57983
const SECONDARY_LOAD = 57984
const SECONDARY_UNLOAD = 57985
const SIMPLE = 57986
const SKIP = 57987
const SRID = 57988
const THREAD_PRIORITY = 57989
const TIES = 57990
const UNBOUNDED = 57991
const VCPU = 57992
const VISIBLE = 57993
const RETURNING = 57994
const FORMAT_BYTES = 57995
const FORMAT_PICO_TIME = 57996
const PS_CURRENT_THREAD_ID = 57997
const PS_THREAD_ID = 57998
const GTID_SUBSET = 57999
const GTID_SUBTRACT = 58000
const WAIT_FOR_EXECUTED_GTID_SET = 58001
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58002
const FORMAT = 58003
const TREE = 58004
const VITESS = 58005
const TRADITIONAL = 58006
const VTEXPLAIN = 58007
const VEXPLAIN = 58008
const PLAN = 58009
const LOCAL = 58010
const LOW_PRIORITY = 58011
const NO_WRITE_TO_BINLOG = 58012
const LOGS = 58013
const ERROR = 58014
const GENERAL = 58015
const HOSTS = 58016
const OPTIMIZER_COSTS = 58017
const USER_RESOURCES = 58018
const SLOW = 58019
const CHANNEL = 58020
const RELAY = 58021
const EXPORT = 58022
const CURRENT = 58023
const ROW = 58024
const ROWS = 58025
const AVG_ROW_LENGTH = 58026
const CONNECTION = 58027
const CHECKSUM = 58028
const DELAY_KEY_WRITE = 58029
const ENCRYPTION = 58030
const ENGINE = 58031
const INSERT_METHOD = 58032
const MAX_ROWS = 58033
const MIN_ROWS = 58034
const PACK_KEYS = 58035
const PASSWORD = 58036
const FIXED = 58037
const DYNAMIC = 58038
const COMPRESSED = 58039
const REDUNDANT = 58040
const COMPACT = 58041
const ROW_FORMAT = 58042
const STATS_AUTO_RECALC = 58043
const STATS_PERSISTENT = 58044
const STATS_SAMPLE_PAGES = 58045
const STORAGE = 58046
const MEMORY = 58047
const DISK = 58048
const PARTITIONS = 58049
const LINEAR = 58050
const RANGE = 58051
const LIST = 58052
const SUBPARTITION = 58053
const SUBPARTITIONS = 58054
const HASH = 58055

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	731, 158,
	-2, 166,
	-1, 52,
	135, 166,
	177, 166,
	346, 166,
	-2, 522,
	-1, 60,
	36, 771,
	240, 771,
	251, 771,
	286, 785,
	287, 785,
	-2, 773,
	-1, 65,
	242, 809,
	-2, 807,
	-1, 120,
	239, 1586,
	-2, 132,
	-1, 122,
	1, 159,
	731, 159,
	-2, 166,
	-1, 133,
	136, 407,
	245, 407,
	-2, 511,
	-1, 152,
	135, 166,
	177, 166,
	346, 166,
	-2, 531,
	-1, 731,
	163, 40,
	-2, 44,
	-1, 937,
	87, 1603,
	-2, 1457,
	-1, 938,
	87, 1604,
	222, 1608,
	-2, 1458,
	-1, 939,
	222, 1607,
	-2, 41,
	-1, 1019,
	60, 883,
	-2, 898,
	-1, 1106,
	250, 42,
	255, 42,
	-2, 418,
	-1, 1191,
	1, 579,
	731, 579,
	-2, 166,
	-1, 1492,
	222, 1608,
	-2, 1458,
	-1, 1700,
	60, 884,
	-2, 903,
	-1, 1701,
	60, 885,
	-2, 904,
	-1, 1752,
	135, 166,
	177, 166,
	346, 166,
	-2, 457,
	-1, 1833,
	136, 407,
	245, 407,
	-2, 511,
	-1, 1842,
	250, 43,
	255, 43,
	-2, 419,
	-1, 2279,
	222, 1612,
	-2, 1606,
	-1, 2280,
	222, 1608,
	-2, 1604,
	-1, 2380,
	135, 166,
	177, 166,
	346, 166,
	-2, 458,
	-1, 2387,
	26, 187,
	-2, 189,
	-1, 2840,
	78, 97,
	88, 97,
	-2, 962,
	-1, 2909,
	706, 695,
	-2, 669,
	-1, 3128,
	50, 1554,
	-2, 1548,
	-1, 3947,
	706, 695,
	-2, 683,
	-1, 4034,
	90, 627,
	95, 627,
	105, 627,
	179, 627,
	180, 627,
	181, 627,
	182, 627,
	183, 627,
	184, 627,
	185, 627,
	186, 627,
	187, 627,
	188, 627,
	189, 627,
	190, 627,
	191, 627,
	192, 627,
	193, 627,
	194, 627,
	195, 627,
	196, 627,
	197, 627,
	198, 627,
	199, 627,
	200, 627,
	201, 627,
	202, 627,
	203, 627,
	204, 627,
	205, 627,
	206, 627,
	207, 627,
	208, 627,
	209, 627,
	210, 627,
	211, 627,
	212, 627,
	213, 627,
	214, 627,
	215, 627,
	216, 627,
	217, 627,
	218, 627,
	219, 627,
	220, 627,
	-2, 1970,
}

const yyPrivate = 57344

const yyLast = 55457

var yyAct = [...]int{
	953, 3608, 948, 85, 3928, 3609, 3610, 4013, 4077, 4109,
	2377, 3278, 941, 2085, 2308, 4001, 3912, 4122, 3180, 1256,
	3238, 3187, 940, 2073, 4076, 3243, 3837, 3229, 4032, 3141,
	3240, 3411, 3239, 3237, 3910, 3242, 3241, 2998, 3547, 2310,
	3081, 3258, 3195, 2451, 735, 3257, 1755, 1258, 3145, 3142,
	1961, 3560, 2016, 3450, 3456, 5, 3647, 2972, 3139, 3129,
	2332, 2800, 3442, 729, 762, 3260, 906, 2997, 2351, 41,
	730, 1811, 2874, 3284, 1715, 2954, 2414, 2906, 2439, 2419,
	901, 3978, 2875, 2348, 1017, 2876, 85, 902, 1068, 2482,
	161, 2365, 1138, 3476, 1036, 2825, 1858, 2353, 2806, 40,
	2352, 2275, 1014, 1702, 2792, 1017, 2776, 42, 2231, 2108,
	2069, 2263, 2460, 2946, 2024, 147, 2230, 2438, 2340, 1840,
	1078, 2499, 2421, 2867, 1096, 1744, 2842, 1724, 1114, 2355,
	1504, 1682, 2813, 2112, 98, 1101, 102, 2328, 2044, 1431,
	1416, 1957, 1847, 1075, 103, 3144, 745, 1104, 1072, 1107,
	1016, 2436, 1020, 1939, 2410, 1076, 1102, 1103, 1743, 2411,
	1729, 1053, 1055, 732, 1488, 3642, 2139, 2774, 2333, 2181,
	2015, 1038, 3900, 740, 2276, 1247, 105, 1968, 1026, 2120,
	1464, 165, 125, 1023, 1035, 1021, 83, 1012, 123, 124,
	97, 1806, 1832, 1022, 130, 131, 1187, 733, 1024, 1048,
	1508, 104, 739, 82, 1254, 91, 1233, 903, 96, 4110,
	2453, 2454, 2455, 3963, 3548, 1513, 3226, 2453, 2897, 1043,
	1047, 2929, 2928, 2497, 3503, 3540, 4059, 2962, 2963, 665,
	3958, 3959, 1029, 126, 720, 2305, 2306, 2031, 1924, 3964,
	2030, 2029, 1140, 1143, 2028, 132, 2027, 2026, 1999, 1203,
	3613, 2544, 723, 1069, 724, 1157, 1158, 1159, 1678, 1162,
	1163, 1164, 1165, 1118, 4053, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1117, 1063, 1013, 1151, 2772, 1015, 1062, 1030,
	3125, 2486, 1427, 2802, 3613, 1093, 93, 3085, 2, 705,
	3937, 1144, 1147, 1148, 126, 1092, 721, 1709, 1204, 3248,
	1037, 1091, 1090, 2899, 4115, 4080, 1080, 4132, 4075, 4100,
	3416, 699, 3245, 4063, 2919, 1448, 93, 3415, 3248, 705,
	2922, 3959, 725, 93, 1160, 2485, 3913, 3612, 1085, 4114,
	2737, 907, 109, 110, 111, 2047, 114, 2036, 4062, 120,
	4061, 93, 189, 3303, 3833, 659, 1061, 1065, 905, 3832,
	1142, 188, 1141, 1094, 4090, 3246, 3553, 718, 719, 3554,
	3843, 4057, 126, 699, 3572, 4060, 1418, 1008, 1009, 1010,
	1011, 3612, 3561, 1019, 3246, 127, 4002, 957, 958, 959,
	84, 3252, 4010, 1061, 1065, 905, 2479, 3842, 170, 2078,
	699, 4037, 3328, 84, 957, 958, 959, 1821, 3177, 3178,
	3252, 1050, 1051, 84, 2816, 2773, 696, 2851, 2936, 2937,
	2850, 2372, 2373, 2852, 2008, 2009, 1745, 3176, 1746, 2961,
	1684, 2550, 2371, 2945, 2553, 1211, 4014, 699, 1251, 2817,
	1212, 2856, 2484, 4042, 1223, 1006, 3571, 1005, 1210, 3929,
	1209, 1211, 3660, 1224, 167, 1964, 1212, 168, 2863, 699,
	1445, 4040, 1446, 1447, 681, 1228, 1229, 3311, 93, 3309,
	4046, 4047, 3019, 1089, 1217, 1196, 1197, 679, 3197, 3198,
	187, 93, 699, 3942, 699, 4041, 2390, 2389, 661, 2809,
	2810, 93, 2542, 3280, 2007, 2430, 713, 699, 1741, 2551,
	2011, 1161, 717, 711, 3249, 1428, 2307, 1199, 1007, 3285,
	2947, 3884, 4018, 3885, 2461, 1432, 2907, 676, 2424, 1686,
	2932, 2500, 4112, 3249, 2973, 2336, 691, 3273, 1186, 4018,
	1465, 1087, 700, 1940, 1914, 3274, 84, 1244, 1417, 86,
	2336, 686, 1240, 2505, 1242, 1249, 2520, 1225, 2521, 1074,
	2522, 689, 3300, 1250, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1474, 1473, 1475, 1476, 1226, 1227, 4081, 1218, 1230,
	1232, 1192, 2949, 2545, 2546, 2548, 2547, 3282, 1915, 1231,
	1916, 1054, 1239, 1241, 700, 3281, 2502, 3196, 4082, 3542,
	3541, 2504, 1965, 171, 2523, 1167, 1166, 3817, 2506, 3199,
	2464, 1097, 177, 1825, 3538, 1098, 3617, 1116, 2975, 2349,
	1127, 700, 3199, 1098, 93, 1136, 1135, 4133, 1134, 666,
	1133, 668, 682, 1442, 702, 1132, 701, 672, 1689, 670,
	674, 683, 675, 2503, 669, 1131, 680, 3020, 1130, 671,
	684, 685, 688, 692, 693, 694, 690, 687, 700, 678,
	703, 1129, 1124, 2900, 1137, 1146, 3453, 1479, 1479, 1088,
	4054, 1109, 1073, 4087, 1073, 1145, 2423, 1110, 1071, 1073,
	700, 1109, 1958, 2437, 2950, 1064, 1058, 1056, 2985, 2984,
	2983, 1049, 2490, 2977, 3219, 2981, 2489, 2976, 1237, 2974,
	1954, 1419, 1238, 700, 2979, 700, 1255, 1154, 1255, 1255,
	2931, 1819, 1243, 2978, 1818, 3084, 1817, 2917, 700, 4055,
	1115, 1955, 1064, 1058, 1056, 1119, 1109, 2334, 2335, 3537,
	1121, 2980, 2982, 1742, 1122, 1120, 162, 1236, 1815, 663,
	658, 1438, 2334, 2335, 1430, 2512, 2508, 2510, 2511, 2509,
	2513, 2514, 3925, 2966, 2565, 1123, 1480, 1481, 1017, 1489,
	1494, 1495, 3490, 1498, 1500, 1501, 1502, 1503, 1128, 1506,
	1507, 1509, 1509, 2934, 1509, 1509, 1514, 1514, 1514, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1095, 1245, 3936, 1486, 1639, 1409, 1641, 1642, 1643,
	1644, 1645, 1410, 1411, 3501, 3502, 2898, 3611, 954, 1514,
	1514, 1514, 1514, 1514, 1514, 2483, 2921, 1499, 1926, 1925,
	1927, 1928, 1929, 704, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 954, 1482,
	1483, 1484, 1485, 1432, 697, 954, 2865, 3570, 2901, 1496,
	1057, 3611, 1426, 3454, 4126, 1679, 1490, 4016, 92, 698,
	2920, 1208, 1510, 163, 1511, 1512, 4045, 3301, 1125, 1846,
	175, 92, 3250, 3251, 4016, 1207, 1195, 1213, 1214, 1215,
	1216, 92, 1515, 1516, 1190, 3254, 2481, 1057, 2552, 4015,
	3399, 3250, 3251, 1116, 2427, 87, 1116, 2944, 1198, 3472,
	2943, 1252, 1253, 2847, 3254, 2812, 4015, 1221, 1685, 2749,
	4044, 183, 2081, 1733, 1017, 2551, 1640, 1708, 1017, 1201,
	1676, 3093, 3092, 122, 1017, 1437, 1434, 1435, 1436, 1441,
	1443, 1440, 2807, 1439, 2428, 664, 1476, 2378, 1479, 2953,
	3175, 2426, 2576, 1433, 1709, 2148, 1459, 1945, 1234, 1032,
	1248, 1442, 2121, 1677, 164, 169, 166, 172, 173, 174,
	176, 178, 179, 180, 181, 1206, 2122, 2777, 2779, 3950,
	182, 184, 185, 186, 117, 2429, 1139, 3533, 1845, 3466,
	1692, 1116, 2501, 2020, 1696, 2425, 1951, 1747, 2993, 1194,
	1016, 1200, 2113, 1969, 1202, 2113, 1115, 2585, 4091, 1115,
	3656, 2890, 3183, 1447, 92, 1109, 1112, 1113, 1448, 1073,
	3508, 1694, 3507, 1106, 1110, 102, 1126, 1677, 2468, 1695,
	1944, 1855, 2576, 103, 1646, 1647, 1648, 1649, 1650, 1651,
	2038, 2040, 2041, 1854, 1105, 1683, 1446, 1447, 1844, 2478,
	1089, 1185, 2476, 2140, 1153, 1127, 118, 3184, 2142, 1421,
	1125, 1670, 2147, 2143, 2039, 105, 2144, 2145, 2146, 1438,
	4083, 2141, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 3186, 1116, 3491, 4124, 1084, 2473, 4125, 1086, 4123,
	2956, 2480, 1028, 1448, 1115, 2955, 1822, 1823, 1824, 3181,
	1109, 1112, 1113, 1838, 1073, 1235, 2119, 1690, 1106, 1110,
	2268, 4134, 3318, 1693, 2956, 1189, 3197, 3198, 1205, 2955,
	1909, 1220, 1711, 3182, 1191, 2477, 1831, 1013, 2473, 1691,
	3980, 1860, 1222, 1861, 1714, 1863, 1865, 1015, 1448, 1869,
	1871, 1873, 1875, 1877, 1850, 2778, 4128, 1891, 3918, 1680,
	1970, 1848, 1848, 1445, 1255, 1446, 1447, 3188, 3277, 1963,
	1738, 1739, 2995, 1899, 1900, 1116, 1849, 2475, 1934, 1905,
	1906, 1948, 3825, 1946, 1947, 3981, 1949, 1950, 1709, 1941,
	3567, 1942, 3568, 3824, 1943, 1115, 1814, 1089, 1932, 1081,
	1119, 1109, 3815, 3919, 1448, 1121, 1083, 1082, 4135, 1122,
	1120, 3583, 1828, 3582, 1829, 1827, 3515, 2049, 1841, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476,
	1188, 2050, 1477, 1478, 2048, 3196, 3514, 1697, 1445, 1921,
	1446, 1447, 1933, 1895, 3504, 1852, 1088, 3199, 1471, 1472,
	1474, 1473, 1475, 1476, 1709, 1087, 2557, 2558, 2559, 1448,
	1959, 2118, 1931, 1448, 957, 958, 959, 3227, 188, 3215,
	2620, 2872, 1887, 2871, 2870, 1890, 1448, 1892, 1115, 2433,
	1152, 1935, 1465, 1445, 1149, 1446, 1447, 2582, 4096, 1709,
	1919, 1918, 127, 126, 1092, 1917, 1413, 1907, 1901, 1898,
	1091, 1090, 1897, 1920, 1820, 170, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1474, 1473, 1475, 1476, 1975, 1467, 1468,
	1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476, 1896, 1255,
	1255, 1867, 3498, 705, 2854, 705, 1971, 1972, 108, 1445,
	1997, 1446, 1447, 85, 1709, 705, 85, 4094, 1709, 107,
	1976, 106, 2449, 2448, 2447, 2446, 4084, 1983, 1984, 1985,
	2581, 167, 1741, 3185, 168, 2445, 2444, 1448, 1996, 1718,
	2798, 4111, 1709, 1437, 1434, 1435, 1436, 1441, 1443, 1440,
	3945, 1439, 99, 1088, 1448, 4071, 1709, 187, 3944, 101,
	3922, 1433, 3921, 100, 1445, 3920, 1446, 1447, 1445, 1737,
	1446, 1447, 1722, 2076, 2076, 1465, 2622, 2965, 3820, 41,
	3804, 1445, 41, 1446, 1447, 1719, 1444, 1709, 1754, 1709,
	1444, 1709, 3938, 2074, 2074, 2077, 1448, 2798, 4009, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476,
	1448, 3803, 2042, 2798, 3988, 3851, 1973, 1448, 1709, 99,
	3655, 4024, 1709, 1977, 3653, 1979, 1980, 1981, 1982, 3579,
	100, 1675, 1986, 1674, 1465, 2798, 3984, 1461, 1721, 1462,
	2159, 3971, 1709, 3850, 1998, 1469, 1470, 1471, 1472, 1474,
	1473, 1475, 1476, 1463, 1477, 1478, 1460, 1676, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1474, 1473, 1475, 1476, 1673,
	171, 1893, 1445, 3512, 1446, 1447, 1448, 3551, 3935, 177,
	4022, 1709, 3828, 1709, 3808, 1709, 2021, 1448, 3497, 1445,
	1677, 1446, 1447, 3286, 4020, 1709, 83, 2046, 2612, 83,
	3283, 3897, 1709, 2004, 2005, 3218, 1938, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1450, 3217, 2052, 2881, 2054, 2055,
	2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067,
	2068, 1445, 2051, 1446, 1447, 2798, 3816, 3551, 1709, 1974,
	2798, 3549, 1448, 2868, 2080, 1445, 1978, 1446, 1447, 1448,
	2277, 2053, 1445, 1448, 1446, 1447, 1672, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 2473, 1709, 2107, 2109, 2533, 2532,
	1448, 3895, 1709, 3189, 3470, 1709, 1448, 3193, 2279, 2704,
	1709, 2278, 3208, 3207, 3192, 108, 2266, 1490, 2123, 2124,
	2125, 2126, 2158, 1448, 2341, 2342, 107, 2495, 106, 2494,
	2173, 2331, 2137, 162, 2114, 3205, 3206, 101, 3203, 3204,
	2264, 1445, 2843, 1446, 1447, 1448, 3203, 3202, 3194, 2313,
	1465, 2794, 1445, 3190, 1446, 1447, 3892, 1709, 3191, 2357,
	2822, 1709, 3807, 3846, 2282, 2283, 101, 3874, 1709, 2551,
	2930, 3559, 2624, 2277, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1474, 1473, 1475, 1476, 2268, 2387, 1810, 2911, 2265,
	3485, 102, 2904, 2905, 2798, 2797, 1709, 2908, 2267, 103,
	101, 2279, 1448, 2000, 2346, 2844, 1448, 1445, 1709, 1446,
	1447, 102, 952, 1966, 1445, 2846, 1446, 1447, 1445, 103,
	1446, 1447, 2045, 2171, 2578, 2359, 2324, 1930, 1448, 3441,
	1709, 1078, 1922, 2182, 1448, 1445, 2281, 1446, 1447, 2284,
	2285, 1445, 1912, 1446, 1447, 2578, 1709, 2396, 2397, 2398,
	2399, 2843, 2391, 1908, 2392, 2393, 2394, 2395, 1445, 1709,
	1446, 1447, 2382, 2381, 1078, 1904, 1029, 1903, 1448, 1902,
	2402, 2403, 2404, 2405, 2363, 2312, 1720, 1448, 2079, 1709,
	1445, 2025, 1446, 1447, 1810, 1809, 3434, 1709, 2300, 1246,
	3431, 1709, 1753, 1752, 2323, 2814, 2814, 2886, 2318, 3140,
	2319, 2462, 2416, 2255, 2256, 2257, 2258, 2259, 2422, 2385,
	3465, 2344, 2326, 4085, 2844, 3170, 2474, 1448, 3429, 1709,
	2386, 2369, 2368, 2367, 2551, 2551, 3465, 107, 2821, 1063,
	2384, 2383, 1444, 3467, 1062, 2105, 3976, 1445, 1448, 1446,
	1447, 1445, 3949, 1446, 1447, 2798, 2459, 2822, 3420, 3205,
	2432, 3113, 3391, 1709, 2370, 2578, 2704, 2609, 2302, 2608,
	2473, 3389, 1709, 1445, 2182, 1446, 1447, 2822, 3465, 1445,
	163, 1446, 1447, 2456, 2473, 2417, 3516, 175, 2413, 2406,
	2408, 2409, 2339, 2822, 2467, 1118, 2431, 2470, 2435, 2471,
	1713, 2303, 2443, 2079, 2022, 1848, 1444, 2006, 1448, 2487,
	1953, 3385, 1709, 1445, 1117, 1446, 1447, 2466, 1448, 2469,
	2417, 2465, 1445, 1448, 1446, 1447, 1740, 1018, 183, 1448,
	2572, 1100, 3382, 1709, 2488, 1099, 2491, 3517, 3518, 3519,
	2492, 2493, 93, 2097, 2086, 2087, 2088, 2089, 2099, 2090,
	2091, 2092, 2104, 2100, 2093, 2094, 2101, 2102, 2103, 2095,
	2096, 2098, 1445, 4050, 1446, 1447, 1448, 2556, 3991, 1710,
	1712, 164, 169, 166, 172, 173, 174, 176, 178, 179,
	180, 181, 2498, 1445, 1448, 1446, 1447, 182, 184, 185,
	186, 1500, 1465, 1500, 2564, 1448, 1883, 3839, 1716, 1448,
	3805, 3483, 3380, 1709, 1448, 93, 4106, 3378, 1709, 2568,
	3667, 3532, 3230, 3376, 1709, 3529, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1474, 1473, 1475, 1476, 2526, 1448, 3510,
	3333, 2571, 3332, 1812, 2415, 3275, 3232, 3228, 2912, 1448,
	2412, 2407, 2401, 1445, 1448, 1446, 1447, 1884, 1885, 1886,
	3374, 1709, 2400, 1445, 1937, 1446, 1447, 1843, 1445, 2279,
	1446, 1447, 2278, 1448, 1445, 1839, 1446, 1447, 3372, 1709,
	1808, 119, 2877, 2002, 2878, 1190, 3279, 2541, 4104, 3370,
	1709, 3477, 3478, 3368, 1709, 1448, 3840, 2343, 3366, 1709,
	2430, 2316, 2549, 4078, 3957, 2347, 3879, 2350, 3480, 1448,
	2025, 1445, 3520, 1446, 1447, 3224, 1448, 3223, 3222, 3140,
	1879, 1448, 3364, 1709, 2891, 3482, 2527, 2560, 1448, 1445,
	2878, 1446, 1447, 3362, 1709, 2046, 3953, 3159, 3360, 1709,
	1445, 3158, 1446, 1447, 1445, 2003, 1446, 1447, 3637, 1445,
	3636, 1446, 1447, 2561, 1717, 2563, 3841, 3358, 1709, 3521,
	3522, 3523, 2330, 2322, 2566, 3162, 2567, 1880, 1881, 1882,
	3163, 3471, 3118, 1445, 3117, 1446, 1447, 3917, 3648, 3356,
	1709, 3646, 1707, 1703, 1445, 2584, 1446, 1447, 2562, 1445,
	3160, 1446, 1447, 3354, 1709, 3161, 1448, 1704, 3635, 3458,
	3352, 1709, 3461, 3127, 1952, 3338, 1709, 3457, 1445, 1004,
	1446, 1447, 3316, 1709, 3164, 1448, 2831, 2832, 2748, 1448,
	2535, 2536, 2320, 2321, 1706, 2538, 1705, 2569, 1033, 3201,
	1445, 2861, 1446, 1447, 2539, 2882, 1034, 2618, 2121, 2736,
	1156, 1155, 1448, 3294, 1445, 4120, 1446, 1447, 2877, 1412,
	2780, 1445, 2122, 1446, 1447, 2959, 1445, 2076, 1446, 1447,
	3130, 3132, 99, 1445, 1448, 1446, 1447, 2918, 1017, 3133,
	101, 108, 99, 100, 127, 1448, 3463, 2074, 2783, 101,
	2769, 1709, 107, 100, 106, 1448, 2341, 2342, 3220, 2819,
	2820, 2781, 2530, 101, 4029, 3934, 3835, 1448, 2357, 2767,
	1709, 1017, 2839, 2742, 1709, 3200, 2835, 3443, 2025, 2327,
	2519, 1448, 1041, 1042, 3116, 2507, 1448, 2555, 2784, 2591,
	2786, 2518, 3115, 106, 2524, 2525, 2719, 1709, 2529, 2517,
	2045, 1445, 2799, 1446, 1447, 2516, 2606, 2515, 3905, 2534,
	1448, 2818, 3904, 3882, 1448, 3654, 2537, 3652, 2711, 1709,
	1445, 3651, 1446, 1447, 1445, 41, 1446, 1447, 3644, 2702,
	1709, 3530, 3462, 3460, 2836, 108, 2837, 2838, 2795, 2700,
	1709, 3233, 2540, 1683, 2808, 2771, 107, 1445, 106, 1446,
	1447, 2687, 1709, 2457, 1826, 1040, 107, 3643, 3451, 1448,
	2574, 2814, 108, 2864, 2866, 2685, 1709, 1677, 2791, 1445,
	2573, 1446, 1447, 107, 1448, 4108, 4107, 2811, 3621, 2794,
	1445, 2857, 1446, 1447, 2796, 2916, 3021, 2841, 1448, 2610,
	1445, 2314, 1446, 1447, 2683, 1709, 1448, 1734, 2681, 1709,
	1448, 2845, 1445, 1726, 1446, 1447, 2848, 112, 113, 2422,
	3, 4107, 2927, 4108, 2855, 3923, 1445, 1448, 1446, 1447,
	3496, 1445, 1448, 1446, 1447, 1031, 2880, 2019, 2858, 1448,
	10, 2883, 2884, 1448, 95, 2869, 2017, 2116, 2018, 9,
	1, 8, 2117, 2679, 1709, 1445, 1415, 1446, 1447, 1445,
	1414, 1446, 1447, 2879, 3500, 1448, 4039, 677, 2677, 1709,
	2304, 1681, 1448, 2887, 4079, 4035, 1448, 2888, 2892, 2893,
	2894, 4036, 2675, 1709, 1923, 1913, 2924, 1448, 2177, 3562,
	2673, 1709, 1831, 2229, 2671, 1709, 3836, 3236, 1448, 2463,
	2969, 2970, 3528, 2420, 1445, 1108, 1446, 1447, 2913, 2914,
	1448, 2669, 1709, 152, 2379, 2903, 2667, 1709, 2380, 1445,
	2923, 1446, 1447, 2665, 1709, 4004, 116, 2663, 1709, 1066,
	115, 1111, 1219, 1445, 1448, 1446, 1447, 2458, 1448, 3552,
	2862, 1445, 1448, 1446, 1447, 1445, 2388, 1446, 1447, 2661,
	1709, 2986, 2948, 1448, 1759, 2967, 2659, 1709, 1448, 1757,
	3436, 2951, 1445, 1758, 1446, 1447, 1448, 1445, 2261, 1446,
	1447, 2657, 1709, 1448, 1445, 1756, 1446, 1447, 1445, 1761,
	1446, 1447, 2655, 1709, 3004, 3005, 3006, 3007, 3008, 3009,
	3010, 3011, 3012, 3013, 2653, 1709, 1760, 1448, 2294, 3302,
	1445, 2611, 1446, 1447, 3398, 2987, 2010, 1445, 2990, 1446,
	1447, 1445, 712, 1446, 1447, 1710, 2301, 2925, 2648, 1709,
	2834, 706, 1445, 3933, 1446, 1447, 2644, 1709, 190, 1748,
	1727, 3412, 1150, 1445, 667, 1446, 1447, 2642, 1709, 3209,
	2496, 1448, 2635, 1709, 673, 1445, 1497, 1446, 1447, 2325,
	2633, 1709, 2971, 3023, 1448, 2001, 3114, 3432, 3079, 2849,
	2988, 2957, 1060, 1052, 2958, 2315, 2785, 1059, 3813, 1445,
	1448, 1446, 1447, 1445, 3148, 1446, 1447, 1445, 3455, 1446,
	1447, 3126, 3812, 2968, 3128, 2801, 3131, 3124, 1445, 3097,
	1446, 1447, 3916, 1445, 3645, 1446, 1447, 3086, 1448, 3989,
	2859, 1445, 3088, 1446, 1447, 1723, 3419, 2583, 1445, 2111,
	1446, 1447, 1487, 2840, 3014, 2357, 2827, 2830, 2831, 2832,
	2828, 2356, 2829, 2833, 2266, 3397, 2266, 3616, 2037, 737,
	736, 734, 1445, 3059, 1446, 1447, 1448, 2787, 3147, 3534,
	85, 2815, 1451, 2357, 2357, 2357, 2357, 2357, 2264, 942,
	2264, 2434, 3097, 2775, 3393, 1735, 2989, 3069, 3070, 3071,
	3072, 3073, 2826, 2357, 2824, 2823, 2357, 2528, 2364, 3479,
	3096, 3152, 3087, 3475, 3089, 3169, 1445, 1448, 1446, 1447,
	4031, 2359, 3330, 3121, 2358, 2354, 2793, 2889, 1448, 1445,
	893, 1446, 1447, 892, 746, 1448, 738, 3112, 728, 891,
	1448, 890, 3108, 3493, 3262, 1445, 1020, 1446, 1447, 2359,
	2359, 2359, 2359, 2359, 2933, 1963, 3119, 1448, 3276, 3122,
	3329, 2935, 3134, 3135, 1448, 2860, 3109, 3110, 3111, 2359,
	3253, 3171, 2359, 1445, 3172, 1446, 1447, 3151, 3272, 1021,
	3261, 3154, 3155, 3153, 3157, 3120, 3156, 1022, 1429, 3165,
	1699, 102, 722, 2938, 2939, 2940, 2941, 2942, 3173, 103,
	1079, 3321, 1448, 3299, 3940, 2554, 1448, 3179, 3327, 1698,
	3947, 1445, 2765, 1446, 1447, 3244, 3546, 2025, 2952, 3212,
	2873, 3211, 3225, 3210, 2764, 2909, 3061, 2450, 3063, 68,
	3213, 3214, 1448, 45, 3911, 3977, 1448, 885, 882, 3618,
	3619, 2760, 2960, 3620, 3074, 3075, 3076, 3077, 2759, 3082,
	2422, 3255, 1445, 3234, 1446, 1447, 3083, 3960, 3137, 3961,
	3264, 3270, 881, 1445, 1448, 1446, 1447, 3263, 3962, 2166,
	1445, 1425, 1446, 1447, 1422, 1445, 4052, 1446, 1447, 2012,
	1448, 94, 3287, 36, 3143, 3290, 2758, 3289, 1448, 3143,
	2757, 35, 1445, 34, 1446, 1447, 3297, 33, 32, 1445,
	26, 1446, 1447, 25, 24, 3304, 3305, 23, 3306, 22,
	3256, 3308, 29, 3310, 3307, 3312, 2756, 19, 21, 20,
	2755, 18, 3247, 4074, 4119, 121, 54, 3322, 3323, 3324,
	3325, 3326, 51, 49, 129, 128, 52, 1445, 48, 1446,
	1447, 1445, 1193, 1446, 1447, 46, 31, 30, 2746, 17,
	16, 1500, 15, 14, 13, 1500, 12, 11, 2570, 7,
	6, 39, 2575, 38, 2745, 28, 37, 1445, 27, 1446,
	1447, 1445, 2744, 1446, 1447, 3235, 4, 2896, 2452, 3414,
	0, 0, 0, 0, 0, 2579, 3418, 2580, 1707, 1703,
	0, 0, 2587, 0, 0, 0, 2589, 2590, 0, 1445,
	0, 1446, 1447, 1704, 0, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 1445, 2607, 1446, 1447, 3146,
	1448, 0, 0, 1445, 3298, 1446, 1447, 0, 1700, 1701,
	1706, 2357, 1705, 3444, 3445, 0, 0, 3447, 0, 2613,
	2614, 2615, 2616, 2617, 3492, 2619, 3452, 0, 3459, 2621,
	0, 0, 0, 2626, 2627, 0, 2628, 0, 1448, 2631,
	3464, 2632, 2634, 2636, 2637, 2638, 2639, 2640, 2641, 2643,
	2645, 2646, 2647, 2649, 726, 2651, 2652, 2654, 2656, 2658,
	2660, 2662, 2664, 2666, 2668, 2670, 2672, 2674, 2676, 2678,
	2680, 2682, 2684, 2686, 2688, 2689, 2690, 2359, 2692, 3487,
	2694, 3484, 2696, 2697, 2743, 2699, 2701, 2703, 3494, 3495,
	3481, 2706, 3449, 3486, 3421, 2710, 3423, 3424, 3425, 2715,
	2716, 2717, 2718, 3511, 3264, 3513, 3292, 3293, 1448, 0,
	0, 3263, 2729, 2730, 2731, 2732, 2733, 2734, 3556, 3557,
	2738, 2739, 2740, 1448, 0, 3474, 3505, 3506, 2741, 1448,
	0, 0, 0, 2747, 1448, 1445, 0, 1446, 1447, 2750,
	2751, 2752, 2753, 2754, 3488, 3489, 0, 0, 0, 0,
	2761, 2762, 1448, 2763, 0, 0, 2766, 2768, 2325, 0,
	2770, 1039, 3221, 0, 1045, 1045, 0, 1448, 0, 0,
	2782, 0, 0, 1445, 0, 1446, 1447, 0, 1448, 3539,
	0, 0, 0, 3543, 3544, 3545, 3558, 0, 3259, 1448,
	0, 0, 2735, 0, 0, 0, 1448, 0, 0, 0,
	1448, 0, 3271, 0, 1448, 0, 3574, 2728, 0, 1448,
	3535, 3536, 0, 2727, 0, 0, 0, 0, 2726, 0,
	0, 3288, 1448, 0, 3291, 0, 0, 0, 0, 0,
	1448, 0, 0, 0, 1448, 0, 2725, 0, 0, 0,
	0, 0, 0, 1445, 0, 1446, 1447, 0, 0, 0,
	0, 2724, 1448, 0, 0, 0, 1448, 0, 1445, 0,
	1446, 1447, 2723, 0, 1445, 0, 1446, 1447, 0, 1445,
	1448, 1446, 1447, 2722, 1448, 3624, 0, 3625, 3626, 3627,
	2721, 0, 1448, 3634, 2720, 3638, 3639, 1445, 2714, 1446,
	1447, 1448, 0, 2713, 0, 0, 0, 3614, 0, 1448,
	0, 3640, 1445, 0, 1446, 1447, 2712, 0, 3147, 0,
	85, 0, 3147, 1445, 2709, 1446, 1447, 0, 2708, 0,
	0, 0, 0, 0, 1445, 0, 1446, 1447, 2076, 1448,
	0, 1445, 0, 1446, 1447, 1445, 2707, 1446, 1447, 1445,
	2705, 1446, 1447, 3641, 1445, 0, 1446, 1447, 2074, 3669,
	3650, 3649, 3578, 0, 2698, 3657, 3659, 1445, 2695, 1446,
	1447, 0, 3661, 0, 0, 1445, 2693, 1446, 1447, 1445,
	0, 1446, 1447, 0, 1448, 2691, 41, 0, 0, 3819,
	0, 3673, 0, 2650, 0, 3448, 0, 1445, 0, 1446,
	1447, 1445, 0, 1446, 1447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1445, 0, 1446, 1447, 1445,
	0, 1446, 1447, 2630, 3811, 3810, 0, 1445, 0, 1446,
	1447, 3838, 0, 0, 0, 3826, 1445, 0, 1446, 1447,
	0, 0, 3830, 3831, 1445, 0, 1446, 1447, 0, 3809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2999,
	3000, 3001, 3002, 3003, 3876, 3877, 2076, 3663, 2629, 3670,
	3671, 0, 0, 0, 1445, 0, 1446, 1447, 0, 3018,
	3509, 0, 0, 3821, 3822, 3823, 2074, 3880, 2827, 2830,
	2831, 2832, 2828, 0, 2829, 2833, 0, 0, 3477, 3478,
	3524, 0, 3605, 3525, 3526, 3527, 0, 0, 0, 3883,
	0, 3147, 3665, 3886, 0, 0, 0, 0, 0, 1445,
	3814, 1446, 1447, 3143, 0, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1635, 1636, 1637, 1638,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 3881, 3927, 3924, 3909, 3908, 3146,
	1448, 3906, 3907, 3146, 1448, 0, 0, 0, 3941, 0,
	1448, 0, 0, 0, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 3149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3926, 0, 0, 0, 0, 3167, 0, 0, 3930, 0,
	0, 3943, 0, 0, 0, 0, 0, 3946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3818, 0, 0, 0, 0, 0, 0, 0, 3948, 0,
	0, 0, 0, 0, 2625, 0, 0, 0, 2623, 0,
	0, 0, 41, 3915, 2588, 0, 0, 0, 2577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3966, 0, 0, 3967, 0, 0, 0, 0, 0,
	3986, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 1449, 3932, 3975, 1445, 0, 1446, 1447, 1445,
	0, 1446, 1447, 3982, 0, 1445, 0, 1446, 1447, 1445,
	0, 1446, 1447, 0, 0, 3992, 0, 0, 3995, 3838,
	4006, 0, 1505, 4000, 0, 4017, 4003, 3951, 3997, 0,
	3996, 3994, 3296, 3999, 3998, 0, 0, 3990, 0, 0,
	0, 0, 0, 4027, 0, 0, 0, 0, 0, 0,
	4030, 41, 3146, 0, 3313, 3314, 4048, 3315, 4038, 3317,
	3319, 4043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4056, 4058, 0, 0, 0, 0, 4017, 0, 0,
	4069, 0, 0, 0, 0, 3331, 0, 0, 0, 0,
	3335, 3336, 3337, 3339, 3340, 3341, 3342, 3343, 3344, 3345,
	3346, 3347, 3348, 3349, 3350, 3351, 3353, 3355, 3357, 3359,
	3361, 3363, 3365, 3367, 3369, 3371, 3373, 3375, 3377, 3379,
	3381, 3383, 3384, 3386, 3387, 3388, 3390, 2076, 4092, 3392,
	4073, 3394, 3395, 3396, 4101, 4103, 3400, 3401, 3402, 3403,
	3404, 3405, 3406, 3407, 3408, 3409, 3410, 2074, 4102, 4113,
	4099, 4098, 4105, 1963, 4017, 3417, 4088, 4121, 4089, 3422,
	4068, 0, 0, 3426, 3427, 3987, 3428, 3430, 0, 3433,
	3435, 4129, 3437, 3438, 3439, 3440, 4127, 0, 0, 0,
	3446, 3143, 0, 3955, 0, 2076, 0, 0, 4137, 0,
	0, 3965, 4138, 4139, 3877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 4136, 0, 0, 3939,
	0, 0, 0, 0, 0, 3468, 3469, 4072, 0, 3473,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 4064, 0, 0, 0, 0, 0, 4086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3952, 0, 0, 0, 3550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3569, 0, 0,
	3573, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 3584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 193, 0, 1777, 0, 710, 0,
	0, 0, 0, 716, 0, 0, 3607, 0, 0, 0,
	0, 1967, 0, 0, 193, 0, 0, 0, 0, 3615,
	0, 0, 0, 0, 0, 0, 0, 3622, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 193, 716, 0, 1790, 1793,
	1794, 1795, 1796, 1797, 1798, 0, 1799, 1800, 1802, 1803,
	1801, 1804, 1805, 1778, 1779, 1780, 1781, 1762, 1763, 1791,
	0, 1765, 0, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 0, 0, 1775, 1782, 1783, 1784, 1785, 0,
	1786, 1787, 1788, 1789, 1790, 1793, 1794, 1795, 1796, 1797,
	1798, 0, 1799, 1800, 1802, 1803, 1801, 1804, 1805, 1778,
	1779, 1780, 1781, 1762, 1763, 1791, 0, 1765, 0, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 0, 0,
	1775, 1782, 1783, 1784, 1785, 0, 1786, 1787, 1788, 1789,
	0, 0, 0, 0, 3827, 0, 0, 0, 0, 0,
	0, 0, 0, 3834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3844, 3845, 0, 3847, 0, 3848, 3849,
	0, 0, 0, 3852, 3853, 3854, 3855, 3856, 3857, 3858,
	3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868,
	3869, 3870, 3871, 3872, 3873, 0, 3875, 3878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3887, 3888, 3889, 3890, 3891, 3893, 3894, 3896,
	3898, 3899, 3901, 0, 0, 0, 0, 0, 0, 2032,
	2033, 2034, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	2083, 0, 0, 0, 0, 2106, 1045, 1045, 2110, 1792,
	0, 0, 2115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 0, 2138, 0,
	0, 0, 2160, 2161, 2162, 2163, 2164, 2165, 2167, 0,
	2172, 0, 2174, 2175, 2176, 1792, 2178, 2179, 2180, 0,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 0,
	0, 0, 0, 0, 2260, 0, 2262, 0, 2269, 2270,
	2271, 2272, 2273, 2274, 1045, 0, 1045, 1045, 1045, 1045,
	1045, 0, 0, 0, 0, 0, 0, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 0, 2295, 2296, 2297, 2298,
	2299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 3972, 0,
	0, 0, 0, 0, 3973, 3974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2337, 2338, 0, 0,
	0, 188, 0, 0, 0, 0, 3985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2376, 0, 0, 127, 1465, 149, 0, 0,
	0, 0, 4011, 4012, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 4019, 4021, 4023, 0,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1473, 1475,
	1476, 0, 0, 0, 0, 193, 188, 193, 0, 160,
	193, 4051, 0, 0, 0, 148, 0, 2902, 0, 0,
	0, 0, 0, 2418, 0, 0, 0, 0, 0, 0,
	127, 0, 149, 0, 167, 0, 0, 168, 0, 0,
	0, 0, 716, 170, 716, 716, 0, 0, 0, 4070,
	0, 0, 0, 0, 0, 0, 136, 137, 159, 158,
	187, 0, 0, 0, 716, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	148, 0, 0, 4093, 4095, 4097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 167,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4118, 0, 0, 0,
	0, 1834, 1835, 159, 158, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 4130, 4131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 134, 156, 141, 133, 0, 154, 155, 2105, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 143, 138,
	139, 140, 144, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 153, 1836, 156, 0, 1833,
	0, 154, 155, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 2086, 2087, 2088,
	2089, 2099, 2090, 2091, 2092, 2104, 2100, 2093, 2094, 2101,
	2102, 2103, 2095, 2096, 2098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2592, 2593,
	2594, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 716, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 157, 0, 0,
	716, 716, 0, 716, 0, 716, 716, 0, 716, 716,
	716, 716, 716, 716, 0, 0, 0, 0, 0, 0,
	0, 1492, 0, 0, 1492, 716, 1492, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 151, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 716, 0, 193, 0,
	175, 0, 0, 0, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 150, 0, 0, 151, 0,
	0, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	716, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 169, 166, 172, 173, 174,
	176, 178, 179, 180, 181, 0, 0, 0, 0, 0,
	182, 184, 185, 186, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	169, 166, 172, 173, 174, 176, 178, 179, 180, 181,
	0, 0, 0, 0, 0, 182, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 2964, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 2991, 2992, 0, 0,
	2994, 0, 0, 2996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3015, 3016, 3017, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 3022, 1492, 0, 3024, 3025,
	3026, 0, 0, 0, 3027, 3028, 0, 0, 3029, 0,
	3030, 0, 0, 1492, 0, 0, 0, 3031, 0, 3032,
	0, 0, 0, 3033, 0, 3034, 0, 0, 3035, 0,
	3036, 0, 3037, 0, 3038, 0, 3039, 0, 3040, 0,
	3041, 0, 3042, 0, 3043, 0, 3044, 0, 3045, 0,
	3046, 0, 3047, 0, 3048, 0, 3049, 0, 3050, 0,
	3051, 0, 3052, 0, 0, 0, 3053, 0, 3054, 0,
	3055, 0, 0, 3056, 0, 3057, 0, 3058, 0, 2232,
	3060, 0, 0, 3062, 0, 0, 3064, 3065, 3066, 3067,
	188, 0, 0, 0, 3068, 2232, 2232, 2232, 2232, 2232,
	0, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	3078, 0, 0, 0, 127, 0, 149, 0, 3091, 0,
	0, 3095, 0, 1045, 0, 0, 0, 170, 0, 0,
	3098, 3099, 3100, 3101, 3102, 3103, 0, 0, 0, 3104,
	3105, 0, 3106, 0, 3107, 0, 0, 2280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 168, 0, 0, 3138,
	0, 193, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1835, 159, 158, 187,
	0, 0, 0, 0, 3168, 0, 0, 0, 0, 0,
	193, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 716, 0, 0,
	2280, 193, 0, 193, 0, 193, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	1836, 156, 0, 1833, 0, 154, 155, 716, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 84, 43, 44, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 937,
	3320, 0, 0, 0, 0, 90, 0, 0, 0, 47,
	75, 76, 0, 73, 77, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 3334, 716, 0, 0,
	0, 0, 716, 0, 0, 0, 716, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 0, 0, 93, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 162, 0, 0, 0, 0,
	193, 193, 0, 0, 193, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 715, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 53, 56, 55, 58, 0, 72, 0,
	0, 81, 78, 0, 0, 0, 1492, 0, 2280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3531, 0, 60, 89, 88, 0, 0,
	70, 71, 57, 0, 0, 0, 0, 0, 79, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	62, 63, 151, 64, 65, 66, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3575, 163, 3576, 0, 0, 3577, 0, 0, 175,
	0, 0, 0, 0, 3580, 3581, 0, 0, 0, 0,
	0, 0, 0, 3585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 3586, 0, 3587,
	0, 3588, 0, 3589, 0, 3590, 0, 3591, 0, 3592,
	183, 3593, 0, 3594, 0, 3595, 0, 3596, 0, 3597,
	0, 3598, 0, 3599, 0, 3600, 0, 3601, 0, 0,
	3602, 0, 0, 0, 3603, 0, 3604, 0, 0, 0,
	0, 0, 3606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 169, 166, 172, 173, 174, 176,
	178, 179, 180, 181, 0, 3623, 0, 0, 0, 182,
	184, 185, 186, 0, 3628, 0, 3629, 3630, 0, 3631,
	193, 3632, 0, 0, 87, 0, 3633, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 3658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3666, 0, 0, 3668, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 3672, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	193, 193, 193, 193, 0, 0, 0, 0, 3914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 193, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 715, 1408, 715, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 895, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1046, 1046, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3968, 0, 0,
	3969, 0, 3970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 716,
	0, 0, 0, 1492, 0, 0, 716, 716, 1492, 193,
	193, 193, 193, 193, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 193, 0, 193,
	0, 0, 193, 193, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4065, 0, 4066, 193, 4067,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 1492, 715, 0, 0, 0, 716,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 193, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 4116,
	0, 4117, 0, 0, 715, 0, 1842, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1491, 1853, 0,
	0, 1856, 1857, 715, 715, 0, 715, 0, 715, 715,
	0, 715, 715, 715, 715, 715, 715, 0, 0, 0,
	894, 0, 0, 0, 1491, 1888, 1889, 1491, 715, 1491,
	0, 1894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 955, 0, 2268, 0, 0, 956, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 1070, 0,
	1077, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 193,
	193, 193, 0, 0, 0, 0, 0, 0, 0, 716,
	716, 662, 0, 662, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 715, 715,
	0, 0, 0, 0, 0, 0, 716, 716, 716, 716,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 955, 0, 0, 0, 943, 956,
	957, 958, 959, 944, 0, 0, 945, 946, 0, 947,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 960, 961, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3265, 3266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 716, 0, 716,
	0, 0, 0, 0, 0, 0, 3267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 716, 0, 0, 0, 715,
	0, 0, 0, 3268, 3269, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 715, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 716, 716, 908, 0, 0,
	662, 0, 0, 912, 0, 0, 0, 909, 910, 0,
	0, 0, 911, 913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 2440, 2441, 2442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 1257, 715, 1257, 1257,
	0, 0, 0, 715, 1851, 0, 0, 1851, 0, 1851,
	0, 0, 0, 0, 0, 2472, 0, 1493, 1420, 0,
	1493, 0, 1493, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1910, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 715, 0, 0, 662, 715,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1962, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 716, 0, 0, 0, 0, 1987, 1988, 662,
	662, 662, 662, 662, 662, 662, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	0, 715, 0, 0, 0, 0, 716, 2280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	1687, 1688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 716, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 1749, 1493, 0, 0, 0, 716, 0, 716, 0,
	0, 0, 0, 0, 1046, 1046, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 1859, 0, 1859, 0, 1859,
	1859, 0, 1868, 1859, 1859, 1859, 1859, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 1936, 0, 0, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1046, 1962, 1046, 1046, 1046, 1046, 1046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2853, 0,
	0, 0, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1910, 0, 0,
	0, 0, 955, 0, 0, 0, 0, 956, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 2075, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 0, 0, 0, 0, 0, 1962, 662, 0, 662,
	0, 662, 2366, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 1851, 1851,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1491,
	2926, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2070, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 662, 0, 0,
	662, 0, 2531, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 0, 0, 0, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 1962, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 1491, 0, 0, 715,
	715, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	2317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 0, 3216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1070, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 1491, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3694, 3696, 3695, 3759, 3760, 3761, 3762, 3763, 3764, 3765,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 1910, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 2070, 0, 0, 0,
	2070, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 662, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 2543, 0, 0, 0, 0, 2895, 0, 0, 0,
	0, 0, 0, 0, 0, 3700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3708, 3709, 0, 0, 3784, 3783, 3782, 0, 3499, 3780,
	3781, 3779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 662, 662, 662, 662,
	0, 0, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 715, 0, 0, 0, 0, 0, 662,
	662, 0, 0, 0, 3785, 908, 0, 763, 764, 3786,
	3787, 912, 3788, 766, 767, 909, 910, 0, 761, 765,
	911, 913, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	715, 715, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 3691, 3692, 3693, 3697,
	3698, 3699, 3710, 3757, 3758, 3766, 3768, 864, 3767, 3769,
	3770, 3771, 3774, 3775, 3776, 3777, 3772, 3773, 3778, 3674,
	3678, 3675, 3676, 3677, 3689, 3679, 3680, 3681, 3682, 3683,
	3684, 3685, 3686, 3687, 3688, 3690, 3789, 3790, 3791, 3792,
	3793, 3794, 3703, 3707, 3706, 3704, 3705, 3701, 3702, 3729,
	3728, 3730, 3731, 3732, 3733, 3734, 3735, 3737, 3736, 3738,
	3739, 3740, 3741, 3742, 3743, 3711, 3712, 3715, 3716, 3714,
	3713, 3717, 3726, 3727, 3718, 3719, 3720, 3721, 3722, 3723,
	3725, 3724, 3744, 3745, 3746, 3747, 3748, 3750, 3749, 3753,
	3754, 3752, 3751, 3756, 3755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 914, 0, 915,
	0, 0, 919, 0, 0, 0, 921, 920, 0, 922,
	884, 883, 0, 0, 916, 917, 0, 918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 2788, 0, 1491, 0, 0, 0, 0,
	715, 0, 715, 0, 2803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 715, 0, 1493, 662, 662, 662, 662, 662,
	0, 0, 0, 0, 0, 0, 0, 3166, 715, 0,
	0, 0, 0, 1910, 0, 662, 0, 0, 662, 3174,
	1962, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2885, 0, 0, 0, 0, 93, 0, 0, 955,
	0, 0, 0, 943, 956, 957, 958, 959, 944, 0,
	0, 945, 946, 0, 947, 0, 0, 0, 2329, 0,
	0, 0, 0, 0, 662, 2910, 0, 0, 952, 960,
	961, 0, 0, 0, 2915, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 715, 0, 0, 0, 715, 715,
	0, 0, 0, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3265, 3266, 0, 0,
	0, 0, 0, 662, 0, 0, 662, 715, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	0, 0, 0, 0, 0, 2070, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 3268, 3269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3080, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 715, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 1491, 0, 715, 0, 0, 0, 0,
	0, 0, 662, 0, 0, 662, 662, 662, 0, 3123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	715, 0, 0, 1257, 0, 0, 0, 0, 0, 0,
	3150, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	715, 0, 0, 2329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1910,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2329, 2329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3563, 3564, 3565, 3566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1910, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3662, 0, 3664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3829,
	0, 0, 0, 0, 0, 0, 0, 0, 1910, 0,
	0, 0, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1962, 0,
	0, 0, 0, 0, 0, 3902, 0, 0, 0, 3902,
	3902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	3413, 0, 4033, 1391, 1377, 518, 0, 1320, 1394, 1289,
	1308, 1404, 1311, 1314, 1356, 1267, 1334, 409, 1305, 1260,
	1293, 1262, 1300, 1263, 1291, 1322, 267, 1288, 1379, 1338,
	1393, 360, 264, 1269, 1294, 423, 1310, 201, 1358, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 1400, 364, 1344, 0, 489, 394, 0,
	0, 0, 1324, 1383, 1332, 1370, 1319, 1357, 1277, 1343,
	1395, 1306, 1353, 1396, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 4007, 939, 0, 0, 0,
	0, 4008, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 1302, 1350, 1390, 1303, 1352, 262, 317,
	269, 261, 570, 1401, 1382, 1266, 1331, 1389, 0, 0,
	226, 1392, 1326, 0, 1355, 0, 1407, 1261, 1346, 0,
	1264, 1268, 1403, 1387, 1297, 272, 0, 0, 0, 0,
	0, 0, 0, 1323, 1333, 1367, 1371, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 1342, 0,
	0, 0, 1273, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 1276, 0, 1296, 1368, 0, 1259, 294, 1270, 395,
	254, 0, 446, 1375, 1386, 1318, 614, 1388, 1316, 1315,
	1362, 1274, 1381, 1309, 359, 1272, 326, 195, 222, 0,
	1307, 405, 454, 466, 1380, 1292, 1301, 250, 1299, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 1341,
	1360, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 1271, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 1287, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 1376, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	1365, 1406, 418, 465, 237, 594, 488, 197, 1281, 1286,
	1279, 0, 251, 252, 1347, 565, 1282, 1280, 1336, 1337,
	1283, 1397, 1398, 1399, 1384, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 1369, 1275, 0, 1284, 1285, 1378, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 1340, 194,
	218, 362, 1402, 447, 285, 635, 604, 599, 203, 220,
	1278, 259, 1290, 1298, 0, 1304, 1312, 1313, 1325, 1327,
	1328, 1329, 1330, 1348, 1349, 1351, 1359, 1361, 1364, 1366,
	1373, 1385, 1405, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 1339, 1345, 375, 278, 301, 316, 1354, 603, 494,
	224, 459, 287, 248, 1372, 1374, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	1335, 1363, 370, 566, 567, 312, 390, 0, 0, 0,
	1391, 1377, 518, 0, 1320, 1394, 1289, 1308, 1404, 1311,
	1314, 1356, 1267, 1334, 409, 1305, 1260, 1293, 1262, 1300,
	1263, 1291, 1322, 267, 1288, 1379, 1338, 1393, 360, 264,
	1269, 1294, 423, 1310, 201, 1358, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	1400, 364, 1344, 0, 489, 394, 0, 0, 0, 1324,
	1383, 1332, 1370, 1319, 1357, 1277, 1343, 1395, 1306, 1353,
	1396, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	1302, 1350, 1390, 1303, 1352, 262, 317, 269, 261, 570,
	1401, 1382, 1266, 1331, 1389, 0, 0, 226, 1392, 1326,
	0, 1355, 0, 1407, 1261, 1346, 0, 1264, 1268, 1403,
	1387, 1297, 272, 0, 0, 0, 0, 0, 0, 0,
	1323, 1333, 1367, 1371, 1317, 0, 0, 0, 0, 0,
	0, 3175, 0, 1295, 0, 1342, 0, 0, 0, 1273,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 1276, 0,
	1296, 1368, 0, 1259, 294, 1270, 395, 254, 0, 446,
	1375, 1386, 1318, 614, 1388, 1316, 1315, 1362, 1274, 1381,
	1309, 359, 1272, 326, 195, 222, 0, 1307, 405, 454,
	466, 1380, 1292, 1301, 250, 1299, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 1341, 1360, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 1271, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 1287, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 1376, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 1365, 1406, 418,
	465, 237, 594, 488, 197, 1281, 1286, 1279, 0, 251,
	252, 1347, 565, 1282, 1280, 1336, 1337, 1283, 1397, 1398,
	1399, 1384, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	1369, 1275, 0, 1284, 1285, 1378, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 1340, 194, 218, 362, 1402,
	447, 285, 635, 604, 599, 203, 220, 1278, 259, 1290,
	1298, 0, 1304, 1312, 1313, 1325, 1327, 1328, 1329, 1330,
	1348, 1349, 1351, 1359, 1361, 1364, 1366, 1373, 1385, 1405,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 1339, 1345,
	375, 278, 301, 316, 1354, 603, 494, 224, 459, 287,
	248, 1372, 1374, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 1335, 1363, 370,
	566, 567, 312, 390, 0, 0, 0, 1391, 1377, 518,
	0, 1320, 1394, 1289, 1308, 1404, 1311, 1314, 1356, 1267,
	1334, 409, 1305, 1260, 1293, 1262, 1300, 1263, 1291, 1322,
	267, 1288, 1379, 1338, 1393, 360, 264, 1269, 1294, 423,
	1310, 201, 1358, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 1400, 364, 1344,
	0, 489, 394, 0, 0, 0, 1324, 1383, 1332, 1370,
	1319, 1357, 1277, 1343, 1395, 1306, 1353, 1396, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 1302, 1350, 1390,
	1303, 1352, 262, 317, 269, 261, 570, 1401, 1382, 1266,
	1331, 1389, 0, 0, 226, 1392, 1326, 0, 1355, 0,
	1407, 1261, 1346, 0, 1264, 1268, 1403, 1387, 1297, 272,
	0, 0, 0, 0, 0, 0, 0, 1323, 1333, 1367,
	1371, 1317, 0, 0, 0, 0, 0, 0, 3136, 0,
	1295, 0, 1342, 0, 0, 0, 1273, 1265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 1276, 0, 1296, 1368, 0,
	1259, 294, 1270, 395, 254, 0, 446, 1375, 1386, 1318,
	614, 1388, 1316, 1315, 1362, 1274, 1381, 1309, 359, 1272,
	326, 195, 222, 0, 1307, 405, 454, 466, 1380, 1292,
	1301, 250, 1299, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 1341, 1360, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 1271, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 1287, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 1376, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 1365, 1406, 418, 465, 237, 594,
	488, 197, 1281, 1286, 1279, 0, 251, 252, 1347, 565,
	1282, 1280, 1336, 1337, 1283, 1397, 1398, 1399, 1384, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 1369, 1275, 0,
	1284, 1285, 1378, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 1340, 194, 218, 362, 1402, 447, 285, 635,
	604, 599, 203, 220, 1278, 259, 1290, 1298, 0, 1304,
	1312, 1313, 1325, 1327, 1328, 1329, 1330, 1348, 1349, 1351,
	1359, 1361, 1364, 1366, 1373, 1385, 1405, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 1339, 1345, 375, 278, 301,
	316, 1354, 603, 494, 224, 459, 287, 248, 1372, 1374,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 1335, 1363, 370, 566, 567, 312,
	390, 0, 0, 0, 1391, 1377, 518, 0, 1320, 1394,
	1289, 1308, 1404, 1311, 1314, 1356, 1267, 1334, 409, 1305,
	1260, 1293, 1262, 1300, 1263, 1291, 1322, 267, 1288, 1379,
	1338, 1393, 360, 264, 1269, 1294, 423, 1310, 201, 1358,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 1400, 364, 1344, 0, 489, 394,
	0, 0, 0, 1324, 1383, 1332, 1370, 1319, 1357, 1277,
	1343, 1395, 1306, 1353, 1396, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 1302, 1350, 1390, 1303, 1352, 262,
	317, 269, 261, 570, 1401, 1382, 1266, 1331, 1389, 0,
	0, 226, 1392, 1326, 0, 1355, 0, 1407, 1261, 1346,
	0, 1264, 1268, 1403, 1387, 1297, 272, 0, 0, 0,
	0, 0, 0, 0, 1323, 1333, 1367, 1371, 1317, 0,
	0, 0, 0, 0, 0, 2345, 0, 1295, 0, 1342,
	0, 0, 0, 1273, 1265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 1276, 0, 1296, 1368, 0, 1259, 294, 1270,
	395, 254, 0, 446, 1375, 1386, 1318, 614, 1388, 1316,
	1315, 1362, 1274, 1381, 1309, 359, 1272, 326, 195, 222,
	0, 1307, 405, 454, 466, 1380, 1292, 1301, 250, 1299,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	1341, 1360, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 1271, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 1287,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 1376, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 1365, 1406, 418, 465, 237, 594, 488, 197, 1281,
	1286, 1279, 0, 251, 252, 1347, 565, 1282, 1280, 1336,
	1337, 1283, 1397, 1398, 1399, 1384, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 1369, 1275, 0, 1284, 1285, 1378,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 1340,
	194, 218, 362, 1402, 447, 285, 635, 604, 599, 203,
	220, 1278, 259, 1290, 1298, 0, 1304, 1312, 1313, 1325,
	1327, 1328, 1329, 1330, 1348, 1349, 1351, 1359, 1361, 1364,
	1366, 1373, 1385, 1405, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 1339, 1345, 375, 278, 301, 316, 1354, 603,
	494, 224, 459, 287, 248, 1372, 1374, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 1335, 1363, 370, 566, 567, 312, 390, 0, 0,
	0, 1391, 1377, 518, 0, 1320, 1394, 1289, 1308, 1404,
	1311, 1314, 1356, 1267, 1334, 409, 1305, 1260, 1293, 1262,
	1300, 1263, 1291, 1322, 267, 1288, 1379, 1338, 1393, 360,
	264, 1269, 1294, 423, 1310, 201, 1358, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 1400, 364, 1344, 0, 489, 394, 0, 0, 0,
	1324, 1383, 1332, 1370, 1319, 1357, 1277, 1343, 1395, 1306,
	1353, 1396, 319, 245, 321, 200, 406, 490, 283, 0,
	93, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 1302, 1350, 1390, 1303, 1352, 262, 317, 269, 261,
	570, 1401, 1382, 1266, 1331, 1389, 0, 0, 226, 1392,
	1326, 0, 1355, 0, 1407, 1261, 1346, 0, 1264, 1268,
	1403, 1387, 1297, 272, 0, 0, 0, 0, 0, 0,
	0, 1323, 1333, 1367, 1371, 1317, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 1342, 0, 0, 0,
	1273, 1265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1321, 0, 0, 0, 0, 1276,
	0, 1296, 1368, 0, 1259, 294, 1270, 395, 254, 0,
	446, 1375, 1386, 1318, 614, 1388, 1316, 1315, 1362, 1274,
	1381, 1309, 359, 1272, 326, 195, 222, 0, 1307, 405,
	454, 466, 1380, 1292, 1301, 250, 1299, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 1341, 1360, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 1271,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 1287, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 1376,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 1365, 1406,
	418, 465, 237, 594, 488, 197, 1281, 1286, 1279, 0,
	251, 252, 1347, 565, 1282, 1280, 1336, 1337, 1283, 1397,
	1398, 1399, 1384, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 1369, 1275, 0, 1284, 1285, 1378, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 1340, 194, 218, 362,
	1402, 447, 285, 635, 604, 599, 203, 220, 1278, 259,
	1290, 1298, 0, 1304, 1312, 1313, 1325, 1327, 1328, 1329,
	1330, 1348, 1349, 1351, 1359, 1361, 1364, 1366, 1373, 1385,
	1405, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 1339,
	1345, 375, 278, 301, 316, 1354, 603, 494, 224, 459,
	287, 248, 1372, 1374, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 1335, 1363,
	370, 566, 567, 312, 390, 0, 0, 0, 1391, 1377,
	518, 0, 1320, 1394, 1289, 1308, 1404, 1311, 1314, 1356,
	1267, 1334, 409, 1305, 1260, 1293, 1262, 1300, 1263, 1291,
	1322, 267, 1288, 1379, 1338, 1393, 360, 264, 1269, 1294,
	423, 1310, 201, 1358, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 1400, 364,
	1344, 0, 489, 394, 0, 0, 0, 1324, 1383, 1332,
	1370, 1319, 1357, 1277, 1343, 1395, 1306, 1353, 1396, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 1302, 1350,
	1390, 1303, 1352, 262, 317, 269, 261, 570, 1401, 1382,
	1266, 1331, 1389, 0, 0, 226, 1392, 1326, 0, 1355,
	0, 1407, 1261, 1346, 0, 1264, 1268, 1403, 1387, 1297,
	272, 0, 0, 0, 0, 0, 0, 0, 1323, 1333,
	1367, 1371, 1317, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 1342, 0, 0, 0, 1273, 1265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 1276, 0, 1296, 1368,
	0, 1259, 294, 1270, 395, 254, 0, 446, 1375, 1386,
	1318, 614, 1388, 1316, 1315, 1362, 1274, 1381, 1309, 359,
	1272, 326, 195, 222, 0, 1307, 405, 454, 466, 1380,
	1292, 1301, 250, 1299, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 1341, 1360, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 1271, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 1287, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 1376, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 1365, 1406, 418, 465, 237,
	594, 488, 197, 1281, 1286, 1279, 0, 251, 252, 1347,
	565, 1282, 1280, 1336, 1337, 1283, 1397, 1398, 1399, 1384,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 1369, 1275,
	0, 1284, 1285, 1378, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 1340, 194, 218, 362, 1402, 447, 285,
	635, 604, 599, 203, 220, 1278, 259, 1290, 1298, 0,
	1304, 1312, 1313, 1325, 1327, 1328, 1329, 1330, 1348, 1349,
	1351, 1359, 1361, 1364, 1366, 1373, 1385, 1405, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 1339, 1345, 375, 278,
	301, 316, 1354, 603, 494, 224, 459, 287, 248, 1372,
	1374, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 1335, 1363, 370, 566, 567,
	312, 390, 0, 0, 0, 1391, 1377, 518, 0, 1320,
	1394, 1289, 1308, 1404, 1311, 1314, 1356, 1267, 1334, 409,
	1305, 1260, 1293, 1262, 1300, 1263, 1291, 1322, 267, 1288,
	1379, 1338, 1393, 360, 264, 1269, 1294, 423, 1310, 201,
	1358, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 1400, 364, 1344, 0, 489,
	394, 0, 0, 0, 1324, 1383, 1332, 1370, 1319, 1357,
	1277, 1343, 1395, 1306, 1353, 1396, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 1302, 1350, 1390, 1303, 1352,
	262, 317, 269, 261, 570, 1401, 1382, 1266, 1331, 1389,
	0, 0, 226, 1392, 1326, 0, 1355, 0, 1407, 1261,
	1346, 0, 1264, 1268, 1403, 1387, 1297, 272, 0, 0,
	0, 0, 0, 0, 0, 1323, 1333, 1367, 1371, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 0,
	1342, 0, 0, 0, 1273, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 1276, 0, 1296, 1368, 0, 1259, 294,
	1270, 395, 254, 0, 446, 1375, 1386, 1318, 614, 1388,
	1316, 1315, 1362, 1274, 1381, 1309, 359, 1272, 326, 195,
	222, 0, 1307, 405, 454, 466, 1380, 1292, 1301, 250,
	1299, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 1341, 1360, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 1271, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	1287, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 1376, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 1365, 1406, 418, 465, 237, 594, 488, 197,
	1281, 1286, 1279, 0, 251, 252, 1347, 565, 1282, 1280,
	1336, 1337, 1283, 1397, 1398, 1399, 1384, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 1369, 1275, 0, 1284, 1285,
	1378, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	1340, 194, 218, 362, 1402, 447, 285, 635, 604, 599,
	203, 220, 1278, 259, 1290, 1298, 0, 1304, 1312, 1313,
	1325, 1327, 1328, 1329, 1330, 1348, 1349, 1351, 1359, 1361,
	1364, 1366, 1373, 1385, 1405, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 1339, 1345, 375, 278, 301, 316, 1354,
	603, 494, 224, 459, 287, 248, 1372, 1374, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 1335, 1363, 370, 566, 567, 312, 390, 0,
	0, 0, 1391, 1377, 518, 0, 1320, 1394, 1289, 1308,
	1404, 1311, 1314, 1356, 1267, 1334, 409, 1305, 1260, 1293,
	1262, 1300, 1263, 1291, 1322, 267, 1288, 1379, 1338, 1393,
	360, 264, 1269, 1294, 423, 1310, 201, 1358, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 1400, 364, 1344, 0, 489, 394, 0, 0,
	0, 1324, 1383, 1332, 1370, 1319, 1357, 1277, 1343, 1395,
	1306, 1353, 1396, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 1302, 1350, 1390, 1303, 1352, 262, 317, 269,
	261, 570, 1401, 1382, 1266, 1331, 1389, 0, 0, 226,
	1392, 1326, 0, 1355, 0, 1407, 1261, 1346, 0, 1264,
	1268, 1403, 1387, 1297, 272, 0, 0, 0, 0, 0,
	0, 0, 1323, 1333, 1367, 1371, 1317, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 0, 1342, 0, 0,
	0, 1273, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	1276, 0, 1296, 1368, 0, 1259, 294, 1270, 395, 254,
	0, 446, 1375, 1386, 1318, 614, 1388, 1316, 1315, 1362,
	1274, 1381, 1309, 359, 1272, 326, 195, 222, 0, 1307,
	405, 454, 466, 1380, 1292, 1301, 250, 1299, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 1341, 1360,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	1271, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 1287, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	1376, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 1365,
	1406, 418, 465, 237, 594, 488, 197, 1281, 1286, 1279,
	0, 251, 252, 1347, 565, 1282, 1280, 1336, 1337, 1283,
	1397, 1398, 1399, 1384, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 1369, 1275, 0, 1284, 1285, 1378, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 1340, 194, 218,
	362, 1402, 447, 285, 635, 604, 599, 203, 220, 1278,
	259, 1290, 1298, 0, 1304, 1312, 1313, 1325, 1327, 1328,
	1329, 1330, 1348, 1349, 1351, 1359, 1361, 1364, 1366, 1373,
	1385, 1405, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	1339, 1345, 375, 278, 301, 316, 1354, 603, 494, 224,
	459, 287, 248, 1372, 1374, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 1335,
	1363, 370, 566, 567, 312, 390, 0, 0, 0, 0,
	0, 518, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 747, 0,
	0, 0, 267, 752, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 758,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	754, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 93, 0,
	0, 955, 939, 731, 905, 943, 956, 957, 958, 959,
	944, 0, 235, 945, 946, 242, 947, 0, 904, 789,
	791, 790, 854, 855, 856, 857, 858, 859, 860, 787,
	952, 960, 961, 0, 262, 317, 269, 261, 570, 0,
	0, 2168, 2169, 2170, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 0, 757, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 742,
	0, 0, 0, 0, 899, 0, 743, 0, 0, 751,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 898,
	0, 0, 614, 0, 0, 896, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 949, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	950, 951, 253, 637, 795, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 803,
	804, 277, 303, 880, 879, 878, 302, 304, 876, 877,
	875, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 886, 908, 897, 763, 764, 887, 888,
	912, 889, 766, 767, 909, 910, 760, 761, 765, 911,
	913, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 900,
	750, 749, 0, 756, 0, 785, 786, 788, 792, 793,
	794, 805, 852, 853, 861, 863, 864, 862, 865, 866,
	867, 870, 871, 872, 873, 868, 869, 874, 768, 772,
	769, 770, 771, 783, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 784, 923, 924, 925, 926, 927,
	928, 798, 802, 801, 799, 800, 796, 797, 824, 823,
	825, 826, 827, 828, 829, 830, 832, 831, 833, 834,
	835, 836, 837, 838, 806, 807, 810, 811, 809, 808,
	812, 821, 822, 813, 814, 815, 816, 817, 818, 820,
	819, 839, 840, 841, 842, 843, 845, 844, 848, 849,
	847, 846, 851, 850, 748, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 914, 259, 915, 0,
	0, 919, 0, 0, 0, 921, 920, 0, 922, 884,
	883, 0, 0, 916, 917, 0, 918, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 929, 930, 931, 932, 933, 934, 935, 936, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	954, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 747,
	0, 0, 0, 267, 752, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	758, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 754, 755, 0, 0, 0, 0, 0, 0, 2374,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 93,
	0, 0, 955, 939, 731, 905, 943, 956, 957, 958,
	959, 944, 0, 235, 945, 946, 242, 947, 0, 904,
	789, 791, 790, 854, 855, 856, 857, 858, 859, 860,
	787, 952, 960, 961, 2375, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 727, 744, 0, 757, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	742, 0, 0, 0, 0, 899, 0, 743, 0, 0,
	751, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	898, 0, 0, 614, 0, 0, 896, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 949, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 950, 951, 253, 637, 795, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	803, 804, 277, 303, 880, 879, 878, 302, 304, 876,
	877, 875, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 886, 908, 897, 763, 764, 887,
	888, 912, 889, 766, 767, 909, 910, 760, 761, 765,
	911, 913, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	900, 750, 749, 0, 756, 0, 785, 786, 788, 792,
	793, 794, 805, 852, 853, 861, 863, 864, 862, 865,
	866, 867, 870, 871, 872, 873, 868, 869, 874, 768,
	772, 769, 770, 771, 783, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 784, 923, 924, 925, 926,
	927, 928, 798, 802, 801, 799, 800, 796, 797, 824,
	823, 825, 826, 827, 828, 829, 830, 832, 831, 833,
	834, 835, 836, 837, 838, 806, 807, 810, 811, 809,
	808, 812, 821, 822, 813, 814, 815, 816, 817, 818,
	820, 819, 839, 840, 841, 842, 843, 845, 844, 848,
	849, 847, 846, 851, 850, 748, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 914, 259, 915,
	0, 0, 919, 0, 0, 0, 921, 920, 0, 922,
	884, 883, 0, 0, 916, 917, 0, 918, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 929, 930, 931, 932, 933, 934, 935, 936,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 954, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 0, 390, 370,
	566, 567, 312, 84, 518, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 747, 0, 0, 0, 267, 752, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 758, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 754, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 93, 0, 0, 955, 939, 731, 905, 943, 956,
	957, 958, 959, 944, 0, 235, 945, 946, 242, 947,
	0, 904, 789, 791, 790, 854, 855, 856, 857, 858,
	859, 860, 787, 952, 960, 961, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 727, 744, 0,
	757, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 742, 0, 0, 0, 0, 899, 0, 743,
	0, 0, 751, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 898, 0, 0, 614, 0, 0, 896, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 949, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 950, 951, 253, 637, 795, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 803, 804, 277, 303, 880, 879, 878, 302,
	304, 876, 877, 875, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 886, 908, 897, 763,
	764, 887, 888, 912, 889, 766, 767, 909, 910, 760,
	761, 765, 911, 913, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 900, 750, 749, 0, 756, 0, 785, 786,
	788, 792, 793, 794, 805, 852, 853, 861, 863, 864,
	862, 865, 866, 867, 870, 871, 872, 873, 868, 869,
	874, 768, 772, 769, 770, 771, 783, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 784, 923, 924,
	925, 926, 927, 928, 798, 802, 801, 799, 800, 796,
	797, 824, 823, 825, 826, 827, 828, 829, 830, 832,
	831, 833, 834, 835, 836, 837, 838, 806, 807, 810,
	811, 809, 808, 812, 821, 822, 813, 814, 815, 816,
	817, 818, 820, 819, 839, 840, 841, 842, 843, 845,
	844, 848, 849, 847, 846, 851, 850, 748, 194, 218,
	362, 92, 447, 285, 635, 604, 599, 203, 220, 914,
	259, 915, 0, 0, 919, 0, 0, 0, 921, 920,
	0, 922, 884, 883, 0, 0, 916, 917, 0, 918,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 929, 930, 931, 932, 933, 934,
	935, 936, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 954, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 747, 0, 0, 0, 267, 752, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 758, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 754, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 93, 0, 0, 955, 939, 731, 905, 943,
	956, 957, 958, 959, 944, 0, 235, 945, 946, 242,
	947, 0, 904, 789, 791, 790, 854, 855, 856, 857,
	858, 859, 860, 787, 952, 960, 961, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	0, 757, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 741, 742, 0, 0, 0, 0, 899, 0,
	743, 0, 0, 751, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 898, 0, 0, 614, 0, 0, 896,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 949, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 3993,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 950, 951, 253, 637, 795, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 803, 804, 277, 303, 880, 879, 878,
	302, 304, 876, 877, 875, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 886, 908, 897,
	763, 764, 887, 888, 912, 889, 766, 767, 909, 910,
	760, 761, 765, 911, 913, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 900, 750, 749, 0, 756, 0, 785,
	786, 788, 792, 793, 794, 805, 852, 853, 861, 863,
	864, 862, 865, 866, 867, 870, 871, 872, 873, 868,
	869, 874, 768, 772, 769, 770, 771, 783, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 784, 923,
	924, 925, 926, 927, 928, 798, 802, 801, 799, 800,
	796, 797, 824, 823, 825, 826, 827, 828, 829, 830,
	832, 831, 833, 834, 835, 836, 837, 838, 806, 807,
	810, 811, 809, 808, 812, 821, 822, 813, 814, 815,
	816, 817, 818, 820, 819, 839, 840, 841, 842, 843,
	845, 844, 848, 849, 847, 846, 851, 850, 748, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	914, 259, 915, 0, 0, 919, 0, 0, 0, 921,
	920, 0, 922, 884, 883, 0, 0, 916, 917, 0,
	918, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 929, 930, 931, 932, 933,
	934, 935, 936, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 954, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 747, 0, 0, 0, 267, 752, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 758, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 754, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 93, 0, 1709, 955, 939, 731, 905,
	943, 956, 957, 958, 959, 944, 0, 235, 945, 946,
	242, 947, 0, 904, 789, 791, 790, 854, 855, 856,
	857, 858, 859, 860, 787, 952, 960, 961, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 727,
	744, 0, 757, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 742, 0, 0, 0, 0, 899,
	0, 743, 0, 0, 751, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 898, 0, 0, 614, 0, 0,
	896, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 949, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 950, 951, 253, 637, 795,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 803, 804, 277, 303, 880, 879,
	878, 302, 304, 876, 877, 875, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 886, 908,
	897, 763, 764, 887, 888, 912, 889, 766, 767, 909,
	910, 760, 761, 765, 911, 913, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 900, 750, 749, 0, 756, 0,
	785, 786, 788, 792, 793, 794, 805, 852, 853, 861,
	863, 864, 862, 865, 866, 867, 870, 871, 872, 873,
	868, 869, 874, 768, 772, 769, 770, 771, 783, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 784,
	923, 924, 925, 926, 927, 928, 798, 802, 801, 799,
	800, 796, 797, 824, 823, 825, 826, 827, 828, 829,
	830, 832, 831, 833, 834, 835, 836, 837, 838, 806,
	807, 810, 811, 809, 808, 812, 821, 822, 813, 814,
	815, 816, 817, 818, 820, 819, 839, 840, 841, 842,
	843, 845, 844, 848, 849, 847, 846, 851, 850, 748,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 914, 259, 915, 0, 0, 919, 0, 0, 0,
	921, 920, 0, 922, 884, 883, 0, 0, 916, 917,
	0, 918, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 929, 930, 931, 932,
	933, 934, 935, 936, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 954, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 747, 0, 0, 0, 267, 752,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 758, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 754, 755, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 93, 0, 0, 955, 939, 731,
	905, 943, 956, 957, 958, 959, 944, 0, 235, 945,
	946, 242, 947, 0, 904, 789, 791, 790, 854, 855,
	856, 857, 858, 859, 860, 787, 952, 960, 961, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 0, 757, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 741, 742, 1044, 0, 0, 0,
	899, 0, 743, 0, 0, 751, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 898, 0, 0, 614, 0,
	0, 896, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 949,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 950, 951, 253, 637,
	795, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 803, 804, 277, 303, 880,
	879, 878, 302, 304, 876, 877, 875, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 886,
	908, 897, 763, 764, 887, 888, 912, 889, 766, 767,
	909, 910, 760, 761, 765, 911, 913, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 900, 750, 749, 0, 756,
	0, 785, 786, 788, 792, 793, 794, 805, 852, 853,
	861, 863, 864, 862, 865, 866, 867, 870, 871, 872,
	873, 868, 869, 874, 768, 772, 769, 770, 771, 783,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	784, 923, 924, 925, 926, 927, 928, 798, 802, 801,
	799, 800, 796, 797, 824, 823, 825, 826, 827, 828,
	829, 830, 832, 831, 833, 834, 835, 836, 837, 838,
	806, 807, 810, 811, 809, 808, 812, 821, 822, 813,
	814, 815, 816, 817, 818, 820, 819, 839, 840, 841,
	842, 843, 845, 844, 848, 849, 847, 846, 851, 850,
	748, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 914, 259, 915, 0, 0, 919, 0, 0,
	0, 921, 920, 0, 922, 884, 883, 0, 0, 916,
	917, 0, 918, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 929, 930, 931,
	932, 933, 934, 935, 936, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 954, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 747, 0, 0, 0, 267,
	752, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 758, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 754, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 93, 0, 0, 955, 939,
	731, 905, 943, 956, 957, 958, 959, 944, 0, 235,
	945, 946, 242, 947, 0, 904, 789, 791, 790, 854,
	855, 856, 857, 858, 859, 860, 787, 952, 960, 961,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 727, 744, 0, 757, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 741, 742, 0, 0, 0,
	0, 899, 0, 743, 0, 0, 751, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 898, 0, 0, 614,
	0, 0, 896, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	949, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 950, 951, 253,
	637, 795, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 803, 804, 277, 303,
	880, 879, 878, 302, 304, 876, 877, 875, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	886, 908, 897, 763, 764, 887, 888, 912, 889, 766,
	767, 909, 910, 760, 761, 765, 911, 913, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 900, 750, 749, 0,
	756, 0, 785, 786, 788, 792, 793, 794, 805, 852,
	853, 861, 863, 864, 862, 865, 866, 867, 870, 871,
	872, 873, 868, 869, 874, 768, 772, 769, 770, 771,
	783, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 784, 923, 924, 925, 926, 927, 928, 798, 802,
	801, 799, 800, 796, 797, 824, 823, 825, 826, 827,
	828, 829, 830, 832, 831, 833, 834, 835, 836, 837,
	838, 806, 807, 810, 811, 809, 808, 812, 821, 822,
	813, 814, 815, 816, 817, 818, 820, 819, 839, 840,
	841, 842, 843, 845, 844, 848, 849, 847, 846, 851,
	850, 748, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 914, 259, 915, 0, 0, 919, 0,
	0, 0, 921, 920, 0, 922, 884, 883, 0, 0,
	916, 917, 0, 918, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 929, 930,
	931, 932, 933, 934, 935, 936, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 954, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 747, 0, 0, 0,
	267, 752, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 758, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 754, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 93, 0, 0, 955,
	939, 731, 905, 943, 956, 957, 958, 959, 944, 0,
	235, 945, 946, 242, 947, 0, 904, 789, 791, 790,
	854, 855, 856, 857, 858, 859, 860, 787, 952, 960,
	961, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 727, 744, 0, 757, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 742, 0, 0,
	0, 0, 899, 0, 743, 0, 0, 751, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	3094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 898, 0, 0,
	614, 0, 0, 896, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 949, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 950, 951,
	253, 637, 795, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 803, 804, 277,
	303, 880, 879, 878, 302, 304, 876, 877, 875, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 886, 908, 897, 763, 764, 887, 888, 912, 889,
	766, 767, 909, 910, 760, 761, 765, 911, 913, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 900, 750, 749,
	0, 756, 0, 785, 786, 788, 792, 793, 794, 805,
	852, 853, 861, 863, 864, 862, 865, 866, 867, 870,
	871, 872, 873, 868, 869, 874, 768, 772, 769, 770,
	771, 783, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 784, 923, 924, 925, 926, 927, 928, 798,
	802, 801, 799, 800, 796, 797, 824, 823, 825, 826,
	827, 828, 829, 830, 832, 831, 833, 834, 835, 836,
	837, 838, 806, 807, 810, 811, 809, 808, 812, 821,
	822, 813, 814, 815, 816, 817, 818, 820, 819, 839,
	840, 841, 842, 843, 845, 844, 848, 849, 847, 846,
	851, 850, 748, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 914, 259, 915, 0, 0, 919,
	0, 0, 0, 921, 920, 0, 922, 884, 883, 0,
	0, 916, 917, 0, 918, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 929,
	930, 931, 932, 933, 934, 935, 936, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 954, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 747, 0, 0,
	0, 267, 752, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 758, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 754,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 93, 0, 0,
	955, 939, 731, 905, 943, 956, 957, 958, 959, 944,
	0, 235, 945, 946, 242, 947, 0, 904, 789, 791,
	790, 854, 855, 856, 857, 858, 859, 860, 787, 952,
	960, 961, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 727, 744, 0, 757, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 742, 0,
	0, 0, 0, 899, 0, 743, 0, 0, 751, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 3090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 898, 0,
	0, 614, 0, 0, 896, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 949, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 950,
	951, 253, 637, 795, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 803, 804,
	277, 303, 880, 879, 878, 302, 304, 876, 877, 875,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 886, 908, 897, 763, 764, 887, 888, 912,
	889, 766, 767, 909, 910, 760, 761, 765, 911, 913,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 900, 750,
	749, 0, 756, 0, 785, 786, 788, 792, 793, 794,
	805, 852, 853, 861, 863, 864, 862, 865, 866, 867,
	870, 871, 872, 873, 868, 869, 874, 768, 772, 769,
	770, 771, 783, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 784, 923, 924, 925, 926, 927, 928,
	798, 802, 801, 799, 800, 796, 797, 824, 823, 825,
	826, 827, 828, 829, 830, 832, 831, 833, 834, 835,
	836, 837, 838, 806, 807, 810, 811, 809, 808, 812,
	821, 822, 813, 814, 815, 816, 817, 818, 820, 819,
	839, 840, 841, 842, 843, 845, 844, 848, 849, 847,
	846, 851, 850, 748, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 914, 259, 915, 0, 0,
	919, 0, 0, 0, 921, 920, 0, 922, 884, 883,
	0, 0, 916, 917, 0, 918, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	929, 930, 931, 932, 933, 934, 935, 936, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 954,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 747, 0,
	0, 0, 267, 752, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 758,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	754, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 93, 0,
	0, 955, 939, 1065, 905, 943, 956, 957, 958, 959,
	944, 0, 235, 945, 946, 242, 947, 0, 904, 789,
	791, 790, 854, 855, 856, 857, 858, 859, 860, 787,
	952, 960, 961, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 744, 0, 757, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 742,
	0, 0, 0, 0, 899, 0, 743, 0, 0, 751,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 898,
	0, 0, 614, 0, 0, 896, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 949, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	950, 951, 253, 637, 795, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 803,
	804, 277, 303, 880, 879, 878, 302, 304, 876, 877,
	875, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 886, 908, 897, 763, 764, 887, 888,
	912, 889, 766, 767, 909, 910, 760, 761, 765, 911,
	913, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 900,
	750, 749, 0, 756, 0, 785, 786, 788, 792, 793,
	794, 805, 852, 853, 861, 863, 864, 862, 865, 866,
	867, 870, 871, 872, 873, 868, 869, 874, 768, 772,
	769, 770, 771, 783, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 784, 923, 924, 925, 926, 927,
	928, 798, 802, 801, 799, 800, 796, 797, 824, 823,
	825, 826, 827, 828, 829, 830, 832, 831, 833, 834,
	835, 836, 837, 838, 806, 807, 810, 811, 809, 808,
	812, 821, 822, 813, 814, 815, 816, 817, 818, 820,
	819, 839, 840, 841, 842, 843, 845, 844, 848, 849,
	847, 846, 851, 850, 748, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 914, 259, 915, 0,
	0, 919, 0, 0, 0, 921, 920, 0, 922, 884,
	883, 0, 0, 916, 917, 0, 918, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 929, 930, 931, 932, 933, 934, 935, 936, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	954, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 747,
	0, 0, 0, 267, 752, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	758, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 754, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 93,
	0, 0, 955, 939, 1065, 905, 943, 956, 957, 958,
	959, 944, 0, 235, 945, 946, 242, 947, 0, 904,
	789, 791, 790, 854, 855, 856, 857, 858, 859, 860,
	787, 952, 960, 961, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 757, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	742, 0, 0, 0, 0, 899, 0, 743, 0, 0,
	751, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	898, 0, 0, 614, 0, 0, 896, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 949, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 950, 951, 253, 637, 795, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	803, 804, 277, 303, 880, 879, 878, 302, 304, 876,
	877, 875, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 886, 908, 897, 763, 764, 887,
	888, 912, 889, 766, 767, 909, 910, 760, 761, 765,
	911, 913, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	900, 750, 749, 0, 756, 0, 785, 786, 788, 792,
	793, 794, 805, 852, 853, 861, 863, 864, 862, 865,
	866, 867, 870, 871, 872, 873, 868, 869, 874, 768,
	772, 769, 770, 771, 783, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 784, 923, 924, 925, 926,
	927, 928, 798, 802, 801, 799, 800, 796, 797, 824,
	823, 825, 826, 827, 828, 829, 830, 832, 831, 833,
	834, 835, 836, 837, 838, 806, 807, 810, 811, 809,
	808, 812, 821, 822, 813, 814, 815, 816, 817, 818,
	820, 819, 839, 840, 841, 842, 843, 845, 844, 848,
	849, 847, 846, 851, 850, 748, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 914, 259, 915,
	0, 0, 919, 0, 0, 0, 921, 920, 0, 922,
	884, 883, 0, 0, 916, 917, 0, 918, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 929, 930, 931, 932, 933, 934, 935, 936,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 954, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	747, 0, 0, 0, 267, 752, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 758, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 754, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	93, 0, 0, 955, 939, 1065, 905, 943, 956, 957,
	958, 959, 944, 0, 235, 945, 946, 242, 947, 0,
	904, 789, 791, 790, 854, 855, 856, 857, 858, 859,
	860, 787, 952, 960, 961, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 0, 757,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 742, 0, 0, 0, 0, 899, 0, 743, 0,
	0, 751, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 898, 0, 0, 614, 0, 0, 896, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 949, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 950, 951, 253, 637, 795, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 803, 804, 277, 303, 880, 879, 878, 302, 304,
	876, 877, 875, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 886, 908, 897, 763, 764,
	887, 888, 912, 889, 766, 767, 909, 910, 760, 761,
	765, 911, 913, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 900, 750, 749, 0, 756, 0, 785, 786, 788,
	792, 793, 794, 805, 852, 853, 861, 863, 864, 862,
	865, 866, 867, 870, 871, 872, 873, 868, 869, 874,
	768, 772, 769, 770, 771, 783, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 784, 923, 924, 925,
	926, 927, 928, 798, 802, 801, 799, 800, 796, 797,
	824, 823, 825, 826, 827, 828, 829, 830, 832, 831,
	833, 834, 835, 836, 837, 838, 806, 807, 810, 811,
	809, 808, 812, 821, 822, 813, 814, 815, 816, 817,
	818, 820, 819, 839, 840, 841, 842, 843, 845, 844,
	848, 849, 847, 846, 851, 850, 748, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 914, 259,
	915, 0, 0, 919, 0, 0, 0, 921, 920, 0,
	922, 884, 883, 0, 0, 916, 917, 0, 918, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 929, 930, 931, 932, 933, 934, 935,
	936, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 954, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 1116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 1115, 614, 0, 0, 0, 0,
	0, 1112, 1113, 359, 1073, 326, 195, 222, 1106, 1110,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 1672, 939, 0, 0, 1669,
	0, 0, 0, 0, 1667, 0, 235, 1668, 1666, 242,
	1671, 0, 904, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	0, 390, 370, 566, 567, 312, 84, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 93, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 92, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 2360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 1728, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 1730, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 1732, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 1445, 0, 1446,
	1447, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 0, 390, 370, 566, 567, 312, 84,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 93, 0, 1709,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 92, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 93, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 2361, 0, 0, 2360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 2311, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 1911, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 2309, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 1073, 326, 195, 222, 1071, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	2311, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 1911, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 1709, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	3903, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 2071, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 2804, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 2789, 0, 0, 0, 0, 235,
	0, 0, 242, 2790, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 1751, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 1750,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 707, 708, 709, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 4026, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 1911, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 3903, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 93, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	2362, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 1732, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 2023, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 2014, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 1878, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 1876, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 296, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 1874, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 1872, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 1870, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 402, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 1866, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 1864,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	1862, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 390, 0, 370, 566, 567, 312, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 360, 264, 0, 0, 423, 0, 201,
	0, 479, 249, 371, 368, 573, 279, 270, 266, 247,
	313, 379, 421, 508, 415, 0, 364, 0, 0, 489,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 245, 321, 200,
	406, 490, 283, 0, 1837, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 345, 354, 353, 334, 335,
	337, 339, 344, 351, 357, 0, 0, 0, 0, 0,
	262, 317, 269, 261, 570, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 395, 254, 0, 446, 0, 0, 0, 614, 0,
	0, 0, 0, 0, 0, 0, 359, 0, 326, 195,
	222, 0, 0, 405, 454, 466, 0, 0, 0, 250,
	0, 464, 419, 592, 230, 281, 451, 425, 462, 433,
	284, 0, 0, 463, 366, 575, 443, 589, 615, 616,
	260, 399, 601, 512, 609, 633, 223, 257, 413, 497,
	595, 486, 391, 571, 572, 325, 485, 292, 199, 363,
	621, 221, 472, 365, 239, 228, 577, 598, 286, 449,
	628, 210, 507, 587, 236, 476, 0, 0, 636, 244,
	496, 212, 584, 495, 387, 322, 323, 211, 0, 450,
	265, 290, 0, 0, 255, 408, 579, 580, 253, 637,
	225, 608, 217, 0, 607, 401, 574, 585, 388, 377,
	216, 583, 386, 376, 330, 349, 350, 277, 303, 440,
	369, 441, 302, 304, 397, 396, 398, 204, 596, 0,
	205, 0, 491, 597, 638, 445, 209, 231, 232, 234,
	0, 276, 280, 288, 291, 299, 300, 309, 361, 412,
	439, 435, 444, 0, 569, 590, 602, 613, 619, 620,
	622, 623, 624, 625, 626, 629, 627, 400, 307, 487,
	329, 367, 0, 0, 418, 465, 237, 594, 488, 197,
	0, 0, 0, 0, 251, 252, 0, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 634, 498, 504, 499, 500,
	501, 502, 503, 0, 505, 0, 0, 0, 0, 0,
	0, 581, 582, 657, 378, 478, 591, 331, 343, 346,
	336, 355, 0, 356, 332, 333, 338, 340, 341, 342,
	347, 348, 352, 358, 246, 207, 384, 392, 568, 308,
	213, 214, 215, 514, 515, 516, 517, 605, 606, 610,
	202, 455, 456, 457, 458, 289, 600, 305, 461, 460,
	327, 328, 373, 442, 530, 532, 543, 547, 549, 551,
	557, 560, 531, 533, 544, 548, 550, 552, 558, 561,
	520, 522, 524, 526, 539, 538, 535, 563, 564, 541,
	546, 525, 537, 542, 555, 562, 559, 519, 523, 527,
	536, 554, 553, 534, 545, 556, 540, 528, 521, 529,
	0, 194, 218, 362, 0, 447, 285, 635, 604, 599,
	203, 220, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 206, 219, 229,
	233, 240, 258, 273, 275, 282, 295, 306, 314, 315,
	318, 324, 374, 380, 381, 382, 383, 402, 403, 404,
	407, 410, 411, 414, 416, 417, 420, 424, 428, 429,
	430, 432, 434, 436, 448, 453, 467, 468, 469, 470,
	471, 474, 475, 480, 481, 482, 483, 484, 492, 493,
	506, 576, 578, 593, 611, 617, 473, 297, 298, 437,
	438, 310, 311, 631, 632, 296, 588, 618, 586, 630,
	612, 431, 372, 0, 0, 375, 278, 301, 316, 0,
	603, 494, 224, 459, 287, 248, 0, 0, 208, 243,
	227, 256, 271, 274, 320, 385, 393, 422, 427, 293,
	268, 241, 452, 238, 477, 509, 510, 511, 513, 389,
	263, 426, 390, 0, 370, 566, 567, 312, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 1736, 267,
	0, 0, 0, 0, 360, 264, 0, 0, 423, 0,
	201, 0, 479, 249, 371, 368, 573, 279, 270, 266,
	247, 313, 379, 421, 508, 415, 0, 364, 0, 0,
	489, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 245, 321,
	200, 406, 490, 283, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 242, 0, 0, 0, 345, 354, 353, 334,
	335, 337, 339, 344, 351, 357, 0, 0, 0, 0,
	0, 262, 317, 269, 261, 570, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 395, 254, 0, 446, 0, 0, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 326,
	195, 222, 0, 0, 405, 454, 466, 0, 0, 0,
	250, 0, 464, 419, 592, 230, 281, 451, 425, 462,
	433, 284, 0, 0, 463, 366, 575, 443, 589, 615,
	616, 260, 399, 601, 512, 609, 633, 223, 257, 413,
	497, 595, 486, 391, 571, 572, 325, 485, 292, 199,
	363, 621, 221, 472, 365, 239, 228, 577, 598, 286,
	449, 628, 210, 507, 587, 236, 476, 0, 0, 636,
	244, 496, 212, 584, 495, 387, 322, 323, 211, 0,
	450, 265, 290, 0, 0, 255, 408, 579, 580, 253,
	637, 225, 608, 217, 0, 607, 401, 574, 585, 388,
	377, 216, 583, 386, 376, 330, 349, 350, 277, 303,
	440, 369, 441, 302, 304, 397, 396, 398, 204, 596,
	0, 205, 0, 491, 597, 638, 445, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 299, 300, 309, 361,
	412, 439, 435, 444, 0, 569, 590, 602, 613, 619,
	620, 622, 623, 624, 625, 626, 629, 627, 400, 307,
	487, 329, 367, 0, 0, 418, 465, 237, 594, 488,
	197, 0, 0, 0, 0, 251, 252, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 634, 498, 504, 499,
	500, 501, 502, 503, 0, 505, 0, 0, 0, 0,
	0, 0, 581, 582, 657, 378, 478, 591, 331, 343,
	346, 336, 355, 0, 356, 332, 333, 338, 340, 341,
	342, 347, 348, 352, 358, 246, 207, 384, 392, 568,
	308, 213, 214, 215, 514, 515, 516, 517, 605, 606,
	610, 202, 455, 456, 457, 458, 289, 600, 305, 461,
	460, 327, 328, 373, 442, 530, 532, 543, 547, 549,
	551, 557, 560, 531, 533, 544, 548, 550, 552, 558,
	561, 520, 522, 524, 526, 539, 538, 535, 563, 564,
	541, 546, 525, 537, 542, 555, 562, 559, 519, 523,
	527, 536, 554, 553, 534, 545, 556, 540, 528, 521,
	529, 0, 194, 218, 362, 0, 447, 285, 635, 604,
	599, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 306, 314,
	315, 318, 324, 374, 380, 381, 382, 383, 402, 403,
	404, 407, 410, 411, 414, 416, 417, 420, 424, 428,
	429, 430, 432, 434, 436, 448, 453, 467, 468, 469,
	470, 471, 474, 475, 480, 481, 482, 483, 484, 492,
	493, 506, 576, 578, 593, 611, 617, 473, 297, 298,
	437, 438, 310, 311, 631, 632, 296, 588, 618, 586,
	630, 612, 431, 372, 0, 0, 375, 278, 301, 316,
	0, 603, 494, 224, 459, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 320, 385, 393, 422, 427,
	293, 268, 241, 452, 238, 477, 509, 510, 511, 513,
	389, 263, 426, 390, 0, 370, 566, 567, 312, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 360, 264, 0, 0, 423,
	0, 201, 0, 479, 249, 371, 368, 573, 279, 270,
	266, 247, 313, 379, 421, 508, 415, 0, 364, 0,
	0, 489, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 245,
	321, 200, 406, 490, 283, 0, 93, 0, 0, 0,
	939, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 345, 354, 353,
	334, 335, 337, 339, 344, 351, 357, 0, 0, 0,
	0, 0, 262, 317, 269, 261, 570, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 395, 254, 0, 446, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	326, 195, 222, 0, 0, 405, 454, 466, 0, 0,
	0, 250, 0, 464, 419, 592, 230, 281, 451, 425,
	462, 433, 284, 0, 0, 463, 366, 575, 443, 589,
	615, 616, 260, 399, 601, 512, 609, 633, 223, 257,
	413, 497, 595, 486, 391, 571, 572, 325, 485, 292,
	199, 363, 621, 221, 472, 365, 239, 228, 577, 598,
	286, 449, 628, 210, 507, 587, 236, 476, 0, 0,
	636, 244, 496, 212, 584, 495, 387, 322, 323, 211,
	0, 450, 265, 290, 0, 0, 255, 408, 579, 580,
	253, 637, 225, 608, 217, 0, 607, 401, 574, 585,
	388, 377, 216, 583, 386, 376, 330, 349, 350, 277,
	303, 440, 369, 441, 302, 304, 397, 396, 398, 204,
	596, 0, 205, 0, 491, 597, 638, 445, 209, 231,
	232, 234, 0, 276, 280, 288, 291, 299, 300, 309,
	361, 412, 439, 435, 444, 0, 569, 590, 602, 613,
	619, 620, 622, 623, 624, 625, 626, 629, 627, 400,
	307, 487, 329, 367, 0, 0, 418, 465, 237, 594,
	488, 197, 0, 0, 0, 0, 251, 252, 0, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 634, 498, 504,
	499, 500, 501, 502, 503, 0, 505, 0, 0, 0,
	0, 0, 0, 581, 582, 657, 378, 478, 591, 331,
	343, 346, 336, 355, 0, 356, 332, 333, 338, 340,
	341, 342, 347, 348, 352, 358, 246, 207, 384, 392,
	568, 308, 213, 214, 215, 514, 515, 516, 517, 605,
	606, 610, 202, 455, 456, 457, 458, 289, 600, 305,
	461, 460, 327, 328, 373, 442, 530, 532, 543, 547,
	549, 551, 557, 560, 531, 533, 544, 548, 550, 552,
	558, 561, 520, 522, 524, 526, 539, 538, 535, 563,
	564, 541, 546, 525, 537, 542, 555, 562, 559, 519,
	523, 527, 536, 554, 553, 534, 545, 556, 540, 528,
	521, 529, 0, 194, 218, 362, 0, 447, 285, 635,
	604, 599, 203, 220, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 206,
	219, 229, 233, 240, 258, 273, 275, 282, 295, 306,
	314, 315, 318, 324, 374, 380, 381, 382, 383, 402,
	403, 404, 407, 410, 411, 414, 416, 417, 420, 424,
	428, 429, 430, 432, 434, 436, 448, 453, 467, 468,
	469, 470, 471, 474, 475, 480, 481, 482, 483, 484,
	492, 493, 506, 576, 578, 593, 611, 617, 473, 297,
	298, 437, 438, 310, 311, 631, 632, 296, 588, 618,
	586, 630, 612, 431, 372, 0, 0, 375, 278, 301,
	316, 0, 603, 494, 224, 459, 287, 248, 0, 0,
	208, 243, 227, 256, 271, 274, 320, 385, 393, 422,
	427, 293, 268, 241, 452, 238, 477, 509, 510, 511,
	513, 389, 263, 426, 390, 0, 370, 566, 567, 312,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 360, 264, 0, 0,
	423, 0, 201, 0, 479, 249, 371, 368, 573, 279,
	270, 266, 247, 313, 379, 421, 508, 415, 0, 364,
	0, 0, 489, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	245, 321, 200, 406, 490, 283, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 242, 0, 0, 0, 345, 354,
	353, 334, 335, 337, 339, 344, 351, 357, 0, 0,
	0, 0, 0, 262, 317, 269, 261, 570, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 294, 0, 395, 254, 0, 446, 0, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 359,
	0, 326, 195, 222, 0, 0, 405, 454, 466, 0,
	0, 0, 250, 0, 464, 419, 592, 230, 281, 451,
	425, 462, 433, 284, 0, 0, 463, 366, 575, 443,
	589, 615, 616, 260, 399, 601, 512, 609, 633, 223,
	257, 413, 497, 595, 486, 391, 571, 572, 325, 485,
	292, 199, 363, 621, 221, 472, 365, 239, 228, 577,
	598, 286, 449, 628, 210, 507, 587, 236, 476, 0,
	0, 636, 244, 496, 212, 584, 495, 387, 322, 323,
	211, 0, 450, 265, 290, 0, 0, 255, 408, 579,
	580, 253, 637, 225, 608, 217, 0, 607, 401, 574,
	585, 388, 377, 216, 583, 386, 376, 330, 349, 350,
	277, 303, 440, 369, 441, 302, 304, 397, 396, 398,
	204, 596, 0, 205, 0, 491, 597, 638, 445, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 299, 300,
	309, 361, 412, 439, 435, 444, 0, 569, 590, 602,
	613, 619, 620, 622, 623, 624, 625, 626, 629, 627,
	400, 307, 487, 329, 367, 0, 0, 418, 465, 237,
	594, 488, 197, 0, 0, 0, 0, 251, 252, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 634, 498,
	504, 499, 500, 501, 502, 503, 0, 505, 0, 0,
	0, 0, 0, 0, 581, 582, 657, 378, 478, 591,
	331, 343, 346, 336, 355, 0, 356, 332, 333, 338,
	340, 341, 342, 347, 348, 352, 358, 246, 207, 384,
	392, 568, 308, 213, 214, 215, 514, 515, 516, 517,
	605, 606, 610, 202, 455, 456, 457, 458, 289, 600,
	305, 461, 460, 327, 328, 373, 442, 530, 532, 543,
	547, 549, 551, 557, 560, 531, 533, 544, 548, 550,
	552, 558, 561, 520, 522, 524, 526, 539, 538, 535,
	563, 564, 541, 546, 525, 537, 542, 555, 562, 559,
	519, 523, 527, 536, 554, 553, 534, 545, 556, 540,
	528, 521, 529, 0, 194, 218, 362, 0, 447, 285,
	635, 604, 599, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	306, 314, 315, 318, 324, 374, 380, 381, 382, 383,
	402, 403, 404, 407, 410, 411, 414, 416, 417, 420,
	424, 428, 429, 430, 432, 434, 436, 448, 453, 467,
	468, 469, 470, 471, 474, 475, 480, 481, 482, 483,
	484, 492, 493, 506, 576, 578, 593, 611, 617, 473,
	297, 298, 437, 438, 310, 311, 631, 632, 1423, 588,
	618, 586, 630, 612, 431, 372, 0, 0, 375, 278,
	301, 316, 0, 603, 494, 224, 459, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 320, 385, 393,
	422, 427, 293, 268, 241, 452, 238, 477, 509, 510,
	511, 513, 389, 263, 426, 390, 0, 370, 566, 567,
	312, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 360, 264, 0,
	0, 423, 0, 201, 0, 479, 249, 371, 368, 573,
	279, 270, 266, 247, 313, 379, 421, 508, 415, 0,
	364, 0, 0, 489, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 245, 321, 200, 406, 490, 283, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 345,
	354, 353, 334, 335, 337, 339, 344, 351, 357, 0,
	0, 0, 0, 0, 262, 317, 269, 261, 570, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 395, 254, 0, 446, 0,
	0, 0, 614, 0, 0, 0, 0, 0, 0, 0,
	359, 0, 326, 195, 222, 0, 0, 405, 454, 466,
	0, 0, 0, 250, 0, 464, 419, 592, 230, 281,
	451, 425, 462, 433, 284, 0, 0, 463, 366, 575,
	443, 589, 615, 616, 260, 399, 601, 512, 609, 633,
	223, 257, 413, 497, 595, 486, 391, 571, 572, 325,
	485, 292, 199, 363, 621, 221, 472, 365, 239, 228,
	577, 598, 286, 449, 628, 210, 507, 587, 236, 476,
	0, 0, 636, 244, 496, 212, 584, 495, 387, 322,
	323, 211, 0, 450, 265, 290, 0, 0, 255, 408,
	579, 580, 253, 637, 225, 608, 217, 0, 607, 401,
	574, 585, 388, 377, 216, 583, 386, 376, 330, 349,
	350, 277, 303, 440, 369, 441, 302, 304, 397, 396,
	398, 204, 596, 0, 205, 0, 491, 597, 638, 445,
	209, 231, 232, 234, 0, 276, 280, 288, 291, 299,
	300, 309, 361, 412, 439, 435, 444, 0, 569, 590,
	602, 613, 619, 620, 622, 623, 624, 625, 626, 629,
	627, 400, 307, 487, 329, 367, 0, 0, 418, 465,
	237, 594, 488, 197, 0, 0, 0, 0, 251, 252,
	0, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 634,
	498, 504, 499, 500, 501, 502, 503, 0, 505, 0,
	0, 0, 0, 0, 0, 581, 582, 657, 378, 478,
	591, 331, 343, 346, 336, 355, 0, 356, 332, 333,
	338, 340, 341, 342, 347, 348, 352, 358, 246, 207,
	384, 392, 568, 308, 213, 214, 215, 514, 515, 516,
	517, 605, 606, 610, 202, 455, 456, 457, 458, 289,
	600, 305, 461, 460, 327, 328, 373, 442, 530, 532,
	543, 547, 549, 551, 557, 560, 531, 533, 544, 548,
	550, 552, 558, 561, 520, 522, 524, 526, 539, 538,
	535, 563, 564, 541, 546, 525, 537, 542, 555, 562,
	559, 519, 523, 527, 536, 554, 553, 534, 545, 556,
	540, 528, 521, 529, 0, 194, 218, 362, 0, 447,
	285, 635, 604, 599, 203, 220, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1025, 0, 0, 0, 196,
	198, 206, 219, 229, 233, 240, 258, 273, 275, 282,
	295, 306, 314, 315, 318, 324, 374, 380, 381, 382,
	383, 402, 403, 404, 407, 410, 411, 414, 416, 417,
	420, 424, 428, 429, 430, 432, 434, 436, 448, 453,
	467, 468, 469, 470, 471, 474, 475, 480, 481, 482,
	483, 484, 492, 493, 506, 576, 578, 593, 611, 617,
	473, 297, 298, 437, 438, 310, 311, 631, 632, 296,
	588, 618, 586, 630, 612, 431, 372, 0, 0, 375,
	278, 301, 316, 0, 603, 494, 224, 459, 287, 248,
	0, 0, 208, 243, 227, 256, 271, 274, 320, 385,
	393, 422, 427, 293, 268, 241, 452, 238, 477, 509,
	510, 511, 513, 389, 263, 426, 390, 0, 370, 566,
	567, 312, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 360, 264,
	0, 0, 423, 0, 201, 0, 479, 249, 371, 368,
	573, 279, 270, 266, 247, 313, 379, 421, 508, 415,
	0, 364, 0, 0, 489, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 245, 321, 200, 406, 490, 283, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 242, 0, 0, 0,
	345, 354, 353, 334, 335, 337, 339, 344, 351, 357,
	0, 0, 0, 0, 0, 262, 317, 269, 261, 570,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 395, 254, 0, 446,
	0, 660, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 359, 0, 326, 195, 222, 0, 0, 405, 454,
	466, 0, 0, 0, 250, 0, 464, 419, 592, 230,
	281, 451, 425, 462, 433, 284, 0, 0, 463, 366,
	575, 443, 589, 615, 616, 260, 399, 601, 512, 609,
	633, 223, 257, 413, 497, 595, 486, 391, 571, 572,
	325, 485, 292, 199, 363, 621, 221, 472, 365, 239,
	228, 577, 598, 286, 449, 628, 210, 507, 587, 236,
	476, 0, 0, 636, 244, 496, 212, 584, 495, 387,
	322, 323, 211, 0, 450, 265, 290, 0, 0, 255,
	408, 579, 580, 253, 637, 225, 608, 217, 0, 607,
	401, 574, 585, 388, 377, 216, 583, 386, 376, 330,
	349, 350, 277, 303, 440, 369, 441, 302, 304, 397,
	396, 398, 204, 596, 0, 205, 0, 491, 597, 638,
	445, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	299, 300, 309, 361, 412, 439, 435, 444, 0, 569,
	590, 602, 613, 619, 620, 622, 623, 624, 625, 626,
	629, 627, 400, 307, 487, 329, 367, 0, 0, 418,
	465, 237, 594, 488, 197, 0, 0, 0, 0, 251,
	252, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	634, 498, 504, 499, 500, 501, 502, 503, 0, 505,
	0, 0, 0, 0, 0, 0, 581, 582, 657, 378,
	478, 591, 331, 343, 346, 336, 355, 0, 356, 332,
	333, 338, 340, 341, 342, 347, 348, 352, 358, 246,
	207, 384, 392, 568, 308, 213, 214, 215, 514, 515,
	516, 517, 605, 606, 610, 202, 455, 456, 457, 458,
	289, 600, 305, 461, 460, 327, 328, 373, 442, 530,
	532, 543, 547, 549, 551, 557, 560, 531, 533, 544,
	548, 550, 552, 558, 561, 520, 522, 524, 526, 539,
	538, 535, 563, 564, 541, 546, 525, 537, 542, 555,
	562, 559, 519, 523, 527, 536, 554, 553, 534, 545,
	556, 540, 528, 521, 529, 0, 194, 218, 362, 0,
	447, 285, 635, 604, 599, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 306, 314, 315, 318, 324, 374, 380, 381,
	382, 383, 402, 403, 404, 407, 410, 411, 414, 416,
	417, 420, 424, 428, 429, 430, 432, 434, 436, 448,
	453, 467, 468, 469, 470, 471, 474, 475, 480, 481,
	482, 483, 484, 492, 493, 506, 576, 578, 593, 611,
	617, 473, 297, 298, 437, 438, 310, 311, 631, 632,
	296, 588, 618, 586, 630, 612, 431, 372, 0, 0,
	375, 278, 301, 316, 0, 603, 494, 224, 459, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 320,
	385, 393, 422, 427, 293, 268, 241, 452, 238, 477,
	509, 510, 511, 513, 389, 263, 426, 390, 0, 370,
	566, 567, 312, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 360,
	264, 0, 0, 423, 0, 201, 0, 479, 249, 371,
	368, 573, 279, 270, 266, 247, 313, 379, 421, 508,
	415, 0, 364, 0, 0, 489, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 245, 321, 200, 406, 490, 283, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 345, 354, 353, 334, 335, 337, 339, 344, 351,
	357, 0, 0, 0, 0, 0, 262, 317, 269, 261,
	570, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 395, 254, 0,
	446, 0, 0, 0, 614, 0, 0, 0, 0, 0,
	0, 0, 359, 0, 326, 195, 222, 0, 0, 405,
	454, 466, 0, 0, 0, 250, 0, 464, 419, 592,
	230, 281, 451, 425, 462, 433, 284, 0, 0, 463,
	366, 575, 443, 589, 615, 616, 260, 399, 601, 512,
	609, 633, 223, 257, 413, 497, 595, 486, 391, 571,
	572, 325, 485, 292, 199, 363, 621, 221, 472, 365,
	239, 228, 577, 598, 286, 449, 628, 210, 507, 587,
	236, 476, 0, 0, 636, 244, 496, 212, 584, 495,
	387, 322, 323, 211, 0, 450, 265, 290, 0, 0,
	255, 408, 579, 580, 253, 637, 225, 608, 217, 0,
	607, 401, 574, 585, 388, 377, 216, 583, 386, 376,
	330, 349, 350, 277, 303, 440, 369, 441, 302, 304,
	397, 396, 398, 204, 596, 0, 205, 0, 491, 597,
	638, 445, 209, 231, 232, 234, 0, 276, 280, 288,
	291, 299, 300, 309, 361, 412, 439, 435, 444, 0,
	569, 590, 602, 613, 619, 620, 622, 623, 624, 625,
	626, 629, 627, 400, 307, 487, 329, 367, 0, 0,
	418, 465, 237, 594, 488, 197, 0, 0, 0, 0,
	251, 252, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 634, 498, 504, 499, 500, 501, 502, 503, 0,
	505, 0, 0, 0, 0, 0, 0, 581, 582, 657,
	378, 478, 591, 331, 343, 346, 336, 355, 0, 356,
	332, 333, 338, 340, 341, 342, 347, 348, 352, 358,
	246, 207, 384, 392, 568, 308, 213, 214, 215, 514,
	515, 516, 517, 605, 606, 610, 202, 455, 456, 457,
	458, 289, 600, 305, 461, 460, 327, 328, 373, 442,
	530, 532, 543, 547, 549, 551, 557, 560, 531, 533,
	544, 548, 550, 552, 558, 561, 520, 522, 524, 526,
	539, 538, 535, 563, 564, 541, 546, 525, 537, 542,
	555, 562, 559, 519, 523, 527, 536, 554, 553, 534,
	545, 556, 540, 528, 521, 529, 0, 194, 218, 362,
	0, 447, 285, 635, 604, 599, 203, 220, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 206, 219, 229, 233, 240, 258, 273,
	275, 282, 295, 306, 314, 315, 318, 324, 374, 380,
	381, 382, 383, 4034, 403, 404, 407, 410, 411, 414,
	416, 417, 420, 424, 428, 429, 430, 432, 434, 436,
	448, 453, 467, 468, 469, 470, 471, 474, 475, 480,
	481, 482, 483, 484, 492, 493, 506, 576, 578, 593,
	611, 617, 473, 297, 298, 437, 438, 310, 311, 631,
	632, 296, 588, 618, 586, 630, 612, 431, 372, 0,
	0, 375, 278, 301, 316, 0, 603, 494, 224, 459,
	287, 248, 0, 0, 208, 243, 227, 256, 271, 274,
	320, 385, 393, 422, 427, 293, 268, 241, 452, 238,
	477, 509, 510, 511, 513, 389, 263, 426, 390, 0,
	370, 566, 567, 312, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	360, 264, 0, 0, 423, 0, 201, 0, 479, 249,
	371, 368, 573, 279, 270, 266, 247, 313, 379, 421,
	508, 415, 0, 364, 0, 0, 489, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 245, 321, 200, 406, 490, 283,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 242, 0,
	0, 0, 345, 354, 353, 334, 335, 337, 339, 344,
	351, 357, 0, 0, 0, 0, 0, 262, 317, 269,
	261, 570, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 395, 254,
	0, 446, 0, 0, 0, 614, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 326, 195, 222, 0, 0,
	405, 454, 466, 0, 0, 0, 250, 0, 464, 419,
	592, 230, 281, 451, 425, 462, 433, 284, 0, 0,
	463, 366, 575, 443, 589, 615, 616, 260, 399, 601,
	512, 609, 633, 223, 257, 413, 497, 595, 486, 391,
	571, 572, 325, 485, 292, 199, 363, 621, 221, 472,
	365, 239, 228, 577, 598, 286, 449, 628, 210, 507,
	587, 236, 476, 0, 0, 636, 244, 496, 212, 584,
	495, 387, 322, 323, 211, 0, 450, 265, 290, 0,
	0, 255, 408, 579, 580, 253, 637, 225, 608, 217,
	0, 607, 401, 574, 585, 388, 377, 216, 583, 386,
	376, 330, 349, 350, 277, 303, 440, 369, 441, 302,
	304, 397, 396, 398, 204, 596, 0, 205, 0, 491,
	597, 638, 445, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 299, 300, 309, 361, 412, 439, 435, 444,
	0, 569, 590, 602, 613, 619, 620, 622, 623, 624,
	625, 626, 629, 627, 400, 307, 487, 329, 367, 0,
	0, 418, 465, 237, 594, 488, 197, 0, 0, 0,
	0, 251, 252, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 634, 498, 504, 499, 500, 501, 502, 503,
	0, 505, 0, 0, 0, 0, 0, 0, 581, 582,
	657, 378, 478, 591, 331, 343, 346, 336, 355, 0,
	356, 332, 333, 338, 340, 341, 342, 347, 348, 352,
	358, 246, 207, 384, 392, 568, 308, 213, 214, 215,
	514, 515, 516, 517, 605, 606, 610, 202, 455, 456,
	457, 458, 289, 600, 305, 461, 460, 327, 328, 373,
	442, 530, 532, 543, 547, 549, 551, 557, 560, 531,
	533, 544, 548, 550, 552, 558, 561, 520, 522, 524,
	526, 539, 538, 535, 563, 564, 541, 546, 525, 537,
	542, 555, 562, 559, 519, 523, 527, 536, 554, 553,
	534, 545, 556, 540, 528, 521, 529, 0, 194, 218,
	362, 0, 447, 285, 635, 604, 599, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 306, 314, 315, 318, 324, 374,
	380, 381, 382, 383, 402, 403, 404, 407, 410, 411,
	414, 416, 417, 420, 424, 428, 429, 430, 432, 434,
	436, 448, 453, 467, 468, 469, 470, 471, 474, 475,
	480, 481, 482, 483, 484, 492, 493, 506, 576, 578,
	593, 611, 617, 473, 297, 298, 437, 438, 310, 311,
	631, 632, 296, 588, 618, 586, 630, 612, 431, 372,
	0, 0, 375, 278, 301, 316, 0, 603, 494, 224,
	459, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 320, 385, 393, 422, 427, 293, 268, 241, 452,
	238, 477, 509, 510, 511, 513, 389, 263, 426, 390,
	0, 370, 566, 567, 312, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 360, 264, 0, 0, 423, 0, 201, 0, 479,
	249, 371, 368, 573, 279, 270, 266, 247, 313, 379,
	421, 508, 415, 0, 364, 0, 0, 489, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 245, 321, 200, 406, 490,
	283, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 345, 354, 353, 334, 335, 337, 339,
	344, 351, 357, 0, 0, 0, 0, 0, 262, 317,
	269, 261, 570, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 395,
	254, 0, 446, 0, 0, 0, 614, 0, 0, 0,
	0, 0, 0, 0, 359, 0, 326, 195, 222, 0,
	0, 405, 454, 466, 0, 0, 0, 250, 0, 464,
	419, 592, 230, 281, 451, 425, 462, 433, 284, 0,
	0, 463, 366, 575, 443, 589, 615, 616, 260, 399,
	601, 512, 609, 633, 223, 257, 413, 497, 595, 486,
	391, 571, 572, 325, 485, 292, 199, 363, 621, 221,
	472, 365, 239, 228, 577, 598, 286, 449, 628, 210,
	507, 587, 236, 476, 0, 0, 636, 244, 496, 212,
	584, 495, 387, 322, 323, 211, 0, 450, 265, 290,
	0, 0, 255, 408, 579, 580, 253, 637, 225, 608,
	217, 0, 607, 401, 574, 585, 388, 377, 216, 583,
	386, 376, 330, 349, 350, 277, 303, 440, 369, 441,
	302, 304, 397, 396, 398, 204, 596, 0, 205, 0,
	491, 597, 638, 445, 209, 231, 232, 234, 0, 276,
	280, 288, 291, 299, 300, 309, 361, 412, 439, 435,
	444, 0, 569, 590, 602, 613, 619, 620, 622, 623,
	624, 625, 626, 629, 627, 400, 307, 487, 329, 367,
	0, 0, 418, 465, 237, 594, 488, 197, 0, 0,
	0, 0, 251, 252, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 634, 498, 504, 499, 500, 501, 502,
	503, 0, 505, 0, 0, 0, 0, 0, 0, 581,
	582, 657, 378, 478, 591, 331, 343, 346, 336, 355,
	0, 356, 332, 333, 338, 340, 341, 342, 347, 348,
	352, 358, 246, 207, 384, 392, 568, 308, 213, 214,
	215, 514, 515, 516, 517, 605, 606, 610, 202, 455,
	456, 457, 458, 289, 600, 305, 461, 460, 327, 328,
	373, 442, 530, 532, 543, 547, 549, 551, 557, 560,
	531, 533, 544, 548, 550, 552, 558, 561, 520, 522,
	524, 526, 539, 538, 535, 563, 564, 541, 546, 525,
	537, 542, 555, 562, 559, 519, 523, 527, 536, 554,
	553, 534, 545, 556, 540, 528, 521, 529, 0, 194,
	218, 362, 0, 447, 285, 635, 604, 599, 203, 220,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 206, 219, 229, 233, 240,
	258, 273, 275, 282, 295, 306, 314, 315, 318, 324,
	374, 380, 381, 382, 383, 402, 403, 404, 407, 410,
	411, 414, 416, 417, 420, 424, 428, 429, 430, 432,
	434, 436, 448, 453, 467, 468, 469, 470, 471, 474,
	475, 480, 481, 482, 483, 484, 492, 493, 506, 576,
	578, 593, 611, 617, 473, 297, 298, 437, 438, 310,
	311, 631, 632, 296, 588, 618, 586, 630, 612, 431,
	372, 0, 0, 375, 278, 301, 316, 0, 603, 494,
	224, 459, 287, 248, 0, 0, 208, 243, 227, 256,
	271, 274, 320, 385, 393, 422, 427, 293, 268, 241,
	452, 238, 477, 509, 510, 511, 513, 389, 263, 426,
	390, 0, 370, 566, 567, 312, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 360, 264, 0, 0, 423, 0, 201, 0,
	479, 249, 371, 368, 573, 279, 270, 266, 247, 313,
	379, 421, 508, 415, 0, 364, 0, 0, 489, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 245, 321, 200, 406,
	490, 283, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	242, 0, 0, 0, 345, 354, 353, 334, 335, 337,
	339, 344, 351, 357, 0, 0, 0, 0, 0, 262,
	317, 269, 261, 570, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	395, 254, 0, 446, 0, 0, 0, 614, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 326, 195, 222,
	0, 0, 405, 454, 466, 0, 0, 0, 250, 0,
	464, 419, 592, 230, 281, 451, 425, 462, 433, 284,
	0, 0, 463, 366, 575, 443, 589, 615, 616, 260,
	399, 601, 512, 609, 633, 223, 257, 413, 497, 595,
	486, 391, 571, 572, 325, 485, 292, 199, 363, 621,
	221, 472, 365, 239, 228, 577, 598, 286, 449, 628,
	210, 507, 587, 236, 476, 0, 0, 636, 244, 496,
	212, 584, 495, 387, 322, 323, 211, 0, 450, 265,
	290, 0, 0, 255, 408, 579, 580, 253, 637, 225,
	608, 217, 0, 607, 401, 574, 585, 388, 377, 216,
	583, 386, 376, 330, 349, 350, 277, 303, 440, 369,
	441, 302, 304, 397, 396, 398, 204, 596, 0, 205,
	0, 491, 597, 638, 445, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 299, 300, 309, 361, 412, 439,
	435, 444, 0, 569, 590, 602, 613, 619, 620, 622,
	623, 624, 625, 626, 629, 627, 400, 307, 487, 329,
	367, 0, 0, 418, 465, 237, 594, 488, 197, 0,
	0, 0, 0, 251, 252, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 634, 498, 504, 499, 500, 501,
	502, 503, 0, 505, 0, 0, 0, 0, 0, 0,
	581, 582, 657, 378, 478, 591, 331, 343, 346, 336,
	355, 0, 356, 332, 333, 338, 340, 341, 342, 347,
	348, 352, 358, 246, 207, 384, 392, 568, 308, 213,
	214, 215, 514, 515, 516, 517, 605, 606, 610, 202,
	455, 456, 457, 458, 289, 600, 305, 461, 460, 327,
	328, 373, 442, 530, 532, 543, 547, 549, 551, 557,
	560, 531, 533, 544, 548, 550, 552, 558, 561, 520,
	522, 524, 526, 539, 538, 535, 563, 564, 541, 546,
	525, 537, 542, 555, 562, 559, 519, 523, 527, 536,
	554, 553, 534, 545, 556, 540, 528, 521, 529, 0,
	194, 218, 362, 0, 447, 285, 635, 604, 599, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 306, 314, 315, 318,
	324, 374, 380, 381, 382, 383, 402, 403, 404, 407,
	410, 411, 414, 416, 417, 420, 424, 428, 429, 430,
	432, 434, 436, 448, 453, 467, 468, 469, 470, 471,
	474, 475, 480, 481, 482, 483, 484, 492, 493, 506,
	576, 578, 593, 611, 617, 473, 297, 298, 437, 438,
	310, 311, 631, 632, 296, 588, 618, 586, 630, 612,
	431, 372, 0, 0, 375, 278, 301, 316, 0, 603,
	494, 224, 459, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 320, 385, 393, 422, 427, 293, 268,
	241, 452, 238, 477, 509, 510, 511, 513, 389, 263,
	426, 0, 0, 370, 566, 567, 312,
}

var yyPact = [...]int{
	-1000, -1000, 6186, -1000, -523, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2309, 2323, -1000, -1000, -1000, -1000, 2484, -1000, 987, 2054,
	-1000, 2302, 4933, -1000, 54726, 491, -1000, 51842, 490, 857,
	238, 35980, -1000, 187, -1000, 175, 53284, 183, -1000, -1000,
	-1000, -1000, -433, 21558, 2224, 50, 48, 54726, -1000, -1000,
	-1000, -1000, 2444, 1988, -1000, 404, -1000, -1000, -1000, -1000,
	-1000, -1000, 51121, -1000, 1082, -1000, -1000, 2300, 2299, 2502,
	887, 2245, -1000, 2362, 1988, -1000, 21558, 2425, 2348, 20837,
	20837, 438, -1000, -1000, 265, -1000, -1000, 30933, 54726, 38864,
	1039, -1000, 2302, -1000, -1000, -1000, 186, -1000, 330, 1917,
	-1000, 1913, -1000, 859, 470, 377, 841, 483, 376, 363,
	360, 350, 345, 343, 341, 340, 384, -1000, 925, 925,
	-219, -221, 1340, 415, 425, 425, 1118, 455, 2265, 2264,
	-1000, -1000, 925, 925, 925, 324, 925, 925, 925, 925,
	313, 312, 925, 925, 925, 925, 925, 925, 925, 925,
	925, 925, 925, 925, 925, 925, 925, 925, 925, 902,
	2302, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54726, 235,
	54726, -1000, 797, 54726, -439, 1049, 1049, 53, 1049, 1049,
	1049, 1049, 188, 971, 47, -1000, 167, 279, 179, 284,
	1033, 303, -1000, -1000, 250, 1033, 1779, -1000, 891, 259,
	156, -1000, 1049, 1049, -1000, 14323, 208, 14323, 14323, -1000,
	2276, -1000, -1000, -1000, -1000, -1000, 1284, -1000, -1000, -1000,
	-1000, -39, 449, -1000, -1000, -1000, -1000, 53284, 50400, 268,
	-1000, -1000, 337, -1000, -1000, 1824, 1224, 21558, 1466, 883,
	-1000, -1000, 1404, 861, -1000, -1000, -1000, -1000, -1000, 522,
	-1000, 23721, 23721, 23721, 23721, -1000, -1000, 1925, 49679, 1925,
	1925, 23721, 1925, 23721, 1925, 1925, 1925, 21558, 1925, 1925,
	1925, 1925, -1000, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	-1000, -1000, -1000, -1000, 1925, 794, 1925, 1925, 1925, 1925,
	1925, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1925, 1925,
	1925, 1925, 1925, 1925, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26605, 1489,
	1453, 1451, -1000, 18674, 1925, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 54726, -1000, 1925, 216, 53284,
	53284, 356, 2362, 1988, -1000, 2444, 2417, 404, -1000, 3104,
	1687, 1439, 1363, 1988, 1882, 54726, -1000, 1981, -1000, -1000,
	-1000, -1000, 2152, 1405, 1766, -1000, -1000, -1000, -1000, 1460,
	21558, -1000, -1000, 2478, -1000, 28048, 791, 2472, 48958, -1000,
	438, 438, 1908, 407, 13, -1000, -1000, -1000, -1000, 936,
	35259, -1000, -1000, -1000, -1000, -1000, 1784, 54726, -1000, -1000,
	4190, 1334, -1000, 2053, -1000, 1776, -1000, 2016, 21558, 2063,
	489, 1334, 466, 464, 461, -1000, -61, -1000, -1000, -1000,
	-1000, -1000, -1000, 925, 925, 925, -1000, 333, 2424, 4933,
	5922, -1000, -1000, -1000, 48237, 2048, 1334, -1000, 2040, -1000,
	1001, 833, 856, 856, 1334, -1000, -1000, 54005, 1334, 996,
	984, 1334, 1334, 53284, 53284, -1000, 47516, -1000, 46795, 46074,
	1315, 53284, 45353, 44632, 43911, 43190, 42469, -1000, 2148, -1000,
	2034, -1000, -1000, -1000, 54005, 1334, 1334, 54005, 53284, 54005,
	54726, 1334, -1000, -1000, 349, -1000, -1000, 1312, 1286, 1283,
	925, 925, 1282, 1759, 1757, 1755, 925, 925, 1281, 1743,
	37422, 1732, 278, 1279, 1275, 1274, 1287, 1722, 206, 1717,
	1246, 1226, 1265, 53284, 2037, 54726, -1000, 243, 1043, 957,
	935, 2302, 2219, 1892, 448, 472, 1334, 428, 428, 53284,
	-1000, 15050, -1000, 213, -1000, 1703, 21558, -1000, 1078, 1033,
	1033, -1000, -1000, -1000, -1000, -1000, -1000, 1049, 54726, 1078,
	-1000, -1000, -1000, 1033, 1049, 54726, 1049, 1049, 1049, 1049,
	1033, 1033, 1033, 1049, 54726, 54726, 54726, 54726, 54726, 54726,
	54726, 54726, 54726, 14323, 891, 1049, -440, -1000, 1693, -1000,
	-1000, 2128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14323, 14323,
	-1000, -1000, -1000, -1000, -1000, 1889, -1000, 172, 8, 181,
	-1000, 41748, 527, 932, -1000, 527, -1000, -1000, -1000, 1886,
	41027, -1000, -441, -442, -444, -447, -1000, -1000, -1000, -448,
	-451, -1000, -1000, -1000, 21558, 21558, 21558, 21558, -253, -1000,
	1011, 23721, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21558,
	239, 1152, 23721, 23721, 23721, 23721, 23721, 23721, 23721, 25163,
	24442, 23721, 23721, 23721, 23721, 23721, 23721, -1000, -1000, 33096,
	8522, 8522, 861, 861, 861, 861, -1000, -175, 1885, 54005,
	-1000, -1000, -1000, 790, 21558, 21558, 861, -1000, 1334, 4826,
	18674, 20837, 20837, 21558, 945, 1224, 54005, 21558, -1000, 1363,
	-1000, -1000, -1000, -1000, 1245, -1000, -1000, 1027, 2273, 2273,
	2273, 2273, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 2273, 21558, 703, 703, 1573, 21558, 21558, 21558,
	21558, 21558, 21558, 17231, 21558, 21558, 23721, 21558, 21558, 21558,
	1363, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	1363, 21558, 1673, 21558, 21558, 21558, 21558, 21558, 21558, 20837,
	16504, 20837, 20837, 20837, 20837, 20837, -1000, -1000, -1000, -1000,
	-1000, -1000, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558,
	1363, 21558, 21558, 21558, 21558, 21558, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1410, 1506, 1412, 21558,
	-1000, 1883, -1000, -180, 30212, 21558, 1639, 2466, 2083, 53284,
	-1000, -1000, -1000, 2362, -1000, 2362, 1410, 2218, 2163, 20837,
	-1000, -1000, 2218, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1750, -1000, 54726, 1882, 2343, 53284, 2159, 1621, 347,
	-1000, 21558, 21558, 1874, -1000, 1676, 54726, -1000, -253, -1000,
	40306, -1000, -1000, 13596, 54726, 334, 54726, -1000, 29491, 39585,
	302, -1000, 13, 1846, -1000, 18, 5, 17952, 860, -1000,
	-1000, -1000, 1340, 25884, 1811, 860, 111, -1000, -1000, -1000,
	2016, -1000, 2016, 2016, 2016, 2016, 347, 347, 347, 347,
	-1000, -1000, -1000, -1000, -1000, 2035, 2025, -1000, 2016, 2016,
	2016, 2016, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2024,
	2024, 2024, 2023, 2023, 2017, 2017, 419, -1000, 21558, 417,
	38864, 2318, 1263, 1699, 243, 429, 2082, 1334, 1334, 1334,
	429, -1000, 1355, 1344, 1342, -1000, -515, 1865, -1000, -1000,
	2423, -1000, -1000, 944, 1023, 1018, 1035, 53284, 214, 325,
	-1000, 412, -1000, 38864, 1334, 981, 856, 1334, -1000, 1334,
	-1000, -1000, -1000, -1000, -1000, 1334, -1000, -1000, 1852, -1000,
	1866, 1130, 1015, 1088, 1012, 1852, -1000, -1000, -181, 1852,
	-1000, 1852, -1000, 1852, -1000, 1852, -1000, 1852, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 953, 299, -333,
	53284, 214, 444, -1000, 440, 33096, -1000, -1000, -1000, 33096,
	33096, -1000, -1000, -1000, -1000, 1619, 1617, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -498, 54726, -1000, 229,
	931, 305, 352, 304, 54726, 431, 2373, 2371, 2365, 2357,
	2346, 253, 311, 54726, 54726, 428, 2109, 54726, 2325, 54726,
	-1000, -1000, -1000, -1000, 1589, 1588, -1000, 1224, 54726, -1000,
	-1000, 1049, 1049, -1000, -1000, 54726, 1049, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1049, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54726, -1000, -1000, -1000, -1000, -39, 169, -1000, -1000,
	53284, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-106, -1000, 765, 16, 411, -1000, -1000, -1000, -1000, -1000,
	2354, -1000, 1224, 995, 961, -1000, 1925, -1000, -1000, 1217,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 239, 23721,
	23721, 23721, 1922, 481, 1222, 1135, 1233, 1388, 1388, 1159,
	23721, 1159, 23721, 862, 862, 862, 862, 862, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1576, -1000, 1925, 54005,
	1770, 16504, 1974, 2372, 1363, 875, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3820, 1737, -1000, 1737,
	1352, 948, -1000, 21558, 1363, 3816, -1000, -1000, 1363, 1363,
	21558, -1000, -1000, 21558, 21558, 21558, 21558, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 21558, 1699, 1851,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1849, 2464,
	1582, 1699, 1699, 1699, 1699, 1699, 21558, 1335, -1000, -1000,
	-1000, 1408, 3810, 1590, 3806, 1699, 1699, -1000, 1699, 3530,
	3485, 1363, 1824, 2642, 2634, 1699, 1699, 1699, 1699, 1699,
	2629, 2618, 1699, 1699, 2610, 1699, 3455, 1699, 2586, 2574,
	2563, 2548, 2541, 2519, 2515, 2508, 2503, 2486, 2482, 2474,
	2460, 2445, 2400, 2396, 2367, 2353, 1699, 1699, 1699, 3447,
	1699, 3438, 1699, 3430, 1699, 1699, 3426, 2341, 2331, 1363,
	1848, -1000, 3412, 1699, 3408, 3390, 3386, 2320, 3378, 3365,
	3360, 1699, 1699, 1699, 2298, 3356, 3352, 3345, 3334, 3323,
	3308, 3290, 3285, 3279, 1699, 1412, 1412, 1412, 1412, 1412,
	3264, -261, 1699, 1363, -1000, -1000, -1000, -1000, -1000, 3194,
	2275, 3156, 3024, 3016, 3000, 1363, 1847, 1925, 787, -1000,
	-1000, 1737, 1363, 1363, 1737, 1737, 2972, 2968, 2942, 2938,
	2900, 2893, 1699, 1699, -1000, 1699, 2876, 2864, 2271, 2252,
	1363, -1000, 1412, 54726, -1000, -399, -1000, -1, 992, 1925,
	-1000, 37422, 1363, -1000, 7292, -1000, 1108, -1000, -1000, -1000,
	-1000, -1000, 34538, 1716, 2218, -1000, -1000, 1925, 1686, -1000,
	-1000, 347, 69, 33817, 854, 854, 119, 1224, 1224, 21558,
	-1000, -1000, -1000, -1000, -1000, -1000, 783, 2435, 381, 1925,
	-1000, 1875, 2729, -1000, -1000, -1000, 2340, 27327, -1000, -1000,
	1925, 1925, 54726, 1816, 1707, -1000, 781, -1000, 1351, 1846,
	13, 2, -1000, -1000, -1000, -1000, 1224, -1000, 1324, 338,
	353, -1000, 414, -1000, -1000, -1000, -1000, 2250, 81, -1000,
	-1000, -1000, 362, 347, -1000, -1000, -1000, -1000, -1000, -1000,
	1563, 1563, -1000, -1000, -1000, -1000, -1000, 1258, -1000, -1000,
	-1000, -1000, 1257, -1000, -1000, 1255, -1000, -1000, 2871, 2108,
	417, -1000, -1000, 925, 1537, -1000, -1000, 2255, 925, 925,
	53284, -1000, -1000, 1788, 2318, 229, 54726, 958, 2107, -1000,
	2082, 2082, 2082, 54726, -1000, -1000, -1000, -1000, -1000, -1000,
	-506, 176, 566, -1000, -1000, -1000, 4998, 53284, 1684, -1000,
	215, -1000, 1688, -1000, 53284, -1000, 1679, 2021, 1334, 1334,
	-1000, -1000, -1000, 53284, 1925, -1000, -1000, -1000, -1000, 468,
	2295, 292, -1000, -1000, -286, -1000, -1000, 214, 215, 54005,
	1334, 860, -1000, -1000, -1000, -1000, -1000, -501, 1661, 459,
	221, 328, 54726, 54726, 54726, 54726, 54726, 769, -1000, -1000,
	28, -1000, -1000, 199, -1000, -1000, -1000, -1000, 199, -1000,
	-1000, -1000, -1000, 288, 432, -1000, 54726, 54726, 951, -1000,
	-1000, -1000, -1000, -1000, 1033, -1000, -1000, 1033, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2281, 54726, 14, -470, -1000, -467, 21558, -1000, -1000, -1000,
	-1000, 1345, 480, 1222, 23721, 23721, 4826, 4826, 23721, -1000,
	-1000, -1000, 346, 346, 33096, -1000, 23721, 21558, 20837, -1000,
	-1000, 21558, 21558, 938, -1000, 21558, 1104, -1000, 21558, -1000,
	-261, 1412, 1699, 1699, 1699, 1699, -261, -261, -261, -261,
	-261, -261, -261, -261, -261, -261, 1888, -1000, 21558, 21558,
	21558, 1363, 294, -1000, -1000, -1000, -1000, -1000, 2461, -1000,
	21558, -1000, 33096, 21558, 21558, 21558, -1000, -1000, -1000, 21558,
	21558, -1000, -1000, 21558, -1000, 21558, -1000, -1000, -1000, -1000,
	-1000, -1000, 21558, -1000, 21558, -1000, -1000, -1000, 21558, -1000,
	21558, -1000, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558,
	-1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558,
	-1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558,
	-1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000, -1000,
	-1000, 21558, -1000, 21558, -1000, 21558, -1000, -1000, 21558, -1000,
	21558, -1000, 21558, -1000, 21558, 21558, -1000, 21558, 21558, 21558,
	-1000, 21558, 21558, 21558, 21558, -1000, -1000, -1000, -1000, 21558,
	21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, 21558, -1000,
	-1000, -1000, -1000, -1000, -1000, 21558, -1000, 38864, 54, -261,
	1673, 54, 1673, 23000, 801, 800, 22279, -1000, 20837, 15777,
	-1000, -1000, -1000, -1000, -1000, 21558, 21558, 21558, 21558, 21558,
	21558, -1000, -1000, -1000, 21558, 21558, -1000, 21558, -1000, 21558,
	-1000, -1000, -1000, -1000, -1000, 992, -1000, 856, 856, 856,
	53284, -1000, -1000, -1000, -1000, 1843, -1000, 2359, -1000, 2176,
	2174, 2454, 2435, -1000, 29491, 2218, -1000, -1000, 53284, -388,
	-1000, 2216, 2272, 854, 854, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12869, 2362, 21558, 2102, 54005, 246, -1000, 28770,
	53284, 54005, 29491, 29491, 29491, 29491, 29491, -1000, 2134, 2130,
	-1000, 2183, 2158, 2207, 54726, -1000, 1410, 1652, -1000, 21558,
	31654, 1817, 29491, -1000, -1000, 29491, 54726, 12142, -1000, -1000,
	12, -11, -1000, -1000, -1000, -1000, 1340, -1000, -1000, 1070,
	2339, 2247, -1000, -1000, -1000, -1000, -1000, 1638, -1000, 1630,
	1841, 1627, 1604, 299, -1000, 2062, 2274, 925, 925, -1000,
	1253, -1000, 1334, 1535, 1525, -1000, -1000, -1000, 443, -1000,
	2321, 54726, 2101, 2100, 2098, -1000, -512, 1251, 2020, 2000,
	21558, 2019, 2411, 1837, 53284, -1000, -1000, 54005, -1000, 264,
	-1000, 417, 53284, -1000, -1000, -1000, 325, 54726, -1000, 9699,
	-1000, -1000, -1000, 215, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 54726, 237, -1000, 2018, 1156, -1000, -1000, 2068, -1000,
	-1000, -1000, -1000, 212, 296, 1520, 197, 1513, 197, -1000,
	54726, 927, 2108, 54726, -1000, -1000, -1000, 1049, 1049, -1000,
	-1000, 2269, -1000, 1334, 1699, 23721, 23721, -1000, 861, -1000,
	-1000, 390, -230, 2016, 2016, -1000, 2016, 2017, -1000, 2016,
	140, 2016, 138, 2016, -1000, -1000, 1363, 1363, -1000, 1412,
	-1000, 2184, 1179, -1000, 1224, 21558, 2853, -1000, -1000, -261,
	-261, -261, -261, -261, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -71, 2812, 2774, 1699, -1000, 2015,
	2013, 21558, 1699, 1363, 2177, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 2172, 2165, 2151,
	2129, 2110, 2105, 2094, 2070, 2065, 2061, 2050, 2032, 1995,
	1989, 1984, 1914, 1699, 1699, 1893, 1699, 1853, 1844, -1000,
	1224, 1412, 2746, 1412, 1699, 1699, 2717, 321, 1699, 1601,
	1601, 1601, 1601, 1601, 1412, 1412, 1412, 1412, 1699, 53284,
	-1000, -261, -1000, -1000, -306, -313, -1000, 1363, -261, 1840,
	23721, 1699, 23721, 23721, 23721, 1699, 1363, -1000, 1810, 1782,
	2649, 1778, 1699, 2552, 1699, 1699, 1699, 1721, -1000, 2344,
	2344, 2344, 1586, 1108, 54726, -1000, -1000, -1000, -1000, 2435,
	2431, 1839, -1000, -1000, 69, 604, -1000, 2211, 2272, -1000,
	2403, 2212, 2402, -1000, -1000, -1000, -1000, -1000, 1224, -1000,
	2305, 1802, -1000, 928, 1825, -1000, -1000, 20116, 1596, 2173,
	777, 1586, 1860, 2729, 2074, 2091, 3571, -1000, -1000, -1000,
	-1000, 2118, -1000, 2004, -1000, -1000, 1981, -1000, 1682, 334,
	29491, 1859, 1859, -1000, 530, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1054, 7564, 2497, -1000, 1508, -1000, 1322, 192,
	1228, -1000, -1000, 925, 925, -1000, 975, 973, -1000, 54726,
	2012, -1000, 347, 1493, 347, 1220, -1000, -1000, 1200, -1000,
	-1000, -1000, -1000, 1924, 2140, -1000, -1000, -1000, -1000, 54726,
	-1000, -1000, 54726, 54726, 54726, 1998, 2401, -1000, 21558, 1994,
	926, 2730, 53284, 53284, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 442, 925, -481, 307, 306,
	925, 925, 925, -514, -1000, -1000, 1562, 1559, -1000, -211,
	-1000, 21558, -1000, -1000, -1000, 1248, 1248, 1489, 1453, 1451,
	-1000, 1981, -1000, -1000, -1000, 1662, -1000, -1000, -195, 53284,
	53284, 53284, 53284, -1000, -1000, 1174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 861, 1363,
	372, -204, 1363, -1000, -1000, 347, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21558, -1000, 21558, -1000,
	1224, 21558, -1000, -1000, -1000, -1000, -1000, 2362, 1449, 21558,
	21558, -1000, 1197, 1195, 1699, -1000, -1000, -1000, 21558, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000,
	21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000,
	21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000, 21558, -1000,
	21558, -1000, 21558, -1000, -1000, 21558, -1000, -1000, -1000, 21558,
	-1000, 21558, -1000, 21558, -1000, -1000, -1000, 21558, 218, 346,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1363, 331, -1000, -1000, -1000, -1000, 2453, -1000, 1363,
	21558, 4826, -1000, 4826, 4826, 4826, -1000, -1000, -1000, 21558,
	-1000, 21558, 21558, -1000, 21558, -1000, 21558, -1000, -1000, -1000,
	-1000, 21558, 1925, 2191, 1925, 1925, 31654, -1000, -1000, 2431,
	2429, 2398, 2187, 2185, 2185, 2211, -1000, 2391, 2387, -1000,
	1444, 2385, 1440, 963, -1000, 54005, 21558, 246, -1000, 394,
	53284, 246, 53284, -1000, 2427, -1000, -1000, 21558, 1993, -1000,
	21558, -1000, -1000, -1000, -1000, 8522, 2435, 1859, -1000, -1000,
	871, -1000, 21558, -1000, -1000, -1000, 9032, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1431, 1400, -1000, -1000, 1983,
	21558, -1000, -1000, -1000, 1653, 1505, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1981, -1000, -1000, -1000, -1000, 325,
	-508, 2673, 53284, 1186, -1000, 1557, 1837, 319, 246, 1398,
	925, 925, 925, 1177, 1166, 37422, 1504, -1000, 53284, 355,
	-1000, 325, -1000, -222, -227, 1699, -1000, -1000, 2330, -1000,
	-1000, 15777, -1000, -1000, 1980, 2078, -1000, -1000, -1000, -1000,
	2153, -179, -209, -1000, -1000, 1699, 1699, 1655, 1363, -1000,
	1699, 1699, 1464, 1436, -1000, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1412, 1659, -1000, 218, 1363,
	2089, -1000, -1000, 8522, -1000, -1000, 2427, 2383, 54, -1000,
	-1000, 211, 54, 1224, 955, 1363, 1363, 955, 1648, 1699,
	1593, 1523, 1699, 1699, 32375, -1000, 2382, 2378, 38143, 38143,
	992, 2429, -271, 21558, 21558, 2182, 1161, -1000, -1000, -1000,
	-1000, 1385, 1382, -1000, 1380, -1000, 2492, -1000, 1224, -1000,
	246, -1000, 520, 1825, -1000, 2362, 1224, 53284, 1224, 67,
	2427, -1000, 1699, -1000, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925, 1925,
	1925, 1925, 1925, -1000, -1000, 53284, 2614, -1000, -1000, 2329,
	1499, 163, -1000, 1413, 1837, -1000, -1000, 209, -1000, 21558,
	-1000, 37422, 1378, 1370, -1000, -1000, -1000, -1000, -514, -1000,
	-1000, -1000, -1000, -1000, -1000, 404, 1834, -1000, 918, 53284,
	54726, -1000, 2133, -1000, -1000, -1000, 21558, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21558, -1000, 1363, 2087, -1000, -358,
	-1000, -487, 21558, -261, -1000, -1000, -261, -1000, -1000, -1000,
	-1000, -1000, 21558, -1000, -1000, 21558, -1000, 21558, -1000, -1000,
	1463, -1000, -1000, -1000, -1000, -1000, 1463, 1463, -1000, -271,
	-1000, 1828, -1000, 53284, 1224, 1824, -1000, 1143, -1000, -1000,
	-1000, -1000, -1000, 54005, 1825, 53284, -1000, 1457, 1363, 1925,
	2362, -1000, 1435, -1000, 404, -1000, 1951, 2000, -1000, -1000,
	-1000, 19395, -1000, -1000, -1000, -1000, -1000, 283, -191, 15777,
	11415, 1419, -1000, -185, 1699, 1412, -1000, -458, -1000, -1000,
	-1000, -1000, 291, -1000, -1000, 1824, -1000, -1000, 1516, 1502,
	1443, 36701, -1000, -1000, -1000, -1000, -271, -1000, -1000, 2328,
	-1000, -1000, 1818, -1000, -1000, 31654, 52563, -1000, -172, 342,
	-191, 21558, 1946, 1363, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -25, -1000, -1000, 487, -1000, -1000, -1000, 2068,
	-207, -1000, -1000, -1000, 308, -473, -269, -296, 23721, -1000,
	21558, -1000, 21558, -1000, 21558, -1000, -1000, -1000, 53284, 1925,
	-1000, 1377, -1000, 4144, -323, 2086, -1000, -73, -1000, -1000,
	-1000, 1041, 1346, -1000, -1000, -1000, -1000, -1000, -1000, 1804,
	53284, -1000, 413, -1000, -1000, 15050, -195, -215, 956, -1000,
	-1000, -1000, -1000, -1000, 4826, 1339, 1280, 1699, -1000, 53284,
	-1000, 52563, -318, 860, 8522, -1000, 2071, 1999, 2452, -1000,
	-1000, -1000, -1000, -1000, -1000, -520, 1362, 231, -1000, -1000,
	-1000, 308, -305, -1000, 21558, -1000, 21558, -1000, 1363, -1000,
	-1000, 2278, 67, -1000, 2490, -1000, 2487, 921, 921, -1000,
	1140, -520, -1000, -1000, -1000, -1000, 1699, 1699, -1000, -324,
	-1000, -1000, -1000, -1000, -1000, 365, 1169, -1000, -1000, -1000,
	-1000, -1000, 8522, -1000, -1000, -1000, 262, 262, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3118, 3117, 27, 9, 36, 35, 3116, 66, 99,
	203, 52, 205, 107, 3108, 170, 3106, 3105, 3103, 3101,
	3100, 3099, 2528, 2526, 2517, 3097, 3096, 3094, 3093, 3092,
	3090, 3089, 3087, 3086, 3085, 183, 178, 198, 3082, 3078,
	3076, 115, 192, 82, 85, 195, 3075, 3074, 72, 3073,
	3072, 3066, 189, 188, 182, 1023, 3065, 181, 112, 43,
	3064, 3063, 3062, 3061, 3059, 3058, 3057, 3052, 3049, 3047,
	3044, 3043, 3040, 3038, 3037, 3033, 3031, 3023, 298, 3021,
	3019, 15, 3016, 75, 3014, 3011, 3009, 3008, 3002, 7,
	2999, 2997, 31, 37, 67, 2996, 2989, 40, 2983, 2980,
	2979, 2978, 2977, 81, 2975, 16, 2974, 34, 2973, 2969,
	124, 2967, 2965, 2962, 38, 2956, 2955, 2950, 13, 166,
	2949, 2948, 139, 2945, 2944, 2943, 179, 201, 2940, 2932,
	174, 101, 109, 2930, 2928, 103, 196, 2918, 121, 2905,
	2901, 2898, 153, 2894, 3214, 2884, 65, 87, 2883, 163,
	2881, 2879, 197, 80, 12, 22, 23, 2878, 2876, 64,
	70, 2874, 111, 2873, 2870, 104, 68, 2866, 100, 97,
	2865, 2864, 28, 4, 2860, 5, 1, 6, 93, 2853,
	2849, 114, 2848, 2847, 2845, 95, 2844, 2842, 430, 2835,
	91, 129, 106, 62, 2833, 167, 132, 2829, 2822, 2821,
	2817, 2811, 44, 2810, 2809, 2808, 138, 258, 169, 2807,
	145, 341, 48, 146, 2801, 207, 77, 202, 164, 2792,
	2789, 133, 130, 2787, 2786, 53, 165, 187, 2785, 102,
	127, 118, 184, 94, 134, 2780, 2779, 56, 61, 2774,
	2772, 2767, 2766, 180, 2765, 2764, 59, 2761, 54, 2758,
	190, 2754, 137, 74, 2748, 172, 173, 2747, 63, 2746,
	2745, 83, 96, 58, 29, 2743, 158, 162, 125, 168,
	2742, 2739, 49, 2736, 2735, 2726, 199, 293, 2724, 2720,
	308, 175, 141, 151, 89, 2719, 316, 2714, 2712, 47,
	4346, 7350, 2711, 19, 160, 2710, 2709, 6922, 50, 39,
	14, 2708, 206, 2701, 2700, 2692, 2686, 234, 204, 110,
	161, 57, 2684, 2681, 2679, 46, 2676, 2659, 2655, 2643,
	2639, 2634, 71, 33, 32, 30, 215, 60, 10, 98,
	159, 154, 76, 2626, 2620, 2619, 123, 88, 2617, 157,
	156, 135, 128, 2612, 177, 142, 119, 2611, 92, 25,
	2610, 2609, 2606, 2605, 90, 2598, 2594, 2593, 2585, 155,
	143, 122, 78, 2583, 79, 117, 149, 148, 45, 2582,
	41, 2579, 2577, 20, 194, 26, 2576, 51, 108, 116,
	2573, 6209, 191, 2569, 11, 338, 147, 2565, 2564, 17,
	24, 8, 2561, 2555, 2554, 2551, 131, 2550, 2547, 2546,
	2544, 21, 42, 18, 2, 113, 73, 2540, 2536, 140,
	2530, 2524, 0, 1017, 126, 2500, 200,
}

//line sql.y:8550
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 410, 411, 411, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	258, 381, 382, 382, 256, 256, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 108, 108, 23, 24,
	24, 24, 24, 414, 414, 183, 183, 181, 181, 182,
	182, 261, 261, 25, 265, 265, 267, 267, 267, 267,
	257, 257, 257, 26, 26, 266, 266, 268, 268, 268,
	271, 271, 271, 271, 310, 310, 310, 27, 27, 27,
	27, 27, 128, 128, 384, 384, 383, 377, 377, 376,
	376, 375, 380, 380, 379, 379, 378, 39, 40, 49,
	49, 49, 49, 50, 51, 385, 385, 350, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 352, 352, 338, 338, 351, 351,
	351, 351, 351, 351, 351, 337, 337, 139, 139, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 400, 400, 400, 399,
	399, 236, 236, 236, 236, 236, 236, 236, 236, 148,
	148, 159, 159, 159, 159, 159, 159, 146, 146, 147,
	145, 145, 145, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 158, 158, 154, 154, 154, 155, 155, 155,
	156, 156, 401, 401, 401, 401, 315, 315, 315, 315,
	318, 318, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 317, 317, 317, 317, 317, 317, 317, 319, 319,
	319, 319, 319, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 321,
	321, 321, 321, 321, 321, 321, 321, 336, 336, 322,
	322, 330, 330, 331, 331, 332, 332, 332, 333, 333,
	333, 334, 334, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 329, 329, 328, 328, 328, 339, 364, 364,
	363, 363, 361, 361, 361, 361, 361, 361, 361, 361,
	348, 348, 358, 358, 358, 358, 358, 347, 347, 343,
	343, 343, 344, 344, 345, 345, 342, 342, 346, 346,
	360, 360, 359, 359, 340, 340, 341, 341, 366, 402,
	402, 402, 402, 402, 403, 403, 367, 392, 394, 394,
	394, 393, 393, 390, 391, 389, 389, 389, 389, 389,
	83, 83, 83, 284, 284, 285, 285, 356, 356, 355,
	355, 355, 357, 357, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 279, 279, 279, 388, 388,
	388, 388, 388, 388, 387, 387, 387, 353, 353, 353,
	353, 386, 386, 58, 58, 216, 216, 405, 405, 406,
	406, 406, 46, 46, 46, 46, 46, 46, 45, 45,
	45, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 47, 47, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 110, 110, 111, 111, 111, 111, 113, 113,
	113, 369, 369, 59, 59, 3, 3, 171, 173, 174,
	174, 172, 172, 172, 172, 172, 172, 61, 61, 60,
	60, 176, 175, 177, 177, 177, 1, 1, 2, 2,
	4, 4, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 335, 335, 335, 368, 368, 370,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	116, 115, 115, 114, 117, 117, 117, 117, 117, 117,
	117, 117, 372, 372, 372, 62, 62, 373, 323, 324,
	325, 5, 6, 349, 371, 124, 124, 29, 38, 38,
	30, 30, 30, 30, 31, 31, 63, 66, 66, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 278, 278, 287, 287, 277, 277, 302, 302, 302,
	280, 280, 280, 281, 281, 398, 398, 398, 274, 274,
	65, 65, 65, 303, 303, 303, 303, 68, 68, 407,
	407, 408, 408, 409, 409, 409, 69, 70, 70, 305,
	305, 306, 306, 71, 72, 84, 84, 84, 84, 84,
	84, 84, 85, 85, 85, 85, 109, 109, 109, 15,
	15, 15, 15, 80, 80, 80, 14, 14, 17, 67,
	67, 74, 395, 395, 396, 397, 397, 397, 397, 75,
	77, 32, 32, 32, 32, 32, 32, 134, 134, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 129, 129, 129, 123, 123, 415, 78, 79, 79,
	127, 127, 127, 120, 120, 120, 126, 126, 126, 16,
	16, 18, 260, 260, 19, 19, 131, 131, 133, 133,
	133, 133, 133, 135, 135, 135, 135, 135, 135, 135,
	130, 130, 132, 132, 132, 132, 295, 295, 295, 294,
	294, 165, 165, 167, 166, 166, 168, 168, 169, 169,
	169, 169, 214, 214, 191, 191, 253, 253, 254, 254,
	252, 252, 259, 259, 255, 255, 255, 255, 262, 262,
	170, 170, 170, 170, 178, 178, 179, 179, 180, 180,
	304, 304, 300, 300, 300, 299, 299, 184, 184, 184,
	186, 185, 185, 185, 185, 187, 187, 189, 189, 188,
	188, 190, 195, 195, 194, 194, 192, 192, 192, 192,
	193, 193, 193, 193, 196, 196, 144, 144, 144, 144,
	144, 144, 144, 144, 157, 157, 157, 157, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 243,
	243, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 219, 219, 218, 218, 86, 86, 86, 87, 87,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 91, 91, 90, 90, 209, 209, 292, 292,
	92, 93, 93, 94, 94, 97, 97, 96, 95, 95,
	101, 101, 98, 98, 100, 100, 99, 102, 102, 103,
	104, 104, 275, 275, 197, 197, 205, 205, 205, 205,
	198, 198, 198, 198, 198, 198, 198, 206, 206, 206,
	213, 207, 207, 203, 203, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 162, 162, 162, 162,
	224, 224, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 163,
	163, 163, 163, 164, 164, 164, 164, 164, 164, 164,
	312, 312, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	416, 416, 326, 326, 326, 204, 204, 204, 204, 204,
	125, 125, 125, 125, 125, 309, 309, 309, 313, 313,
	313, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 314, 314, 222, 222,
	121, 121, 220, 220, 221, 223, 223, 215, 215, 215,
	215, 217, 217, 200, 200, 200, 225, 225, 226, 226,
	105, 106, 106, 107, 107, 227, 227, 229, 228, 228,
	230, 231, 231, 231, 232, 232, 233, 233, 233, 48,
	48, 48, 48, 48, 43, 43, 43, 43, 44, 44,
	44, 44, 136, 136, 136, 136, 138, 138, 137, 137,
	81, 81, 82, 82, 82, 142, 142, 143, 143, 143,
	140, 140, 141, 141, 250, 250, 234, 234, 234, 241,
	241, 241, 237, 237, 239, 239, 239, 240, 240, 240,
	238, 247, 247, 249, 249, 248, 248, 244, 244, 245,
	245, 246, 246, 246, 242, 242, 199, 199, 199, 199,
	199, 251, 251, 251, 251, 263, 263, 210, 210, 212,
	212, 211, 211, 161, 264, 264, 272, 269, 269, 270,
	270, 296, 296, 296, 273, 273, 286, 286, 282, 282,
	283, 283, 276, 276, 288, 288, 288, 76, 208, 208,
	365, 365, 362, 291, 291, 293, 293, 297, 297, 301,
	301, 298, 298, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 412, 413, 307, 308,
	308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 7, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 1, 2, 3, 7, 0, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 1, 0, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 6, 4, 4, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 5, 6, 6, 6, 6, 6, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -410, -78, -415, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -108, -34, 33, -39, -49,
	226, -50, -40, 227, -51, 229, 228, 266, 230, 378,
	259, 75, 314, 315, 317, 318, 319, 320, -109, 683,
	264, 265, 232, 37, 46, 34, 35, 38, 236, 272,
	273, 235, -10, -35, 9, -412, 12, 468, 261, 260,
	29, -12, 577, 87, -79, -411, 731, -250, -234, 23,
	34, 30, -233, -229, -127, -234, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -350, -352, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-374, -45, -42, 231, 228, 276, 123, 124, 266, 267,
	268, 230, 250, 265, 269, 264, 285, -41, 82, 34,
	577, 580, -357, 227, 233, 234, 229, 469, 126, 125,
	76, -354, 373, 610, 701, -57, 703, 101, 104, 702,
	45, 240, 704, 705, 706, 617, 707, 249, 708, 709,
	710, 711, 717, 658, 718, 719, 720, 127, 8, -78,
	-301, -297, 91, -290, 574, 252, 608, 422, 609, 301,
	82, 42, 513, 583, 370, 373, 610, 498, 701, 379,
	314, 330, 324, 503, 504, 505, 353, 345, 575, 611,
	584, 304, 253, 289, 695, 343, 135, 703, 308, 612,
	267, 380, 381, 613, 382, 101, 317, 419, 716, 307,
	614, 714, 104, 702, 322, 80, 497, 52, 698, 45,
	262, 427, 428, 341, 235, 337, 704, 290, 615, 586,
	283, 126, 123, 723, 37, 333, 51, 31, 713, 125,
	50, 705, 150, 616, 706, 617, 384, 360, 689, 49,
	385, 268, 618, 85, 273, 579, 311, 697, 386, 518,
	334, 387, 300, 712, 232, 619, 678, 670, 671, 388,
	389, 690, 365, 361, 366, 520, 620, 411, 502, 390,
	674, 675, 730, 53, 621, 622, 691, 124, 623, 79,
	707, 81, 328, 329, 624, 298, 251, 523, 524, 413,
	357, 480, 487, 488, 111, 112, 483, 113, 489, 114,
	490, 491, 492, 481, 115, 108, 482, 493, 494, 358,
	359, 116, 495, 110, 109, 484, 486, 117, 496, 249,
	36, 391, 576, 302, 59, 306, 277, 414, 47, 363,
	727, 46, 685, 525, 625, 688, 356, 352, 477, 54,
	626, 627, 628, 629, 499, 708, 355, 327, 351, 722,
	4, 295, 500, 709, 63, 234, 368, 367, 369, 284,
	410, 348, 630, 631, 632, 256, 83, 633, 338, 22,
	634, 635, 392, 291, 636, 57, 637, 638, 417, 265,
	639, 55, 710, 40, 640, 270, 724, 711, 641, 642,
	643, 684, 644, 272, 645, 394, 646, 672, 673, 393,
	362, 364, 526, 279, 395, 378, 237, 578, 647, 312,
	332, 269, 715, 648, 257, 514, 515, 516, 517, 696,
	522, 521, 271, 276, 264, 418, 258, 649, 650, 651,
	652, 653, 305, 669, 654, 655, 318, 717, 478, 44,
	656, 657, 658, 659, 660, 299, 294, 412, 421, 62,
	84, 375, 661, 662, 694, 326, 323, 292, 459, 461,
	462, 463, 464, 465, 460, 467, 663, 315, 56, 718,
	719, 720, 286, 721, 506, 507, 508, 509, 10, 560,
	543, 571, 544, 561, 545, 554, 546, 562, 570, 572,
	527, 535, 528, 536, 566, 549, 563, 555, 548, 547,
	569, 552, 556, 529, 537, 567, 553, 530, 538, 531,
	539, 532, 540, 565, 564, 557, 568, 533, 541, 559,
	534, 542, 558, 550, 551, 430, 728, 729, 501, 397,
	127, 296, 297, 48, 349, 278, 664, 309, 665, 339,
	340, 474, 475, 354, 325, 350, 681, 316, 679, 280,
	398, 479, 266, 666, 420, 293, 371, 376, 310, 582,
	519, 285, 399, 693, 581, 510, 511, 347, 344, 287,
	512, 667, 683, 400, 241, 281, 282, 668, 680, 401,
	402, 303, 403, 404, 405, 406, 407, 409, 313, 408,
	682, 676, 677, 288, 458, 580, 321, 342, 377, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 476, 239, -78,
	239, -188, -297, 239, 178, -269, 381, -287, 383, 396,
	391, 401, 389, -278, 392, 394, 279, -398, 411, 239,
	398, 226, 384, 393, 402, 403, 303, 409, 404, 313,
	408, 288, 405, 406, 407, -381, 178, 706, 721, 135,
	346, 388, 386, 412, 685, 91, -303, 91, 92, 93,
	-290, 316, -305, 321, -291, -381, -290, 319, -78, -78,
	-307, -307, -129, 685, 687, -207, -144, 143, -157, -258,
	-160, 92, -149, -152, -201, -202, -203, -204, -158, -217,
	-256, 167, 168, 175, 144, -213, -161, 27, 573, 470,
	469, 178, 32, 221, 69, 70, 472, 146, 58, 12,
	435, 436, -159, 425, 426, 437, 431, 432, 497, 499,
	500, 501, 498, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 502, 513, 474, 475, 118, 476, 108,
	110, 109, 477, 478, 479, 343, 525, 526, 520, 523,
	524, 522, 521, 358, 359, 480, 543, 544, 548, 547,
	545, 546, 549, 552, 553, 554, 555, 556, 557, 559,
	558, 550, 551, 528, 527, 529, 530, 531, 532, 533,
	534, 536, 535, 537, 538, 539, 540, 541, 542, 560,
	561, 562, 563, 564, 566, 565, 570, 569, 567, 568,
	572, 571, 481, 482, 111, 112, 113, 114, 115, 116,
	117, 483, 486, 484, 485, 487, 488, 489, 494, 495,
	490, 491, 492, 493, 496, 369, 367, 368, 364, 363,
	362, -88, -101, 599, 598, -102, 422, 427, 428, 430,
	-150, -151, -163, -164, -291, -297, 244, 424, 238, 173,
	468, -153, -147, -215, 107, 93, -8, -211, 423, 433,
	434, 438, 429, 439, 585, 587, 602, 603, 605, 590,
	595, 594, 597, 514, 515, 516, 517, 518, 519, 670,
	671, 672, 673, 674, 675, 676, 677, -381, -290, 91,
	-155, -154, -197, 94, 99, 102, 103, 105, -404, 262,
	339, 340, 119, -412, 699, 90, 95, 96, 97, 98,
	120, 121, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 45, 397, 397, -188, -78, -78,
	-78, -78, -227, -127, -229, -10, -8, -412, 9, -78,
	-8, -9, -13, -35, -37, 604, -36, -297, 100, -234,
	-250, 13, 162, 43, 51, -232, -233, -12, -8, -144,
	20, 24, 25, -132, 169, -144, -297, -132, -276, 243,
	-78, -78, -265, -310, 316, -267, 412, 685, 411, -257,
	-270, 91, -256, -269, 410, 92, -351, 159, -337, -341,
	-291, 254, -367, 250, -188, -360, -359, -291, -412, -128,
	-286, 240, 248, 247, 136, -385, 139, 296, 424, 238,
	-52, -53, -54, -269, 177, 705, -110, 271, 275, 88,
	88, -341, -340, -339, -386, 275, 254, -366, -358, 246,
	255, -347, 247, 248, -342, 240, 137, -386, -342, 245,
	255, 250, 254, 275, 275, 127, 275, 127, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 270, -348, 151,
	-348, 581, 581, -354, -386, 250, 240, -386, -386, 246,
	-288, -342, 242, 26, 242, 36, 36, -348, -348, -348,
	-269, 177, -348, -348, -348, -348, 283, 283, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, 239, -385, -136, 408, 303,
	82, -55, 285, -38, -188, -286, 240, 241, -385, 272,
	-188, 222, -188, 688, -280, 159, 16, -280, -277, 397,
	395, 382, 387, -280, -280, -280, -280, 286, 380, -343,
	240, 36, 251, 397, 286, 380, 286, 287, 286, 287,
	390, 400, 286, -302, 15, 162, 424, 385, 389, 279,
	239, 280, 241, 399, 287, -302, 90, -281, 159, 286,
	397, 282, -280, -280, -308, -412, -293, -291, -289, 231,
	24, 142, 26, 28, 145, 178, 130, 20, 146, 38,
	233, 346, 250, 177, 246, 469, 226, 73, 585, 425,
	432, 423, 431, 435, 471, 472, 424, 383, 32, 14,
	587, 29, 260, 25, 39, 171, 228, 149, 588, 263,
	27, 261, 118, 121, 590, 23, 76, 255, 15, 248,
	41, 17, 591, 592, 18, 244, 243, 162, 240, 71,
	12, 221, 30, 158, 67, 593, 137, 594, 595, 596,
	597, 131, 69, 159, 21, 725, 433, 434, 34, 686,
	573, 274, 173, 74, 60, 687, 143, 429, 598, 599,
	119, 600, 122, 77, 692, 139, 19, 72, 43, 601,
	275, 602, 245, 726, 603, 415, 604, 160, 229, 468,
	70, 161, 699, 605, 700, 238, 396, 9, 473, 33,
	259, 247, 129, 68, 439, 606, 239, 148, 242, 132,
	120, 8, 136, 35, 13, 75, 78, 436, 437, 438,
	58, 128, 577, 147, 16, 607, 416, 141, -381, 688,
	-308, -308, 33, 92, -407, -408, -409, 577, 415, 242,
	-291, -188, -84, 678, 230, -85, 684, 24, 237, -134,
	397, -122, 178, 706, 689, 690, 691, 688, 394, 696,
	694, 692, 286, 693, 88, 139, 141, 142, 4, -144,
	158, -198, 151, 152, 153, 154, 155, 156, 157, 163,
	162, 143, 145, 159, -243, 140, 164, 165, 166, 167,
	168, 169, 170, 172, 171, 173, 174, 160, 161, 177,
	224, 225, -152, -152, -152, -152, -213, -219, -218, -412,
	-215, -381, -290, -297, -412, -412, -152, -275, -412, -149,
	-412, -412, -412, -412, -222, -144, -412, -412, -416, -412,
	-416, -416, -416, -326, -412, -326, -326, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -412, -412,
	222, -412, -412, -412, -412, -412, -326, -326, -326, -326,
	-326, -326, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -412, -412, -412, -412, 103, 99, 102, 94,
	-217, 105, 90, 90, 90, 90, -8, -9, -207, -412,
	-307, -395, -396, -191, -188, -412, 303, -291, -291, 272,
	-232, -12, -8, -227, -233, -229, -8, -78, -120, -133,
	64, 65, -135, 25, 39, 68, 66, 24, -413, 89,
	-413, -250, -413, 88, -37, -253, 87, 62, 44, 90,
	90, 88, 22, -228, -230, -144, 15, -295, 4, -294,
	26, -291, 90, 222, 15, -189, 30, -188, -276, -276,
	88, 91, 316, -266, -268, 413, 415, 151, -296, -291,
	90, 32, 89, 88, -188, -315, -318, -320, -319, -321,
	-316, -317, 343, 344, 178, 347, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 360, 33, 262, 339, 340,
	341, 342, 361, 362, 363, 364, 366, 367, 368, 369,
	324, 345, 575, 325, 326, 327, 328, 329, 330, 332,
	333, 336, 334, 335, 337, 338, -382, -381, 87, 89,
	88, -322, 87, -144, -136, 239, -381, 240, 240, 240,
	-78, 468, -348, -348, -348, 270, 20, -45, -42, -374,
	19, -41, -42, 231, 123, 124, 228, 87, -337, 87,
	-346, -382, -381, 87, 137, 245, 136, -345, -342, -345,
	-346, -381, -215, -381, 137, 137, -381, -381, -262, -291,
	-262, -262, 24, -262, 24, -262, 24, 96, -291, -262,
	24, -262, 24, -262, 24, -262, 24, -262, 24, 32,
	79, 80, 81, 32, 83, 84, 85, -215, -381, -381,
	-215, -337, -215, -188, -381, -269, 96, 96, 96, -348,
	-348, 96, 90, 90, 90, -348, -348, 96, 90, -299,
	-297, 90, 90, -387, 256, 300, 302, 96, 96, 96,
	96, 32, 90, -388, 32, 713, 712, 714, 715, 716,
	90, 96, 32, 96, 32, 96, -291, 87, -188, -142,
	290, 226, 228, 231, 77, 90, 306, 307, 304, 309,
	310, 151, 45, 88, 242, 239, -381, -282, 244, -282,
	-291, -298, -297, -289, 242, 379, 90, -144, -344, 15,
	162, -302, -302, -280, -188, -344, -302, -280, -188, -280,
	-280, -280, -280, -302, -302, -302, -280, -297, -297, -188,
	-188, -188, -188, -188, -188, -188, -308, -281, -280, 688,
	90, -274, 15, 77, -308, -308, 88, 322, 416, 417,
	-306, 319, -80, -291, 90, -15, -11, -23, -22, -24,
	151, -15, 88, 577, -181, -188, 688, 688, 688, 688,
	688, 688, -144, -144, -144, -144, 600, -205, 119, 143,
	120, 121, -160, -144, -206, -211, -213, 106, 162, 145,
	159, -243, -149, -152, -149, -149, -149, -149, -149, -149,
	221, -149, 221, -149, -149, -149, -149, -149, -149, -309,
	-291, 90, 178, -156, -155, 105, -404, -156, 574, 88,
	-218, 222, -144, -144, -381, -118, 441, 442, 443, 444,
	446, 447, 448, 451, 452, 456, 457, 440, 458, 445,
	450, 453, 454, 455, 449, 342, -144, -130, -132, -130,
	-144, -220, -221, 147, -215, -144, -413, -413, 96, 169,
	-126, 25, 39, -126, -126, -126, -126, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -126, -144, -119,
	440, 458, 445, 450, 453, 454, 455, 449, 342, 459,
	460, 461, 462, 463, 464, 465, 466, 467, -119, -118,
	-144, -144, -144, -144, -144, -144, -86, -144, 130, 131,
	132, -207, -144, -149, -144, -144, -144, -413, -144, -144,
	-144, -208, -207, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -380,
	-379, -378, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -207, -207, -207, -207, -207,
	-144, -413, -144, -162, -147, 96, -258, 105, 92, -144,
	-144, -144, -144, -144, -144, -131, -130, -293, -298, -289,
	-290, -130, -131, -131, -130, -130, -144, -144, -144, -144,
	-144, -144, -144, -144, -413, -144, -144, -144, -144, -144,
	-250, -413, -207, 88, -397, 415, 416, 686, -300, 275,
	-299, 26, -208, 90, 15, -260, 78, -291, -232, -232,
	64, 65, 60, -130, -135, -413, -36, 26, -252, -291,
	63, 90, -327, -269, 370, 371, 178, -144, -144, 88,
	-231, 28, 29, -188, -294, 169, -298, -188, -261, 275,
	-188, -166, -168, -169, -170, -191, -214, -412, -171, -8,
	596, 593, 15, -181, -182, -190, -297, -267, -310, -266,
	88, 414, 416, 417, 77, 122, -144, -328, 177, -356,
	-355, -354, -337, -339, -340, -341, 89, -328, -333, 376,
	375, -322, -322, -322, -322, -322, -327, -327, -327, -327,
	87, 87, -322, -322, -322, -322, -330, 87, -330, -330,
	-331, -330, 87, -331, -332, 87, -332, -367, -144, -364,
	-363, -361, -362, 249, 101, 668, 624, 577, 617, 658,
	78, -359, -231, 96, -413, -142, -283, 244, -365, -362,
	-381, -381, -381, -283, 91, 90, 91, 90, 91, 90,
	-111, -59, -1, 725, 726, 727, 88, 20, -338, -337,
	-58, 300, -370, -371, 275, -366, -360, -346, 137, -345,
	-346, -346, -381, 88, 30, 127, 127, 127, 127, 577,
	228, 33, -284, 616, 143, 668, 624, -337, -58, 242,
	242, -309, -309, -309, 90, 90, -279, 721, -181, -138,
	292, 151, 281, 281, 239, 239, 294, -188, 305, 308,
	306, 307, 304, 309, 310, 24, 24, 24, 24, 24,
	293, 295, 297, 283, -188, -188, -282, 77, -183, -188,
	27, -297, 90, 90, -188, -280, -280, -188, -280, -280,
	-188, -409, 323, -291, 357, 679, 680, 682, 681, -122,
	415, 88, 577, 23, -123, 23, -412, 119, 120, 121,
	-206, -149, -152, -149, 142, 263, -149, -149, -412, -215,
	-413, -293, 26, 88, 78, -413, 167, 88, 88, -413,
	-413, 88, 15, -223, -221, 149, -144, -413, 88, -413,
	-413, -207, -144, -144, -144, -144, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -207, -413, 88, 88,
	15, -313, 26, -413, -413, -413, -413, -413, -222, -413,
	15, -413, 78, 88, 162, 88, -413, -413, -413, 88,
	88, -413, -413, 88, -413, 88, -413, -413, -413, -413,
	-413, -413, 88, -413, 88, -413, -413, -413, 88, -413,
	88, -413, -413, 88, -413, 88, -413, 88, -413, 88,
	-413, 88, -413, 88, -413, 88, -413, 88, -413, 88,
	-413, 88, -413, 88, -413, 88, -413, 88, -413, 88,
	-413, 88, -413, 88, -413, 88, -413, 88, -413, -413,
	-413, 88, -413, 88, -413, 88, -413, -413, 88, -413,
	88, -413, 88, -413, 88, 88, -413, 88, 88, 88,
	-413, 88, 88, 88, 88, -413, -413, -413, -413, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -413,
	-413, -413, -413, -413, -413, 88, -93, 601, -413, -413,
	88, -413, 88, 88, 88, 88, 88, -413, -412, 222,
	-413, -413, -413, -413, -413, 88, 88, 88, 88, 88,
	88, -413, -413, -413, 88, 88, -413, 88, -413, 88,
	-413, -396, 685, 416, -195, -194, -192, 75, 243, 76,
	-412, -299, -413, -156, -258, -259, -258, -200, -291, 96,
	105, -234, -165, -167, 15, -135, -213, 89, 88, -327,
	-238, -244, -277, -291, 90, 178, -329, 178, -329, 370,
	371, -230, 222, -196, 16, -199, 33, 58, -11, -412,
	-412, 33, 88, -184, -186, -185, -187, 67, 71, 73,
	68, 69, 70, 74, -304, 26, -8, -166, -8, -412,
	-188, -181, -414, 15, 78, -414, 88, 222, -268, -271,
	418, 415, 421, -381, 90, -110, 88, -354, -341, -235,
	-139, 41, -334, 377, -327, 584, -327, -336, 90, -336,
	96, 96, 96, 89, -48, -43, -44, 34, 82, -361,
	-348, 90, 40, -348, -348, -291, 89, -231, -138, -188,
	143, 77, -365, -365, -365, -297, -2, 724, 730, 137,
	87, 382, 19, -252, 88, 89, -216, 301, 89, -112,
	-291, 89, 87, -346, -346, -291, -412, 239, 32, 32,
	668, 624, 616, -58, -216, -215, -381, -328, 723, 722,
	89, 241, 299, -143, 435, -140, 90, 91, -188, -188,
	-188, -188, -188, 231, 228, 405, -405, 311, -405, 284,
	242, -181, -188, 88, -83, 258, 253, -302, -302, 34,
	-188, 415, 697, 695, -144, 142, 263, -160, -152, -118,
	-118, -149, -311, 178, 343, 262, 341, 337, 357, 348,
	375, 339, 376, 334, 333, 332, -311, -309, -149, -207,
	-132, -144, -144, 150, -144, 148, -144, -94, -93, -413,
	-413, -413, -413, -413, -94, -94, -94, -94, -94, -94,
	-94, -94, -94, -94, -227, -144, -144, -144, -413, 178,
	343, 15, -144, -309, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -378,
	-144, -207, -144, -207, -144, -144, -144, -144, -144, -379,
	-379, -379, -379, -379, -207, -207, -207, -207, -144, -412,
	-291, -97, -96, -95, 651, 243, -93, -162, -97, -162,
	221, -144, 221, 221, 221, -144, -131, -293, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -192, -342,
	-342, -342, -262, 88, -273, 23, 15, 58, 58, -165,
	-196, -166, -135, -291, -241, 678, -247, 47, -245, -246,
	48, -242, 49, 57, -329, -329, 169, -232, -144, -263,
	77, -264, -272, -215, -210, -212, -211, -412, -251, -413,
	-291, -262, -264, -168, -169, -169, -168, -169, 67, 67,
	67, 72, 67, 72, 67, -185, -297, -413, -144, -300,
	78, -166, -166, -190, -297, 169, 415, 419, 420, -354,
	-403, 119, 143, 32, 77, 373, 101, -401, 177, 613,
	663, 668, 624, 617, 658, -402, 245, 136, 137, 257,
	26, 42, 89, 88, 89, 88, 89, 89, 88, -285,
	-284, -44, -43, -348, -348, 96, -381, 90, 90, 241,
	27, -188, 77, 77, 77, -113, 728, 96, 87, -3,
	82, -144, 87, 20, -337, -215, -372, -323, -373, -324,
	-325, -5, -6, -349, -116, 58, 101, -62, 45, 240,
	708, 709, 127, -412, 721, -364, -252, -368, -370, -188,
	-146, -412, -145, -147, -153, 167, 168, 262, 339, 340,
	-216, -188, -137, 290, 298, 87, -141, 92, -384, 78,
	281, 373, 281, 90, -406, 312, 90, -406, -188, -83,
	-48, -188, -280, -280, 34, -381, -413, -160, -152, -125,
	162, 577, -314, 583, -322, -322, -322, -332, -322, 329,
	-322, 329, -322, -413, -413, -413, 88, -413, 23, -413,
	-144, 88, -94, -94, -94, -94, -94, -121, 473, 88,
	88, -413, 87, 87, -144, -413, -413, -413, 88, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, 88, -413, 88, -413, 88, -413, 88, -413,
	88, -413, 88, -413, 88, -413, 88, -413, 88, -413,
	88, -413, 88, -413, 88, -413, 88, -413, 88, -413,
	88, -413, 88, -413, -413, 88, -413, -413, -413, 88,
	-413, 88, -413, 88, -413, -413, -413, 88, -312, 669,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -92, -292, -291, -93, 633, 633, -413, -93, -224,
	88, -149, -413, -149, -149, -149, -413, -413, -413, 88,
	-413, 88, 88, -413, 88, -413, 88, -413, -413, -413,
	-413, 88, -193, 23, -193, -193, -413, -258, -188, -196,
	-225, 17, -238, 52, 349, -249, -248, 56, 48, -246,
	20, 50, 20, 31, -263, 88, 151, 88, -413, -413,
	88, 58, 222, -413, -196, -179, -178, 77, 78, -180,
	77, -178, 67, 67, -253, 88, -261, -166, -196, -196,
	222, 119, -412, -148, -159, -146, 13, 90, 90, -381,
	-400, 712, 713, 32, 96, -348, -348, 137, 137, -188,
	87, -327, 90, -327, 96, 96, 32, 83, 84, 85,
	32, 79, 80, 81, -188, -188, -188, -188, -369, 87,
	20, -144, 87, 151, 89, -252, -252, 277, 162, -348,
	706, 283, 283, -348, -348, -348, -115, -114, 728, 89,
	-413, 88, -335, 577, 580, -144, -154, -154, -253, 89,
	-377, 577, -383, -291, -291, -291, -291, 96, 98, -413,
	575, 74, 578, -413, -327, -144, -144, -144, -232, 90,
	-144, -144, 96, 96, -413, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -207, -144, -413, -176, -175,
	-177, 689, 119, 32, -311, -413, -209, 275, -100, -99,
	-98, 15, -413, -144, -118, -118, -118, -118, -144, -144,
	-144, -144, -144, -144, -412, 67, 19, 17, -412, -412,
	-300, -225, -226, 18, 20, -239, 54, -237, 53, -237,
	-248, 20, 20, 90, 20, 90, 137, -272, -144, -212,
	58, -11, -291, -210, -291, -227, -144, 87, -144, -156,
	-196, -196, -144, -202, 497, 499, 500, 501, 498, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 502,
	513, 474, 475, 476, 108, 110, 109, 477, 478, 479,
	343, 525, 526, 520, 523, 524, 522, 521, 358, 359,
	480, 543, 544, 548, 547, 545, 546, 549, 552, 553,
	554, 555, 556, 557, 559, 558, 550, 551, 528, 527,
	529, 530, 531, 532, 533, 534, 536, 535, 537, 538,
	539, 540, 541, 542, 560, 561, 562, 563, 564, 566,
	565, 570, 569, 567, 568, 572, 571, 481, 482, 111,
	112, 113, 114, 115, 116, 117, 483, 486, 484, 487,
	488, 489, 494, 495, 490, 491, 492, 493, 496, 369,
	367, 368, 364, 363, 362, 422, 427, 428, 430, 514,
	515, 516, 517, 518, 519, 670, 671, 672, 673, 674,
	675, 676, 677, 90, 90, 87, -144, 89, 89, -253,
	-368, -59, 89, -254, -252, 96, 89, 278, -211, -412,
	90, -348, -348, -348, 96, 96, -299, -413, 88, -291,
	-402, -370, 581, 581, -413, 26, -376, -375, -293, 87,
	78, 63, 576, 579, -413, -413, 88, -413, -413, -413,
	89, 89, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, -413, -413, -413, -413, -413, -413,
	-413, -413, -413, -413, 88, -413, -175, -177, -413, 77,
	-156, -227, 20, -97, 300, 302, -97, -413, -413, -413,
	-413, -413, 88, -413, -413, 88, -413, 88, -413, -413,
	-255, -413, -291, 245, 20, 20, -255, -255, -195, -226,
	-107, -106, -105, 607, -144, -207, -240, 55, 77, 122,
	90, 90, 90, 13, -210, 222, -232, -252, -173, 382,
	-227, -413, -252, 89, 26, 89, 730, 137, 89, -211,
	-124, -412, 274, -299, 90, 90, -114, -117, -11, 88,
	151, -252, -188, 63, -144, -207, -413, 77, 588, 689,
	-91, -90, -87, 700, 726, -207, -93, -93, -144, -144,
	-144, 88, -413, -413, -413, -107, 88, -104, -103, -291,
	77, 122, -264, -291, 89, -413, -412, -232, 89, -236,
	-11, 87, -3, 274, -323, -373, -324, -325, -5, -6,
	-349, -81, 577, -375, -353, -297, -293, 90, 96, 89,
	577, -413, -413, -89, 145, 698, 666, -154, 221, -413,
	88, -413, 88, -413, 88, -291, 245, -105, 88, 26,
	-300, -174, -172, -291, 630, -393, -392, 573, -403, -399,
	119, 143, 101, -401, 668, 624, 128, 129, -81, -144,
	87, -413, -82, 289, 685, 222, -384, 578, -89, 699,
	644, 619, 644, 619, -149, -144, -144, -144, -103, -412,
	-413, 88, 23, -315, -61, 641, -390, -391, 77, -394,
	388, 640, 661, 119, 90, 89, -252, 250, -298, -377,
	579, 142, -118, -413, 88, -413, 88, -413, -92, -172,
	637, -328, -156, -391, 77, -390, 77, 14, 13, -4,
	729, 89, 291, -89, 644, 619, -144, -144, -413, -60,
	27, -173, -389, 258, 253, 256, 33, -389, 96, -4,
	-413, -413, 641, 252, 32, 119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	876, -2, -2, 878, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 876, 876, 876, 0, 876, 0, 0,
	876, -2, -2, 876, 1609, 0, 876, 0, 0, 0,
	-2, 791, 797, 0, 806, -2, 0, 0, 876, 876,
	2228, 2228, 871, 0, 0, 0, 0, 0, 876, 876,
	876, 876, 1475, 51, 876, 0, 86, 87, 826, 827,
	828, 66, 0, 2226, 877, 1, 3, 72, 76, 0,
	0, 0, 59, 1484, 0, 79, 0, 0, 880, 0,
	0, 1592, 876, 876, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 602, 525,
	577, 523, 562, -2, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 400, 400,
	0, 0, -2, 511, 511, 511, 1594, 0, 0, 0,
	559, 462, 400, 400, 400, 0, 400, 400, 400, 400,
	0, 0, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 1502,
	166, 1610, 1607, 1608, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 0, 1586,
	0, 715, 979, 0, 0, 780, 780, 0, 780, 780,
	780, 780, 0, 0, 0, 729, 0, 0, 0, 0,
	777, 0, 745, 746, 0, 777, 0, 752, 783, 0,
	0, 758, 780, 780, 761, 2229, 0, 2229, 2229, 1577,
	0, 774, 772, 786, 787, 41, 790, 793, 794, 795,
	796, 799, 0, 810, 813, 1603, 1604, 0, 815, 822,
	839, 840, 0, 872, 873, 46, 1131, 0, 1001, 0,
	1007, -2, 1018, 1035, 1036, 1037, 1038, 1039, 1041, 1042,
	1043, 0, 0, 0, 0, 1048, 1049, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 0, 1448, 0, 0,
	1410, 1410, 1146, 1410, 1410, 1412, 1412, 1412, 1814, 1952,
	1960, 2136, 1775, 1781, 1782, 1783, 2082, 2083, 2084, 2085,
	2173, 2174, 2178, 1876, 1770, 2149, 2150, 0, 2225, 1913,
	1921, 1922, 1946, 2046, 2159, 1793, 1941, 2010, 1873, 1895,
	1896, 2028, 2029, 1917, 1918, 1899, 2088, 2090, 2106, 2107,
	2092, 2094, 2103, 2109, 2114, 2093, 2105, 2110, 2123, 2127,
	2130, 2131, 2132, 2100, 2098, 2111, 2115, 2117, 2119, 2125,
	2128, 2101, 2099, 2112, 2116, 2118, 2120, 2126, 2129, 2087,
	2091, 2095, 2104, 2122, 2102, 2121, 2096, 2108, 2113, 2124,
	2097, 2089, 1911, 1914, 1902, 1903, 1905, 1907, 1912, 1919,
	1925, 1904, 1924, 1923, 0, 1900, 1901, 1906, 1916, 1920,
	1908, 1909, 1910, 1915, 1926, 1966, 1965, 1964, 2009, 1937,
	2008, 0, 0, 0, 0, 0, 1765, 1819, 1820, 2133,
	1332, 1333, 1334, 1335, 0, 0, 0, 0, 0, 0,
	0, 292, 293, 1461, 1462, 45, 1130, 1573, 1412, 1412,
	1412, 1412, 1412, 1412, 1070, 1071, 1072, 1073, 1074, 1100,
	1101, 1107, 1108, 2023, 2024, 2025, 2026, 1857, 2168, 1865,
	1866, 2005, 2006, 1878, 1879, 2199, 2200, -2, -2, -2,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 1818,
	2147, 2148, 229, 0, 0, 297, 298, 294, 295, 296,
	1114, 1115, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 2228, 0, 849, 0, 0, 0,
	0, 0, 1484, 0, 1476, 1475, 64, 0, 876, -2,
	0, 0, 0, 0, 48, 0, 53, 936, 879, 78,
	77, 1524, 0, 0, 0, 60, 1485, 68, 70, 1486,
	0, 881, 882, 0, 912, 916, 0, 0, 0, 1593,
	1592, 1592, 103, 0, 0, 104, 124, 125, 126, 0,
	0, 110, 111, 1579, 1580, 44, 0, 0, 178, 179,
	0, 42, 427, 0, 174, 0, 420, 359, 0, 1502,
	0, 0, 0, 0, 0, 876, 0, 1587, 155, 156,
	163, 164, 165, 400, 400, 400, 574, 0, 0, 166,
	166, 532, 533, 534, 0, 0, -2, 425, 0, 512,
	0, 0, 414, 414, 418, 416, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 401,
	0, 572, 573, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 1596, 0, 549, 550, 0, 0, 0,
	400, 400, 0, 0, 0, 0, 400, 400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 1515, 0, 0,
	0, -2, 0, 707, 0, 0, 0, 1588, 1588, 0,
	714, 0, 716, 0, 719, 0, 0, 720, 0, 777,
	777, 775, 776, 722, 723, 724, 725, 780, 0, 0,
	409, 410, 411, 777, 780, 0, 780, 780, 780, 780,
	777, 777, 777, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2229, 783, 780, 0, 753, 0, 754,
	755, 756, 759, 760, 762, 2230, 2231, 1605, 1606, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 2229, 2229,
	766, 770, 1578, 792, 798, 800, 801, 0, 0, 811,
	814, 833, 50, 1864, 821, 50, 823, 824, 825, 851,
	852, 857, 0, 0, 0, 0, 863, 864, 865, 0,
	0, 868, 869, 870, 0, 0, 0, 0, 0, 999,
	0, 0, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1019, 1020, 0,
	0, 0, 1044, 1045, 1046, 1047, 1050, 0, 1061, 0,
	1063, 1457, -2, 0, 0, 0, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 1449, 0, 0, 1144, 0,
	1145, 1147, 1148, 1149, 0, 1150, 1151, 886, 886, 886,
	886, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 896,
	0, 0, 896, 896, 0, 0, 221, 222, 223, 224,
	225, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 242, 243, 244,
	245, 246, 299, 247, 248, 249, 1130, 0, 0, 0,
	47, 841, 842, 0, 962, 1598, 0, 0, 892, 0,
	58, 67, 69, 1484, 62, 1484, 0, 898, 0, 0,
	-2, -2, 899, 905, 906, 907, 908, 909, 55, 2227,
	56, 0, 75, 0, 49, 0, 0, 0, 0, 373,
	1527, 0, 0, 1477, 1478, 1481, 0, 913, 1958, 917,
	0, 919, 920, 0, 0, 101, 0, 978, 0, 0,
	0, 112, 0, 114, 115, 0, 0, 0, 384, 1581,
	1582, 1583, -2, 407, 0, 384, 368, 307, 308, 309,
	359, 311, 359, 359, 359, 359, 373, 373, 373, 373,
	342, 343, 344, 345, 346, 0, 0, 328, 359, 359,
	359, 359, 349, 350, 351, 352, 353, 354, 355, 356,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 361,
	361, 361, 361, 361, 365, 365, 0, 43, 0, 388,
	0, 1481, 0, 0, 1515, 1590, 1600, 0, 0, 0,
	1590, 133, 0, 0, 0, 575, 613, 526, 563, 576,
	0, 529, 530, -2, 0, 0, 511, 0, 513, 0,
	408, 0, -2, 0, 418, 0, 414, 418, 415, 418,
	406, 419, 553, 554, 555, 0, 557, 558, 643, 948,
	0, 0, 0, 0, 0, 649, 650, 651, 0, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 564,
	565, 566, 567, 568, 569, 570, 571, 0, 0, 0,
	0, 513, 0, 560, 0, 0, 464, 465, 466, 0,
	0, 469, 470, 471, 472, 0, 0, 475, 476, 477,
	965, 966, 478, 479, 504, 505, 506, 480, 481, 482,
	483, 484, 485, 486, 498, 499, 500, 501, 502, 503,
	487, 488, 489, 490, 491, 492, 495, 0, 148, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1588, 0, 0, 0, 0,
	895, 980, 1611, 1612, 0, 0, 781, 782, 0, 412,
	413, 780, 780, 726, 767, 0, 780, 730, 768, 731,
	733, 732, 734, 747, 748, 780, 737, 778, 779, 738,
	739, 740, 741, 742, 743, 744, 763, 749, 750, 751,
	784, 0, 788, 789, 764, 765, 0, 0, 804, 805,
	0, 812, 836, 834, 835, 837, 829, 830, 831, 832,
	0, 838, 0, 0, 854, 97, 859, 860, 861, 862,
	874, 867, 1132, 996, 997, 998, 0, 1000, 1004, 0,
	1116, 1118, 1006, 1002, 1008, 1127, 1128, 1129, 0, 0,
	0, 0, 0, 1012, 1016, 1021, 1022, 1023, 1024, 1025,
	0, 1026, 0, 1029, 1030, 1031, 1032, 1033, 1034, 1040,
	1425, 1426, 1427, 1059, 300, 301, 0, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1131, 0, 910, 0,
	0, 1455, 1452, 0, 0, 0, 1411, 1413, 0, 0,
	0, 887, 888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 0, 0,
	1428, 0, 0, 0, 0, 0, 1448, 0, 1065, 1066,
	1067, 0, 0, 0, 0, 0, 0, 1190, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 1337, 1338, 1339, 40, 0,
	0, 0, 0, 0, 0, 0, 897, 1459, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 0, 0, 0,
	0, 1571, 0, 0, 844, 845, 847, 0, 982, 0,
	963, 0, 0, 850, 0, 891, 0, 894, 61, 63,
	903, 904, 0, 921, 900, 57, 52, 0, 0, 940,
	1525, 373, 1547, 0, 382, 382, 379, 1487, 1488, 0,
	1480, 1482, 1483, 80, 918, 914, 0, 994, 0, 0,
	977, 0, 924, 926, 927, 928, 960, 0, 931, 932,
	0, 0, 0, 0, 0, 99, 979, 105, 0, 113,
	0, 0, 118, 119, 106, 107, 108, 109, 0, 602,
	-2, 459, 180, 182, 183, 184, 175, -2, 371, 369,
	370, 310, 373, 373, 336, 337, 338, 339, 340, 341,
	0, 0, 329, 330, 331, 332, 321, 0, 322, 323,
	324, 363, 0, 325, 326, 0, 327, 426, 0, 1489,
	389, 390, 392, 400, 0, 395, 396, 0, 400, 400,
	0, 421, 422, 0, 1481, 1506, 0, 0, 0, 1601,
	1600, 1600, 1600, 0, 168, 169, 170, 171, 172, 173,
	638, 0, 0, 614, 636, 637, 166, 0, 0, 176,
	515, 514, 0, 670, 0, 424, 0, 0, 418, 418,
	403, 404, 556, 0, 0, 645, 646, 647, 648, 0,
	0, 0, 542, 453, 0, 543, 544, 513, 515, 0,
	0, 384, 467, 468, 473, 474, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 590,
	591, 594, 596, 517, 600, 593, 595, 597, 517, 601,
	1503, 1504, 1505, 0, 0, 708, 0, 0, 450, 95,
	1589, 713, 717, 718, 777, 736, 769, 777, 728, 735,
	757, 802, 803, 808, 816, 817, 818, 819, 820, 858,
	0, 0, 0, 0, 866, 0, 0, 1005, 1117, 1119,
	1009, 0, 1013, 1017, 0, 0, 0, 0, 0, 1064,
	1062, 1459, 0, 0, 0, 1113, 0, 0, 0, 1135,
	1136, 0, 0, 0, 1453, 0, 0, 1142, 0, 1414,
	1094, 0, 0, 0, 0, 0, 1094, 1094, 1094, 1094,
	1094, 1094, 1094, 1094, 1094, 1094, 1475, 1169, 0, 0,
	0, 0, 0, 1174, 1175, 1176, 1177, 1178, 0, 1180,
	0, 1181, 0, 0, 0, 0, 1188, 1189, 1191, 0,
	0, 1194, 1195, 0, 1197, 0, 1199, 1200, 1201, 1202,
	1203, 1204, 0, 1206, 0, 1208, 1209, 1210, 0, 1212,
	0, 1214, 1215, 0, 1217, 0, 1219, 0, 1222, 0,
	1225, 0, 1228, 0, 1231, 0, 1234, 0, 1237, 0,
	1240, 0, 1243, 0, 1246, 0, 1249, 0, 1252, 0,
	1255, 0, 1258, 0, 1261, 0, 1264, 0, 1267, 1268,
	1269, 0, 1271, 0, 1273, 0, 1276, 1277, 0, 1279,
	0, 1282, 0, 1285, 0, 0, 1286, 0, 0, 0,
	1290, 0, 0, 0, 0, 1299, 1300, 1301, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1313,
	1314, 1315, 1316, 1317, 1318, 0, 1320, 0, 1095, 0,
	0, 1095, 0, 0, 0, 0, 0, 1133, 896, 0,
	1415, 1416, 1417, 1418, 1419, 0, 0, 0, 0, 0,
	0, 1359, 1360, 1362, 0, 0, 1365, 0, 1367, 0,
	1572, 843, 846, 848, 934, 983, 984, 0, 0, 0,
	0, 964, 1597, 889, 890, 893, 942, 0, 1463, 0,
	0, 921, 994, 922, 0, 901, 54, 937, 0, 1529,
	1528, 1541, 1554, 382, 382, 376, 377, 383, 378, 380,
	381, 1479, 0, 1484, 0, 1565, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	970, 0, 0, 0, 0, 961, 932, 0, 933, 0,
	-2, 0, 0, 93, 94, 0, 0, 0, 116, 117,
	0, 0, 123, 385, 386, 157, 166, 461, 181, 434,
	0, 0, 306, 372, 333, 334, 335, 0, 357, 0,
	0, 0, 0, 455, 129, 1493, 1492, 400, 400, 391,
	0, 394, 0, 0, 0, 1602, 360, 423, 0, 147,
	0, 0, 0, 0, 0, 153, 608, 0, 0, 615,
	0, 0, 0, 524, 0, 535, 536, 0, 642, -2,
	704, 388, 0, 402, 405, 949, 0, 0, 537, 0,
	540, 541, 454, 515, 546, 547, 561, 548, 496, 497,
	494, 0, 0, 1516, 1517, 1522, 1520, 1521, 134, 582,
	584, 583, 587, 0, 0, 0, 519, 0, 519, 580,
	0, 450, 1489, 0, 712, 451, 452, 780, 780, 853,
	98, 0, 856, 0, 0, 0, 0, 1010, 1014, 1027,
	1028, 1420, 1446, 359, 359, 1433, 359, 365, 1436, 359,
	1438, 359, 1441, 359, 1444, 1445, 0, 0, 1057, 0,
	911, 0, 0, 1141, 1456, 0, 0, 1152, 1093, 1094,
	1094, 1094, 1094, 1094, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1450, 0, 0, 0, 1173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	146, 0, 0, 0, 0, 0, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	1092, 0, 1096, 1097, 0, 0, 1322, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 1460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 990,
	990, 990, 0, 0, 0, 1584, 1585, 1464, 1465, 994,
	1466, 923, 902, 941, 1547, 0, 1540, 0, -2, 1549,
	0, 0, 0, 1555, 374, 375, 915, 81, 995, 84,
	0, 1565, 1574, 0, 1556, 1567, 1569, 0, 0, 0,
	1561, 0, 994, 925, 956, 958, 0, 953, 968, 969,
	971, 0, 973, 0, 975, 976, 936, 930, 0, 101,
	0, 994, 994, 100, 0, 981, 120, 121, 122, 460,
	185, 190, 0, 0, 0, 195, 0, 197, 0, 0,
	0, 202, 203, 400, 400, 435, 0, 303, 305, 0,
	0, 188, 373, 0, 373, 0, 364, 366, 0, 436,
	456, 1490, 1491, 0, 0, 393, 397, 398, 399, 0,
	1591, 149, 0, 0, 0, 611, 0, 639, 0, 0,
	0, 0, 0, 0, 177, 516, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 0, 400, 0, 0, 0,
	400, 400, 400, 0, 696, 387, 0, 0, 667, 664,
	538, 0, 227, 228, 230, 0, 0, 0, 0, 0,
	545, 936, 1507, 1508, 1509, 0, 1519, 1523, 137, 0,
	0, 0, 0, 592, 598, 0, 518, 599, 709, 710,
	711, 96, 721, 727, 855, 875, 1003, 1011, 1015, 0,
	0, 0, 0, 1447, 1431, 373, 1434, 1435, 1437, 1439,
	1440, 1442, 1443, 1053, 1054, 1058, 0, 1138, 0, 1140,
	1454, 0, 1153, 1154, 1155, 1156, 1157, 1484, 0, 0,
	0, 1172, 0, 0, 0, 1183, 1182, 1184, 0, 1186,
	1187, 1192, 1193, 1196, 1198, 1205, 1207, 1211, 1213, 1216,
	1218, 1220, 0, 1223, 0, 1226, 0, 1229, 0, 1232,
	0, 1235, 0, 1238, 0, 1241, 0, 1244, 0, 1247,
	0, 1250, 0, 1253, 0, 1256, 0, 1259, 0, 1262,
	0, 1265, 0, 1270, 1272, 0, 1275, 1278, 1280, 0,
	1283, 0, 1287, 0, 1289, 1291, 1292, 0, 0, 0,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1319, 0, 1086, 1089, 1321, 1098, 1099, 1104, 1324, 0,
	0, 0, 1327, 0, 0, 0, 1331, 1134, 1342, 0,
	1347, 0, 0, 1353, 0, 1357, 0, 1363, 1364, 1366,
	1368, 0, 0, 0, 0, 0, 962, 943, 65, 1466,
	1468, 0, 1534, 1532, 1532, 1542, 1543, 0, 0, 1550,
	0, 0, 0, 0, 85, 0, 0, 0, 1570, 0,
	0, 0, 0, 102, 1475, 950, 957, 0, 0, 951,
	0, 952, 972, 974, 929, 0, 994, 994, 91, 92,
	0, 191, 0, 193, 219, 220, 0, 196, 198, 199,
	200, 206, 207, 208, 201, 0, 0, 302, 304, 0,
	0, 347, 358, 348, 0, 0, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 936, 150, 151, 152, 603, 0,
	613, 0, 938, 0, 606, 0, 527, 0, 0, 0,
	400, 400, 400, 0, 0, 0, 0, 681, 0, 0,
	644, 0, 652, 0, 0, 0, 231, 232, 0, 1518,
	581, 0, 135, 136, 0, 0, 586, 520, 521, 1051,
	0, 0, 0, 1052, 1432, 0, 0, 0, 0, 1451,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 0, 0,
	0, 633, 634, 0, 1371, 1091, 1475, 0, 1095, 1105,
	1106, 0, 1095, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 991, 0, 0, 0, 0,
	982, 1468, 1473, 0, 0, 1537, 0, 1530, 1533, 1531,
	1544, 0, 0, 1551, 0, 1553, 0, 1575, 1576, 1568,
	0, 1560, 1563, 1559, 1562, 1484, 954, 0, 959, 0,
	1475, 90, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 205, 0, 0, 362, 367, 0,
	0, 0, 604, 0, 939, 616, 607, 0, 694, 0,
	698, 0, 0, 0, 701, 702, 703, 680, 0, 684,
	428, 668, 665, 666, 539, 0, 138, 139, 0, 0,
	0, 1421, 0, 1424, 1137, 1139, 0, 1168, 1170, 1171,
	1429, 1430, 1185, 1221, 1224, 1227, 1230, 1233, 1236, 1239,
	1242, 1245, 1248, 1251, 1254, 1257, 1260, 1263, 1266, 1274,
	1281, 1284, 1288, 1293, 0, 1296, 0, 0, 1297, 0,
	635, 1082, 0, 0, 1102, 1103, 0, 1326, 1328, 1329,
	1330, 1343, 0, 1348, 1349, 0, 1354, 0, 1358, 1369,
	0, 987, 944, 945, 992, 993, 0, 0, 935, 1473,
	83, 1474, 1471, 0, 1469, 1467, 1526, 0, 1535, 1536,
	1545, 1546, 1552, 0, 1558, 0, 88, 0, 0, 0,
	1484, 192, 0, 211, 0, 612, 0, 615, 605, 692,
	693, 0, 705, 697, 699, 700, 682, -2, 1510, 0,
	0, 0, 588, 1422, 0, 0, 1298, 0, 631, 632,
	1090, 1083, 0, 1068, 1069, 1087, 1323, 1325, 0, 0,
	0, 0, 986, 988, 989, 82, 0, 1470, 1110, 0,
	1538, 1539, 1566, 1564, 955, 962, 0, 89, 441, 434,
	1510, 0, 0, 0, 685, 686, 687, 688, 689, 690,
	691, 578, 1512, 140, 141, 0, 508, 509, 510, 134,
	0, 1143, 1294, 1084, 0, 0, 0, 0, 0, 1344,
	0, 1350, 0, 1355, 0, 946, 947, 1472, 0, 0,
	617, 0, 619, 0, -2, 429, 442, 0, 186, 212,
	213, 0, 0, 216, 217, 218, 209, 210, 130, 0,
	0, 706, 0, 1513, 1514, 0, 137, 0, 0, 1075,
	1076, 1077, 1078, 1080, 0, 0, 0, 0, 1111, 1088,
	618, 0, 0, 384, 0, 628, 430, 431, 0, 437,
	438, 439, 440, 214, 215, 640, 0, 0, 507, 585,
	1423, 0, 0, 1345, 0, 1351, 0, 1356, 0, 620,
	621, 629, 0, 432, 0, 433, 0, 0, 0, 609,
	0, 640, 1511, 1085, 1079, 1081, 0, 0, 1109, 0,
	630, 626, 443, 445, 446, 0, 0, 444, 641, 610,
	1346, 1352, 0, 447, 448, 449, 622, 623, 624, 625,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 731,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:661
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:682
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:686
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:692
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:698
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:704
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:708
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:727
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:733
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:839
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:900
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:904
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:934
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:938
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:967
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:972
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:982
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:992
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1005
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1017
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1027
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1031
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1035
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1039
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1045
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1049
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1053
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1069
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1079
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1083
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1087
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1111
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1115
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1119
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1125
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1131
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1138
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1147
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1151
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1167
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1182
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1187
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1193
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1213
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1219
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1235
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1242
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1249
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1254
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1259
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1271
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1278
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1289
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1300
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1306
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1310
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1314
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1342
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1346
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1352
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1356
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1372
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1376
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1382
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1386
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1392
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1397
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1430
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1439
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1471
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1477
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1537
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1547
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1551
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1555
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1561
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1565
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1570
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1574
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1579
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1596
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Armscii8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = ASCIIStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Big5Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = UBinaryStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Cp1250Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Cp1251Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1256Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1257Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp850Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp852Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp866Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp932Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Dec8Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = EucjpmsStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = EuckrStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Gb18030Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Gb2312Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = GbkStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Geostd8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = GreekStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = HebrewStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Hp8Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Keybcs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Koi8rStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Koi8uStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Latin1Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Latin2Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin7Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = MacceStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = MacromanStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = SjisStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Swe7Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Tis620Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Ucs2Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = UjisStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Utf16Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = Utf16leStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf32Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf8Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf8mb4Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1914
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1918
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1952
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2213
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2277
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2324
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2328
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2347
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2356
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2362
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2372
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2376
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2381
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2385
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2389
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2401
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2417
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2421
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2425
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2429
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2433
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = "key"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2500
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2510
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2514
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2520
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2524
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2530
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2534
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2540
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2546
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2550
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2554
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2558
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2562
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2577
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2583
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2589
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2593
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2597
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2602
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2606
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2612
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2628
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2632
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2640
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2681
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2687
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2701
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2811
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2815
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2819
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2823
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2827
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2831
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2899
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2917
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2930
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2934
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2946
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3094
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3098
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3361
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3370
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3387
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3394
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3406
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3415
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3430
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3444
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3448
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3454
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3460
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3466
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3476
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3480
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3492
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3528
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3540
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3544
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3548
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3554
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3558
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3563
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3567
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3572
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3576
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3700
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3704
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3714
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3719
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3724
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3729
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3746
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3752
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3758
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3768
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3773
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3777
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3782
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3787
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3792
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3797
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3816
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3823
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3830
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3838
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3842
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3848
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3854
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3860
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3866
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3872
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3878
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3890
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3912
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3916
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = "extended "
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4232
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4236
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4246
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4252
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4280
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4323
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4339
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4343
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4347
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4374
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4380
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4391
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4395
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4399
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4403
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4407
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4411
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4415
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4420
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4424
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4428
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4432
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4452
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4456
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4460
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4464
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4515
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4525
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4531
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4535
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4539
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4543
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4549
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4569
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4573
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4591
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4605
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4654
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			setAllowComments(yylex, true)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			yyVAL.strs = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = SQLCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4742
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4751
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4757
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4761
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4766
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4770
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.strs = nil
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4791
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = SQLCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			yyVAL.str = DistinctStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = StraightJoinHint
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4827
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4837
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4841
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4845
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4849
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4854
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4874
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4878
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4884
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4890
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4904
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4908
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4912
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4922
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4926
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4932
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4936
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4945
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4954
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4960
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4970
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4980
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4984
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4992
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4998
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5015
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5019
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5023
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5027
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5033
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5035
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5039
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5050
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5055
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5076
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5080
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5084
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5090
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5100
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5108
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5114
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5163
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5167
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5173
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5177
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5181
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5185
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5190
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5194
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5198
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5202
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5498
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5504
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5508
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5514
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5518
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5522
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5528
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5532
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5539
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5543
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5547
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5551
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5555
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5561
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5565
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5569
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5573
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5577
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5581
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5585
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5600
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5604
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5613
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5618
		{
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5627
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5633
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5637
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5643
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5660
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5666
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5670
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5676
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5680
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5686
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5690
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5702
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5708
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5712
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5718
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5724
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = ""
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5744
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5748
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5755
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5759
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5763
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5767
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5773
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5777
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5781
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5785
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5789
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5793
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5797
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5803
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5807
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5811
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5818
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5824
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5828
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6730
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6734
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6810
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6816
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6820
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6824
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6828
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6832
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6836
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6840
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6844
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6848
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6852
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6856
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6860
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6864
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6868
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6872
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6876
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6880
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6884
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6888
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6892
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6898
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6902
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6906
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6910
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6914
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6918
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6922
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6926
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6930
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6934
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6938
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6942
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6946
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6950
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6954
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6958
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6962
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6966
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6976
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6980
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6984
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6994
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6998
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7002
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7006
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7010
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7016
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7020
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7024
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7028
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7032
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7038
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7056
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7060
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7066
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7070
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7074
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7078
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7082
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7088
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7092
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7096
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7100
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7104
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7108
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7112
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7116
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7120
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7124
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7130
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7148
		{
			yyVAL.str = string("")
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7152
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7158
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7162
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7168
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7177
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7183
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7187
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7191
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7195
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7201
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7205
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7211
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7233
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7242
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7248
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7254
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7258
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7267
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7276
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7282
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7288
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7292
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7298
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7303
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7307
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7311
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7320
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7326
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7330
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7334
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7343
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7347
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7351
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7355
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7362
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7366
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7370
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7374
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7380
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7384
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7388
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7392
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7397
		{
			yyVAL.str = ""
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7401
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7405
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7409
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7414
		{
			yyVAL.str = ""
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7418
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7433
		{
			yyVAL.str = ""
		}
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7437
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7442
		{
			yyVAL.str = "cascaded"
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7450
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7459
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7465
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7471
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7477
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7486
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7495
		{
			yyVAL.str = ""
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7499
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7505
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7509
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7515
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7519
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7523
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			yyVAL.str = ""
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7536
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7541
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7545
		{
			yyVAL.str = " header"
		}
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7550
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = " manifest on"
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7558
		{
			yyVAL.str = " manifest off"
		}
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = ""
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = " overwrite on"
		}
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = " overwrite off"
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7602
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7606
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7611
		{
			yyVAL.str = ""
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7615
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7621
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7631
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7639
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7644
		{
			yyVAL.str = ""
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7648
		{
			yyVAL.str = " optionally"
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7661
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7665
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7669
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7673
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7677
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7683
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7687
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7691
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7695
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7704
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7710
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7714
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7720
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7724
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7730
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7734
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7739
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7749
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7753
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7759
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7766
		{
			yyVAL.str = "charset"
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7776
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7780
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7784
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7793
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7798
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7803
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7805
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7808
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7810
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7813
		{
			yyVAL.empty = struct{}{}
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7815
		{
			yyVAL.empty = struct{}{}
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7817
		{
			yyVAL.empty = struct{}{}
		}
	case 1597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7821
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7830
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7837
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7841
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7847
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7851
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7858
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7864
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7868
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7874
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7878
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7885
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8525
		{
		}
	case 2227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8530
		{
		}
	case 2228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8534
		{
			skipToEnd(yylex)
		}
	case 2229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8539
		{
			skipToEnd(yylex)
		}
	case 2230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8543
		{
			skipToEnd(yylex)
		}
	case 2231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8547
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
