// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const KILL = 57472
const EMPTY_FROM_CLAUSE = 57473
const LOWER_THAN_CHARSET = 57474
const CHARSET = 57475
const UNIQUE = 57476
const KEY = 57477
const EXPRESSION_PREC_SETTER = 57478
const OR = 57479
const XOR = 57480
const AND = 57481
const NOT = 57482
const BETWEEN = 57483
const CASE = 57484
const WHEN = 57485
const THEN = 57486
const ELSE = 57487
const END = 57488
const LE = 57489
const GE = 57490
const NE = 57491
const NULL_SAFE_EQUAL = 57492
const IS = 57493
const LIKE = 57494
const REGEXP = 57495
const RLIKE = 57496
const IN = 57497
const ASSIGNMENT_OPT = 57498
const SHIFT_LEFT = 57499
const SHIFT_RIGHT = 57500
const DIV = 57501
const MOD = 57502
const UNARY = 57503
const COLLATE = 57504
const BINARY = 57505
const UNDERSCORE_ARMSCII8 = 57506
const UNDERSCORE_ASCII = 57507
const UNDERSCORE_BIG5 = 57508
const UNDERSCORE_BINARY = 57509
const UNDERSCORE_CP1250 = 57510
const UNDERSCORE_CP1251 = 57511
const UNDERSCORE_CP1256 = 57512
const UNDERSCORE_CP1257 = 57513
const UNDERSCORE_CP850 = 57514
const UNDERSCORE_CP852 = 57515
const UNDERSCORE_CP866 = 57516
const UNDERSCORE_CP932 = 57517
const UNDERSCORE_DEC8 = 57518
const UNDERSCORE_EUCJPMS = 57519
const UNDERSCORE_EUCKR = 57520
const UNDERSCORE_GB18030 = 57521
const UNDERSCORE_GB2312 = 57522
const UNDERSCORE_GBK = 57523
const UNDERSCORE_GEOSTD8 = 57524
const UNDERSCORE_GREEK = 57525
const UNDERSCORE_HEBREW = 57526
const UNDERSCORE_HP8 = 57527
const UNDERSCORE_KEYBCS2 = 57528
const UNDERSCORE_KOI8R = 57529
const UNDERSCORE_KOI8U = 57530
const UNDERSCORE_LATIN1 = 57531
const UNDERSCORE_LATIN2 = 57532
const UNDERSCORE_LATIN5 = 57533
const UNDERSCORE_LATIN7 = 57534
const UNDERSCORE_MACCE = 57535
const UNDERSCORE_MACROMAN = 57536
const UNDERSCORE_SJIS = 57537
const UNDERSCORE_SWE7 = 57538
const UNDERSCORE_TIS620 = 57539
const UNDERSCORE_UCS2 = 57540
const UNDERSCORE_UJIS = 57541
const UNDERSCORE_UTF16 = 57542
const UNDERSCORE_UTF16LE = 57543
const UNDERSCORE_UTF32 = 57544
const UNDERSCORE_UTF8 = 57545
const UNDERSCORE_UTF8MB4 = 57546
const UNDERSCORE_UTF8MB3 = 57547
const INTERVAL = 57548
const WINDOW_EXPR = 57549
const JSON_EXTRACT_OP = 57550
const JSON_UNQUOTE_EXTRACT_OP = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const FLUSH = 57558
const CHANGE = 57559
const MODIFY = 57560
const DEALLOCATE = 57561
const REVERT = 57562
const QUERIES = 57563
const SCHEMA = 57564
const TABLE = 57565
const INDEX = 57566
const VIEW = 57567
const TO = 57568
const IGNORE = 57569
const IF = 57570
const PRIMARY = 57571
const COLUMN = 57572
const SPATIAL = 57573
const FULLTEXT = 57574
const KEY_BLOCK_SIZE = 57575
const CHECK = 57576
const INDEXES = 57577
const ACTION = 57578
const CASCADE = 57579
const CONSTRAINT = 57580
const FOREIGN = 57581
const NO = 57582
const REFERENCES = 57583
const RESTRICT = 57584
const SHOW = 57585
const DESCRIBE = 57586
const EXPLAIN = 57587
const DATE = 57588
const ESCAPE = 57589
const REPAIR = 57590
const OPTIMIZE = 57591
const TRUNCATE = 57592
const COALESCE = 57593
const EXCHANGE = 57594
const REBUILD = 57595
const PARTITIONING = 57596
const REMOVE = 57597
const PREPARE = 57598
const EXECUTE = 57599
const MAXVALUE = 57600
const PARTITION = 57601
const REORGANIZE = 57602
const LESS = 57603
const THAN = 57604
const PROCEDURE = 57605
const TRIGGER = 57606
const VINDEX = 57607
const VINDEXES = 57608
const DIRECTORY = 57609
const NAME = 57610
const UPGRADE = 57611
const STATUS = 57612
const VARIABLES = 57613
const WARNINGS = 57614
const CASCADED = 57615
const DEFINER = 57616
const OPTION = 57617
const SQL = 57618
const UNDEFINED = 57619
const SEQUENCE = 57620
const MERGE = 57621
const TEMPORARY = 57622
const TEMPTABLE = 57623
const INVOKER = 57624
const SECURITY = 57625
const FIRST = 57626
const AFTER = 57627
const LAST = 57628
const VITESS_MIGRATION = 57629
const CANCEL = 57630
const RETRY = 57631
const LAUNCH = 57632
const COMPLETE = 57633
const CLEANUP = 57634
const THROTTLE = 57635
const UNTHROTTLE = 57636
const EXPIRE = 57637
const RATIO = 57638
const VITESS_THROTTLER = 57639
const BEGIN = 57640
const START = 57641
const TRANSACTION = 57642
const COMMIT = 57643
const ROLLBACK = 57644
const SAVEPOINT = 57645
const RELEASE = 57646
const WORK = 57647
const CONSISTENT = 57648
const SNAPSHOT = 57649
const BIT = 57650
const TINYINT = 57651
const SMALLINT = 57652
const MEDIUMINT = 57653
const INT = 57654
const INTEGER = 57655
const BIGINT = 57656
const INTNUM = 57657
const REAL = 57658
const DOUBLE = 57659
const FLOAT_TYPE = 57660
const FLOAT4_TYPE = 57661
const FLOAT8_TYPE = 57662
const DECIMAL_TYPE = 57663
const NUMERIC = 57664
const TIME = 57665
const TIMESTAMP = 57666
const DATETIME = 57667
const YEAR = 57668
const CHAR = 57669
const VARCHAR = 57670
const BOOL = 57671
const CHARACTER = 57672
const VARBINARY = 57673
const NCHAR = 57674
const TEXT = 57675
const TINYTEXT = 57676
const MEDIUMTEXT = 57677
const LONGTEXT = 57678
const BLOB = 57679
const TINYBLOB = 57680
const MEDIUMBLOB = 57681
const LONGBLOB = 57682
const JSON = 57683
const JSON_SCHEMA_VALID = 57684
const JSON_SCHEMA_VALIDATION_REPORT = 57685
const ENUM = 57686
const GEOMETRY = 57687
const POINT = 57688
const LINESTRING = 57689
const POLYGON = 57690
const GEOMCOLLECTION = 57691
const GEOMETRYCOLLECTION = 57692
const MULTIPOINT = 57693
const MULTILINESTRING = 57694
const MULTIPOLYGON = 57695
const ASCII = 57696
const UNICODE = 57697
const NULLX = 57698
const AUTO_INCREMENT = 57699
const APPROXNUM = 57700
const SIGNED = 57701
const UNSIGNED = 57702
const ZEROFILL = 57703
const PURGE = 57704
const BEFORE = 57705
const CODE = 57706
const COLLATION = 57707
const COLUMNS = 57708
const DATABASES = 57709
const ENGINES = 57710
const EVENT = 57711
const EXTENDED = 57712
const FIELDS = 57713
const FULL = 57714
const FUNCTION = 57715
const GTID_EXECUTED = 57716
const KEYSPACES = 57717
const OPEN = 57718
const PLUGINS = 57719
const PRIVILEGES = 57720
const PROCESSLIST = 57721
const SCHEMAS = 57722
const TABLES = 57723
const TRIGGERS = 57724
const USER = 57725
const VGTID_EXECUTED = 57726
const VITESS_KEYSPACES = 57727
const VITESS_METADATA = 57728
const VITESS_MIGRATIONS = 57729
const VITESS_REPLICATION_STATUS = 57730
const VITESS_SHARDS = 57731
const VITESS_TABLETS = 57732
const VITESS_TARGET = 57733
const VSCHEMA = 57734
const VITESS_THROTTLED_APPS = 57735
const NAMES = 57736
const GLOBAL = 57737
const SESSION = 57738
const ISOLATION = 57739
const LEVEL = 57740
const READ = 57741
const WRITE = 57742
const ONLY = 57743
const REPEATABLE = 57744
const COMMITTED = 57745
const UNCOMMITTED = 57746
const SERIALIZABLE = 57747
const ADDDATE = 57748
const CURRENT_TIMESTAMP = 57749
const DATABASE = 57750
const CURRENT_DATE = 57751
const CURDATE = 57752
const DATE_ADD = 57753
const DATE_SUB = 57754
const NOW = 57755
const SUBDATE = 57756
const CURTIME = 57757
const CURRENT_TIME = 57758
const LOCALTIME = 57759
const LOCALTIMESTAMP = 57760
const CURRENT_USER = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const SYSDATE = 57765
const DAY = 57766
const DAY_HOUR = 57767
const DAY_MICROSECOND = 57768
const DAY_MINUTE = 57769
const DAY_SECOND = 57770
const HOUR = 57771
const HOUR_MICROSECOND = 57772
const HOUR_MINUTE = 57773
const HOUR_SECOND = 57774
const MICROSECOND = 57775
const MINUTE = 57776
const MINUTE_MICROSECOND = 57777
const MINUTE_SECOND = 57778
const MONTH = 57779
const QUARTER = 57780
const SECOND = 57781
const SECOND_MICROSECOND = 57782
const YEAR_MONTH = 57783
const WEEK = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_HOUR = 57787
const SQL_TSI_MINUTE = 57788
const SQL_TSI_MONTH = 57789
const SQL_TSI_QUARTER = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MICROSECOND = 57792
const SQL_TSI_YEAR = 57793
const REPLACE = 57794
const CONVERT = 57795
const CAST = 57796
const SUBSTR = 57797
const SUBSTRING = 57798
const SEPARATOR = 57799
const TIMESTAMPADD = 57800
const TIMESTAMPDIFF = 57801
const WEIGHT_STRING = 57802
const LTRIM = 57803
const RTRIM = 57804
const TRIM = 57805
const JSON_ARRAY = 57806
const JSON_OBJECT = 57807
const JSON_QUOTE = 57808
const JSON_DEPTH = 57809
const JSON_TYPE = 57810
const JSON_LENGTH = 57811
const JSON_VALID = 57812
const JSON_ARRAY_APPEND = 57813
const JSON_ARRAY_INSERT = 57814
const JSON_INSERT = 57815
const JSON_MERGE = 57816
const JSON_MERGE_PATCH = 57817
const JSON_MERGE_PRESERVE = 57818
const JSON_REMOVE = 57819
const JSON_REPLACE = 57820
const JSON_SET = 57821
const JSON_UNQUOTE = 57822
const COUNT = 57823
const AVG = 57824
const MAX = 57825
const MIN = 57826
const SUM = 57827
const GROUP_CONCAT = 57828
const BIT_AND = 57829
const BIT_OR = 57830
const BIT_XOR = 57831
const STD = 57832
const STDDEV = 57833
const STDDEV_POP = 57834
const STDDEV_SAMP = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const VARIANCE = 57838
const ANY_VALUE = 57839
const REGEXP_INSTR = 57840
const REGEXP_LIKE = 57841
const REGEXP_REPLACE = 57842
const REGEXP_SUBSTR = 57843
const ExtractValue = 57844
const UpdateXML = 57845
const GET_LOCK = 57846
const RELEASE_LOCK = 57847
const RELEASE_ALL_LOCKS = 57848
const IS_FREE_LOCK = 57849
const IS_USED_LOCK = 57850
const LOCATE = 57851
const POSITION = 57852
const ST_GeometryCollectionFromText = 57853
const ST_GeometryFromText = 57854
const ST_LineStringFromText = 57855
const ST_MultiLineStringFromText = 57856
const ST_MultiPointFromText = 57857
const ST_MultiPolygonFromText = 57858
const ST_PointFromText = 57859
const ST_PolygonFromText = 57860
const ST_GeometryCollectionFromWKB = 57861
const ST_GeometryFromWKB = 57862
const ST_LineStringFromWKB = 57863
const ST_MultiLineStringFromWKB = 57864
const ST_MultiPointFromWKB = 57865
const ST_MultiPolygonFromWKB = 57866
const ST_PointFromWKB = 57867
const ST_PolygonFromWKB = 57868
const ST_AsBinary = 57869
const ST_AsText = 57870
const ST_Dimension = 57871
const ST_Envelope = 57872
const ST_IsSimple = 57873
const ST_IsEmpty = 57874
const ST_GeometryType = 57875
const ST_X = 57876
const ST_Y = 57877
const ST_Latitude = 57878
const ST_Longitude = 57879
const ST_EndPoint = 57880
const ST_IsClosed = 57881
const ST_Length = 57882
const ST_NumPoints = 57883
const ST_StartPoint = 57884
const ST_PointN = 57885
const ST_Area = 57886
const ST_Centroid = 57887
const ST_ExteriorRing = 57888
const ST_InteriorRingN = 57889
const ST_NumInteriorRings = 57890
const ST_NumGeometries = 57891
const ST_GeometryN = 57892
const ST_LongFromGeoHash = 57893
const ST_PointFromGeoHash = 57894
const ST_LatFromGeoHash = 57895
const ST_GeoHash = 57896
const ST_AsGeoJSON = 57897
const ST_GeomFromGeoJSON = 57898
const MATCH = 57899
const AGAINST = 57900
const BOOLEAN = 57901
const LANGUAGE = 57902
const WITH = 57903
const QUERY = 57904
const EXPANSION = 57905
const WITHOUT = 57906
const VALIDATION = 57907
const UNUSED = 57908
const ARRAY = 57909
const BYTE = 57910
const CUME_DIST = 57911
const DESCRIPTION = 57912
const DENSE_RANK = 57913
const EMPTY = 57914
const EXCEPT = 57915
const FIRST_VALUE = 57916
const GROUPING = 57917
const GROUPS = 57918
const JSON_TABLE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LATERAL = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const OF = 57926
const OVER = 57927
const PERCENT_RANK = 57928
const RANK = 57929
const RECURSIVE = 57930
const ROW_NUMBER = 57931
const SYSTEM = 57932
const WINDOW = 57933
const ACTIVE = 57934
const ADMIN = 57935
const AUTOEXTEND_SIZE = 57936
const BUCKETS = 57937
const CLONE = 57938
const COLUMN_FORMAT = 57939
const COMPONENT = 57940
const DEFINITION = 57941
const ENFORCED = 57942
const ENGINE_ATTRIBUTE = 57943
const EXCLUDE = 57944
const FOLLOWING = 57945
const GET_MASTER_PUBLIC_KEY = 57946
const HISTOGRAM = 57947
const HISTORY = 57948
const INACTIVE = 57949
const INVISIBLE = 57950
const LOCKED = 57951
const MASTER_COMPRESSION_ALGORITHMS = 57952
const MASTER_PUBLIC_KEY_PATH = 57953
const MASTER_TLS_CIPHERSUITES = 57954
const MASTER_ZSTD_COMPRESSION_LEVEL = 57955
const NESTED = 57956
const NETWORK_NAMESPACE = 57957
const NOWAIT = 57958
const NULLS = 57959
const OJ = 57960
const OLD = 57961
const OPTIONAL = 57962
const ORDINALITY = 57963
const ORGANIZATION = 57964
const OTHERS = 57965
const PARTIAL = 57966
const PATH = 57967
const PERSIST = 57968
const PERSIST_ONLY = 57969
const PRECEDING = 57970
const PRIVILEGE_CHECKS_USER = 57971
const PROCESS = 57972
const RANDOM = 57973
const REFERENCE = 57974
const REQUIRE_ROW_FORMAT = 57975
const RESOURCE = 57976
const RESPECT = 57977
const RESTART = 57978
const RETAIN = 57979
const REUSE = 57980
const ROLE = 57981
const SECONDARY = 57982
const SECONDARY_ENGINE = 57983
const SECONDARY_ENGINE_ATTRIBUTE = 57984
const SECONDARY_LOAD = 57985
const SECONDARY_UNLOAD = 57986
const SIMPLE = 57987
const SKIP = 57988
const SRID = 57989
const THREAD_PRIORITY = 57990
const TIES = 57991
const UNBOUNDED = 57992
const VCPU = 57993
const VISIBLE = 57994
const RETURNING = 57995
const FORMAT_BYTES = 57996
const FORMAT_PICO_TIME = 57997
const PS_CURRENT_THREAD_ID = 57998
const PS_THREAD_ID = 57999
const GTID_SUBSET = 58000
const GTID_SUBTRACT = 58001
const WAIT_FOR_EXECUTED_GTID_SET = 58002
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58003
const FORMAT = 58004
const TREE = 58005
const VITESS = 58006
const TRADITIONAL = 58007
const VTEXPLAIN = 58008
const VEXPLAIN = 58009
const PLAN = 58010
const LOCAL = 58011
const LOW_PRIORITY = 58012
const NO_WRITE_TO_BINLOG = 58013
const LOGS = 58014
const ERROR = 58015
const GENERAL = 58016
const HOSTS = 58017
const OPTIMIZER_COSTS = 58018
const USER_RESOURCES = 58019
const SLOW = 58020
const CHANNEL = 58021
const RELAY = 58022
const EXPORT = 58023
const CURRENT = 58024
const ROW = 58025
const ROWS = 58026
const AVG_ROW_LENGTH = 58027
const CONNECTION = 58028
const CHECKSUM = 58029
const DELAY_KEY_WRITE = 58030
const ENCRYPTION = 58031
const ENGINE = 58032
const INSERT_METHOD = 58033
const MAX_ROWS = 58034
const MIN_ROWS = 58035
const PACK_KEYS = 58036
const PASSWORD = 58037
const FIXED = 58038
const DYNAMIC = 58039
const COMPRESSED = 58040
const REDUNDANT = 58041
const COMPACT = 58042
const ROW_FORMAT = 58043
const STATS_AUTO_RECALC = 58044
const STATS_PERSISTENT = 58045
const STATS_SAMPLE_PAGES = 58046
const STORAGE = 58047
const MEMORY = 58048
const DISK = 58049
const PARTITIONS = 58050
const LINEAR = 58051
const RANGE = 58052
const LIST = 58053
const SUBPARTITION = 58054
const SUBPARTITIONS = 58055
const HASH = 58056

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 51,
	14, 51,
	-2, 40,
	-1, 52,
	1, 159,
	732, 159,
	-2, 167,
	-1, 53,
	136, 167,
	178, 167,
	347, 167,
	-2, 523,
	-1, 61,
	36, 772,
	241, 772,
	252, 772,
	287, 786,
	288, 786,
	-2, 774,
	-1, 66,
	243, 810,
	-2, 808,
	-1, 122,
	240, 1587,
	-2, 133,
	-1, 124,
	1, 160,
	732, 160,
	-2, 167,
	-1, 135,
	137, 408,
	246, 408,
	-2, 512,
	-1, 154,
	136, 167,
	178, 167,
	347, 167,
	-2, 532,
	-1, 733,
	164, 41,
	-2, 45,
	-1, 939,
	87, 1604,
	-2, 1458,
	-1, 940,
	87, 1605,
	223, 1609,
	-2, 1459,
	-1, 941,
	223, 1608,
	-2, 42,
	-1, 1024,
	60, 884,
	-2, 899,
	-1, 1111,
	251, 43,
	256, 43,
	-2, 419,
	-1, 1196,
	1, 580,
	732, 580,
	-2, 167,
	-1, 1498,
	223, 1609,
	-2, 1459,
	-1, 1707,
	60, 885,
	-2, 904,
	-1, 1708,
	60, 886,
	-2, 905,
	-1, 1759,
	136, 167,
	178, 167,
	347, 167,
	-2, 458,
	-1, 1840,
	137, 408,
	246, 408,
	-2, 512,
	-1, 1849,
	251, 44,
	256, 44,
	-2, 420,
	-1, 2286,
	223, 1613,
	-2, 1607,
	-1, 2287,
	223, 1609,
	-2, 1605,
	-1, 2387,
	136, 167,
	178, 167,
	347, 167,
	-2, 459,
	-1, 2394,
	26, 188,
	-2, 190,
	-1, 2847,
	78, 98,
	88, 98,
	-2, 963,
	-1, 2916,
	707, 696,
	-2, 670,
	-1, 3135,
	50, 1555,
	-2, 1549,
	-1, 3954,
	707, 696,
	-2, 684,
	-1, 4041,
	90, 628,
	95, 628,
	105, 628,
	180, 628,
	181, 628,
	182, 628,
	183, 628,
	184, 628,
	185, 628,
	186, 628,
	187, 628,
	188, 628,
	189, 628,
	190, 628,
	191, 628,
	192, 628,
	193, 628,
	194, 628,
	195, 628,
	196, 628,
	197, 628,
	198, 628,
	199, 628,
	200, 628,
	201, 628,
	202, 628,
	203, 628,
	204, 628,
	205, 628,
	206, 628,
	207, 628,
	208, 628,
	209, 628,
	210, 628,
	211, 628,
	212, 628,
	213, 628,
	214, 628,
	215, 628,
	216, 628,
	217, 628,
	218, 628,
	219, 628,
	220, 628,
	221, 628,
	-2, 1976,
}

const yyPrivate = 57344

const yyLast = 55448

var yyAct = [...]int{
	955, 950, 3615, 87, 3616, 3617, 3935, 942, 4020, 2384,
	4129, 3285, 4116, 2092, 943, 4008, 3919, 1261, 4083, 1263,
	2080, 4084, 3187, 3194, 2315, 4039, 3844, 908, 3236, 3418,
	42, 3245, 3005, 3250, 3247, 3246, 3244, 3249, 3248, 3148,
	2023, 3917, 3554, 5, 2317, 1968, 3088, 3567, 3265, 3202,
	2458, 737, 3264, 3152, 3149, 3463, 2979, 3654, 3457, 2339,
	3136, 2807, 764, 3267, 904, 2355, 3004, 903, 1762, 732,
	1818, 2358, 1722, 2881, 3291, 2961, 3985, 2421, 2913, 2882,
	3483, 2446, 2426, 1073, 3449, 2883, 1022, 2372, 87, 2489,
	1143, 2832, 163, 1041, 1019, 2359, 43, 2813, 1709, 2799,
	2783, 1865, 2360, 2238, 41, 2076, 2282, 1022, 2115, 2953,
	3146, 2467, 2237, 1021, 2031, 1025, 2270, 149, 2445, 2347,
	2506, 2428, 1083, 2874, 1101, 1751, 1119, 2849, 1731, 1510,
	2820, 1847, 1106, 2362, 1043, 100, 104, 105, 2335, 1688,
	731, 2119, 2051, 1437, 3151, 1422, 747, 1964, 1854, 1080,
	1077, 2443, 1112, 1109, 1946, 1081, 2417, 1107, 1108, 1750,
	1058, 1736, 1060, 1031, 2146, 3649, 2340, 742, 2188, 3907,
	2781, 2127, 1470, 1494, 2022, 2283, 1028, 1040, 107, 85,
	1252, 1975, 2418, 167, 1027, 99, 1813, 1017, 127, 905,
	125, 126, 1026, 1192, 1839, 132, 133, 735, 1053, 734,
	741, 1029, 1514, 106, 1259, 1238, 98, 4117, 3555, 722,
	93, 2460, 2461, 2462, 3970, 3233, 2460, 84, 1519, 2904,
	1048, 1052, 2936, 2935, 2504, 3547, 4066, 2969, 667, 1016,
	2970, 3965, 3966, 2312, 2313, 1034, 128, 3510, 2038, 2037,
	3971, 2036, 1145, 3255, 2035, 2034, 2033, 1148, 134, 2006,
	1208, 725, 1074, 726, 1684, 1162, 1163, 1164, 4060, 1167,
	1168, 1169, 1170, 1123, 2779, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 723, 1068, 1067, 1156, 1035, 1433, 1018, 3132,
	1122, 2, 2551, 95, 1454, 1098, 3620, 95, 2493, 3253,
	707, 3944, 2906, 1020, 95, 2809, 3620, 1209, 128, 1149,
	1152, 1153, 4087, 1097, 1931, 1096, 1095, 1042, 3092, 4122,
	1090, 4139, 1085, 2054, 4082, 3259, 4107, 3423, 3255, 727,
	707, 4070, 3966, 2929, 1165, 4068, 111, 112, 113, 701,
	116, 3252, 2492, 122, 4121, 3920, 191, 3422, 2744, 661,
	959, 960, 961, 1015, 909, 2043, 4069, 1066, 1070, 907,
	4067, 720, 721, 1716, 1066, 1070, 907, 190, 3310, 2926,
	95, 1010, 1011, 1012, 1013, 701, 128, 3840, 1024, 3839,
	1147, 1099, 3560, 3619, 3253, 3561, 4097, 959, 960, 961,
	1146, 129, 3850, 3619, 2560, 4064, 1424, 3579, 3568, 4049,
	4021, 4009, 701, 4017, 172, 86, 1055, 1056, 2486, 701,
	3259, 3849, 2085, 4044, 3335, 1828, 86, 4047, 698, 1752,
	86, 1753, 1094, 2780, 1201, 1202, 4053, 4054, 2858, 2823,
	1451, 2857, 1452, 1453, 2859, 3204, 3205, 3184, 3185, 3256,
	2379, 2380, 4048, 2015, 2016, 3183, 2968, 2863, 2557, 2491,
	1089, 2378, 2952, 1091, 2824, 1228, 1204, 1008, 1256, 2558,
	169, 1233, 1234, 170, 1007, 3667, 683, 3936, 1216, 3578,
	1971, 2870, 1216, 1217, 1229, 1222, 4025, 1217, 701, 681,
	1092, 3949, 3287, 95, 3318, 1215, 189, 1214, 2397, 2396,
	2816, 2817, 701, 2549, 95, 3316, 2014, 1748, 95, 715,
	2018, 1434, 719, 86, 2314, 3292, 88, 713, 1471, 3026,
	2914, 2954, 1191, 4025, 3891, 1692, 3892, 701, 2939, 678,
	2468, 2343, 2507, 3280, 3256, 2512, 4119, 1438, 693, 1947,
	3307, 3281, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480,
	1479, 1481, 1482, 688, 3203, 1231, 1232, 2437, 1249, 1245,
	702, 1247, 1094, 691, 1086, 1254, 3206, 2112, 1423, 1166,
	1921, 1088, 1087, 1237, 4088, 1235, 1197, 3824, 1230, 1223,
	2431, 3289, 2956, 1255, 3288, 1236, 3549, 3548, 2943, 2944,
	2513, 95, 3545, 1059, 2530, 4089, 702, 1132, 1172, 1244,
	1246, 2519, 2515, 2517, 2518, 2516, 2520, 2521, 1171, 1121,
	173, 2527, 2509, 2528, 1922, 2529, 1923, 1972, 1093, 179,
	1092, 1130, 2471, 702, 2552, 2553, 2555, 2554, 1102, 3624,
	702, 668, 1103, 670, 684, 2356, 704, 1103, 703, 674,
	1141, 672, 676, 685, 677, 1448, 671, 1140, 682, 2511,
	1139, 673, 686, 687, 690, 694, 695, 696, 692, 689,
	1138, 680, 705, 1137, 4061, 2104, 2093, 2094, 2095, 2096,
	2106, 2097, 2098, 2099, 2111, 2107, 2100, 2101, 2108, 2109,
	2110, 2102, 2103, 2105, 3027, 3460, 2907, 1069, 1063, 1061,
	1136, 2510, 1695, 3206, 1069, 1063, 1061, 1832, 1135, 702,
	1134, 1129, 1142, 4140, 4094, 1242, 1078, 3544, 1260, 1243,
	1260, 1260, 1120, 702, 1114, 1078, 1054, 1124, 1114, 1248,
	1115, 1965, 1126, 2341, 2342, 1151, 1127, 1125, 1078, 2430,
	2444, 1114, 1076, 1749, 2957, 1150, 3091, 3226, 702, 2497,
	2496, 1826, 1961, 164, 1241, 1425, 1133, 1128, 1093, 1159,
	2938, 1825, 1824, 1444, 2924, 1962, 1436, 1822, 665, 660,
	1022, 1495, 1500, 1501, 4062, 1504, 1506, 1507, 1508, 1509,
	1131, 1512, 1513, 1515, 1515, 3932, 1515, 1515, 1520, 1520,
	1520, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1250, 3943, 2905, 1492, 1645, 1415, 1647,
	1648, 1649, 1650, 1651, 1416, 1417, 956, 3257, 3258, 1100,
	956, 1520, 1520, 1520, 1520, 1520, 1520, 956, 3508, 3509,
	3261, 4023, 2490, 4052, 2941, 706, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1496, 1488, 1489, 1490, 1491, 3308, 699, 2980, 1432, 2559,
	1438, 1502, 1062, 4022, 3618, 1505, 4133, 1685, 4023, 1062,
	3406, 700, 2928, 89, 3618, 701, 1516, 4051, 1517, 1518,
	165, 3577, 2908, 3461, 94, 1213, 1212, 177, 1218, 1219,
	1220, 1221, 1203, 1682, 1200, 94, 2558, 1521, 1522, 94,
	4022, 1195, 3257, 3258, 1121, 1933, 1932, 1934, 1935, 1936,
	1485, 1226, 1257, 1258, 1485, 3261, 2927, 2960, 2343, 1853,
	1691, 2951, 3497, 1158, 2950, 1715, 2784, 2786, 185, 1022,
	1951, 3479, 2488, 1022, 1486, 1487, 2854, 2819, 2756, 1022,
	2088, 2982, 1740, 1646, 1206, 3100, 3099, 1443, 1440, 1441,
	1442, 1447, 1449, 1446, 2814, 1445, 1699, 2434, 666, 2385,
	1703, 1121, 1485, 1482, 3182, 1439, 1021, 124, 1448, 2128,
	1683, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 94, 2129, 1952, 2583, 1465, 184, 186, 187,
	188, 1037, 119, 1716, 1253, 3957, 2973, 2435, 1144, 3540,
	2572, 3473, 2508, 3000, 2433, 2897, 2027, 1120, 1958, 1754,
	1239, 2992, 2991, 2990, 1976, 2120, 2984, 2056, 2988, 1211,
	2983, 2120, 2981, 2592, 4098, 1701, 1702, 2986, 1852, 104,
	105, 2057, 1483, 1484, 2055, 1121, 2985, 1683, 2436, 1652,
	1653, 1654, 1655, 1656, 1657, 1452, 1453, 3663, 2432, 1453,
	3515, 1689, 3514, 2475, 2987, 2989, 1862, 1861, 1094, 1190,
	1851, 1676, 2963, 2480, 1120, 120, 2485, 2962, 2483, 1124,
	1114, 107, 2583, 2155, 1126, 1132, 1444, 1130, 1127, 1125,
	1948, 4141, 1949, 2963, 3987, 1950, 702, 4131, 2962, 4090,
	4132, 3498, 4130, 1033, 4135, 2785, 1454, 3832, 2480, 1829,
	1830, 1831, 2484, 1845, 3574, 1697, 3575, 1454, 2275, 3831,
	2341, 2342, 2272, 3822, 2126, 2275, 1225, 3590, 1700, 1941,
	1121, 2274, 1718, 1194, 3925, 3589, 1686, 1227, 2487, 3988,
	1916, 2348, 2349, 1838, 1018, 954, 1970, 2482, 1120, 1698,
	1157, 1867, 1721, 1868, 1154, 1870, 1872, 1898, 3522, 1876,
	1878, 1880, 1882, 1884, 1855, 1855, 1020, 1121, 1240, 1260,
	1196, 1857, 1977, 1210, 1745, 1746, 1906, 1907, 4142, 3926,
	3521, 2147, 1912, 1913, 3511, 1716, 2149, 1856, 1939, 1454,
	2154, 2150, 2125, 1940, 2151, 2152, 2153, 1928, 1821, 2148,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 1955,
	3234, 1953, 1954, 3222, 1956, 1957, 3284, 1454, 1848, 1835,
	1836, 1834, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 1859, 1120, 2879, 1704, 2878, 2877, 1193, 1114,
	1117, 1118, 1451, 1078, 1452, 1453, 1902, 1111, 1115, 2440,
	1942, 3002, 1938, 1451, 1093, 1452, 1453, 1926, 1454, 1894,
	1925, 1927, 1897, 1454, 1899, 959, 960, 961, 1110, 1924,
	1120, 1966, 1914, 190, 1454, 1908, 1114, 1117, 1118, 1905,
	1078, 2564, 2565, 2566, 1111, 1115, 1904, 1471, 1903, 2972,
	1477, 1478, 1480, 1479, 1481, 1482, 1874, 129, 1696, 1419,
	128, 3853, 1827, 707, 4091, 1097, 1454, 1096, 1095, 1748,
	172, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 3505, 707, 1725, 1451, 1982, 1452, 1453, 2861,
	707, 2456, 2455, 3952, 2872, 1260, 1260, 2454, 2453, 3951,
	1978, 1979, 4103, 1716, 3472, 2452, 2451, 4101, 1716, 87,
	2004, 3929, 87, 1451, 1983, 1452, 1453, 2629, 4031, 1716,
	1716, 1990, 1991, 1992, 1454, 3928, 169, 1450, 1716, 170,
	1726, 1454, 3927, 2003, 2805, 4118, 42, 4078, 1716, 42,
	1443, 1440, 1441, 1442, 1447, 1449, 1446, 3827, 1445, 3811,
	4029, 1716, 189, 110, 1451, 3810, 1452, 1453, 1439, 1451,
	3662, 1452, 1453, 3660, 109, 1471, 108, 3586, 2083, 2083,
	1451, 1681, 1452, 1453, 2081, 2081, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1480, 1479, 1481, 1482, 2631, 2084, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479, 1481, 1482,
	1454, 1680, 1451, 1679, 1452, 1453, 3519, 2049, 4027, 1716,
	1980, 2589, 101, 3504, 1682, 3904, 1716, 1984, 3293, 1986,
	1987, 1988, 1989, 102, 101, 1471, 1993, 3290, 1467, 3190,
	1468, 103, 1454, 3225, 1716, 102, 2166, 3224, 2005, 2888,
	2045, 2047, 2048, 2627, 1469, 1483, 1484, 1466, 2875, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479, 1481, 1482,
	1451, 1678, 1452, 1453, 2540, 2046, 173, 1451, 2539, 1452,
	1453, 1450, 1716, 3945, 3191, 179, 2502, 1471, 1716, 2571,
	2805, 4016, 1454, 2501, 2588, 85, 2028, 3858, 85, 1454,
	1716, 1683, 2338, 2053, 2320, 1454, 2007, 1471, 3193, 2011,
	2012, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 2805, 3995, 3325, 1973, 3188, 1716, 2805, 3991,
	2058, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1479,
	1481, 1482, 1454, 1937, 3204, 3205, 1451, 1929, 1452, 1453,
	1919, 3189, 3978, 1716, 2284, 1454, 2286, 2060, 2059, 2087,
	2061, 2062, 2063, 2064, 2065, 2066, 2068, 2070, 2071, 2072,
	2073, 2074, 2075, 2114, 2116, 1496, 3902, 1716, 1451, 1915,
	1452, 1453, 2285, 3899, 1716, 3195, 2130, 2131, 2132, 2133,
	1716, 2850, 2121, 2271, 3558, 3942, 2165, 3835, 1716, 1454,
	2144, 1475, 1476, 1477, 1478, 1480, 1479, 1481, 1482, 164,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1456, 1454, 2805,
	3823, 3857, 1454, 3558, 1716, 3815, 3881, 1716, 1451, 1911,
	1452, 1453, 2805, 3556, 3814, 1451, 2364, 1452, 1453, 3448,
	1716, 1451, 2180, 1452, 1453, 2289, 2290, 1910, 2284, 1909,
	2286, 2480, 1716, 3203, 2851, 1454, 3477, 1716, 2711, 1716,
	3215, 3214, 2394, 2366, 2853, 3206, 104, 105, 103, 2273,
	3212, 3213, 3210, 3211, 3210, 3209, 2353, 1727, 1451, 1251,
	1452, 1453, 2850, 3441, 1716, 3566, 1454, 104, 105, 2829,
	1716, 1451, 2821, 1452, 1453, 2178, 2558, 2937, 2331, 1454,
	1817, 2918, 3438, 1716, 109, 2189, 3436, 1716, 1083, 2911,
	2912, 2052, 1454, 2288, 2805, 2804, 2291, 2292, 2585, 1716,
	2086, 1716, 2915, 2403, 2404, 2405, 2406, 1716, 2398, 1454,
	2399, 2400, 2401, 2402, 2389, 1451, 1454, 1452, 1453, 3398,
	1716, 1083, 2388, 2821, 1034, 2851, 2409, 2410, 2411, 2412,
	2319, 2370, 1817, 1816, 1451, 2558, 1452, 1453, 1451, 2307,
	1452, 1453, 1760, 1759, 2829, 95, 2893, 2801, 2325, 2393,
	2326, 1716, 2330, 1450, 2333, 2262, 2263, 2264, 2265, 2266,
	2423, 3192, 103, 2392, 4092, 2469, 2828, 1450, 2429, 2351,
	3147, 1451, 1454, 1452, 1453, 3474, 3396, 1716, 2375, 2376,
	2374, 3472, 3983, 2481, 1068, 1067, 3177, 3956, 2391, 2390,
	2805, 2829, 1454, 3392, 1716, 3472, 2558, 3427, 2466, 3212,
	3389, 1716, 1451, 1454, 1452, 1453, 3120, 1454, 2439, 2377,
	2309, 3523, 1454, 2585, 110, 1451, 2189, 1452, 1453, 2711,
	2585, 2829, 1454, 2616, 2615, 109, 165, 108, 1451, 2480,
	1452, 1453, 2463, 177, 2424, 2346, 103, 2420, 1720, 2310,
	1123, 2480, 2086, 2438, 2029, 1451, 2442, 1452, 1453, 2450,
	1855, 2494, 1451, 2474, 1452, 1453, 2477, 3940, 2478, 2413,
	2415, 2416, 3524, 3525, 3526, 2013, 1960, 1122, 1747, 2424,
	2473, 2472, 2476, 1105, 185, 1104, 3387, 1716, 2498, 190,
	2495, 1454, 2499, 2500, 1023, 1454, 3237, 3385, 1716, 1454,
	2909, 3383, 1716, 2885, 1454, 1716, 3381, 1716, 1454, 4057,
	3998, 3846, 1454, 129, 1723, 151, 3379, 1716, 1451, 3812,
	1452, 1453, 1717, 1719, 2563, 3674, 172, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 1451, 2505,
	1452, 1453, 3539, 184, 186, 187, 188, 1890, 1506, 1451,
	1506, 1452, 1453, 1451, 3536, 1452, 1453, 162, 1451, 3517,
	1452, 1453, 3340, 150, 3339, 1819, 2575, 2422, 1451, 3282,
	1452, 1453, 95, 3239, 1195, 3377, 1716, 3235, 2884, 3375,
	1716, 2919, 169, 3373, 1716, 170, 2578, 1454, 2286, 3819,
	2533, 1454, 3371, 1716, 2419, 3286, 3369, 1716, 1891, 1892,
	1893, 2414, 3847, 1454, 1841, 1842, 161, 160, 189, 2408,
	2407, 3196, 1454, 1944, 2285, 3200, 1454, 1850, 1846, 1815,
	121, 1454, 3199, 3484, 3485, 2437, 2885, 1451, 2323, 1452,
	1453, 1451, 3527, 1452, 1453, 1451, 1454, 1452, 1453, 2548,
	1451, 4113, 1452, 1453, 1451, 2009, 1452, 1453, 1451, 1454,
	1452, 1453, 4111, 2556, 4085, 1886, 3201, 3964, 3886, 3487,
	1454, 3197, 3231, 3230, 3490, 3229, 3198, 3147, 2898, 1454,
	2534, 3367, 1716, 3489, 3166, 3365, 1716, 3165, 2567, 3528,
	3529, 3530, 2053, 3960, 3848, 1454, 3169, 3363, 1716, 3167,
	2337, 3170, 1454, 1724, 3168, 2329, 3361, 1716, 3478, 3125,
	3359, 1716, 1887, 1888, 1889, 3345, 1716, 2010, 1454, 155,
	1843, 158, 3644, 1840, 3643, 156, 157, 3124, 3924, 3655,
	3323, 1716, 173, 1451, 3653, 1452, 1453, 1451, 1454, 1452,
	1453, 179, 1454, 2776, 1716, 2569, 2568, 3468, 2570, 1451,
	2591, 1452, 1453, 2581, 2774, 1716, 3134, 2573, 1451, 2574,
	1452, 1453, 1451, 2580, 1452, 1453, 2576, 1451, 1959, 1452,
	1453, 3171, 3642, 2838, 2839, 2755, 2542, 2543, 1454, 2749,
	1716, 2545, 1451, 1454, 1452, 1453, 2726, 1716, 3465, 1006,
	2546, 2743, 1038, 2625, 3208, 1451, 3464, 1452, 1453, 1454,
	1039, 2868, 2718, 1716, 2889, 1161, 1451, 2787, 1452, 1453,
	101, 3137, 3139, 2083, 1160, 1451, 2128, 1452, 1453, 2081,
	3140, 102, 2709, 1716, 1454, 1022, 2707, 1716, 1454, 1418,
	2129, 1451, 2790, 1452, 1453, 3301, 2884, 2966, 1451, 1454,
	1452, 1453, 2925, 1454, 129, 3470, 2826, 2827, 1454, 2348,
	2349, 2526, 103, 2788, 1451, 2364, 1452, 1453, 1022, 2846,
	4127, 3227, 2694, 1716, 1454, 164, 4036, 2692, 1716, 2537,
	1454, 3941, 2598, 42, 1451, 3842, 1452, 1453, 1451, 3207,
	1452, 1453, 2843, 2690, 1716, 2845, 2825, 2842, 2806, 2613,
	101, 2334, 2834, 2837, 2838, 2839, 2835, 103, 2836, 2840,
	2052, 102, 3484, 3485, 1046, 1047, 1454, 3123, 2688, 1716,
	1454, 2525, 2686, 1716, 1451, 3122, 1452, 1453, 2524, 1451,
	2802, 1452, 1453, 2684, 1716, 2523, 2844, 2682, 1716, 1454,
	2815, 110, 2680, 1716, 1689, 1451, 2522, 1452, 1453, 3450,
	2778, 2562, 109, 1454, 108, 108, 3912, 1454, 3492, 2871,
	2873, 1454, 2791, 103, 2793, 3541, 2798, 3911, 3889, 1683,
	1451, 159, 1452, 1453, 1451, 2818, 1452, 1453, 3661, 3659,
	2864, 2803, 2923, 3658, 2848, 1451, 1454, 1452, 1453, 1451,
	3651, 1452, 1453, 3537, 1451, 1454, 1452, 1453, 3469, 2852,
	2678, 1716, 109, 2855, 2676, 1716, 3467, 3240, 2934, 2429,
	1451, 2862, 1452, 1453, 2464, 1833, 1451, 1454, 1452, 1453,
	1045, 2887, 2865, 2674, 1716, 1454, 2890, 2891, 110, 1454,
	3650, 2123, 2876, 3458, 2821, 4115, 2124, 2672, 1716, 109,
	110, 2670, 1716, 4115, 4114, 2668, 1716, 3930, 3628, 2886,
	2801, 109, 1451, 108, 1452, 1453, 1451, 3028, 1452, 1453,
	2617, 2894, 2321, 2895, 1741, 1733, 2899, 2900, 2901, 4114,
	2666, 1716, 2184, 3503, 2931, 1451, 1036, 1452, 1453, 152,
	2880, 1838, 153, 114, 115, 3, 97, 2976, 2977, 1451,
	1, 1452, 1453, 1451, 1014, 1452, 1453, 1451, 1421, 1452,
	1453, 2664, 1716, 2910, 1454, 1420, 2930, 2920, 2921, 2662,
	1716, 3507, 165, 2660, 1716, 2026, 4046, 1454, 10, 177,
	2024, 1454, 1451, 9, 1452, 1453, 2025, 679, 2311, 8,
	1454, 1451, 1687, 1452, 1453, 2955, 4086, 2993, 4042, 4043,
	1930, 2974, 1454, 2619, 1920, 3569, 1454, 2236, 2958, 3843,
	3243, 2470, 2268, 1451, 1454, 1452, 1453, 3535, 2427, 1113,
	185, 1451, 154, 1452, 1453, 1451, 2386, 1452, 1453, 2387,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020,
	1454, 4011, 2301, 118, 1071, 117, 2932, 2994, 2655, 1716,
	1116, 1224, 2465, 3559, 2997, 2869, 2395, 1766, 1729, 1717,
	2308, 2651, 1716, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 2649, 1716, 1764, 1765, 1763, 184,
	186, 187, 188, 1768, 1767, 3309, 2642, 1716, 2618, 3405,
	2640, 1716, 2017, 714, 2332, 3030, 2841, 708, 3443, 192,
	1451, 1755, 1452, 1453, 1734, 3086, 3419, 2964, 1155, 669,
	2965, 3216, 2503, 1451, 675, 1452, 1453, 1451, 1503, 1452,
	1453, 1454, 2008, 3121, 1728, 2856, 1451, 1454, 1452, 1453,
	2975, 1065, 1057, 2322, 3104, 2978, 2792, 1064, 1451, 3093,
	1452, 1453, 1451, 2995, 1452, 1453, 3820, 3155, 3462, 3133,
	1451, 3135, 1452, 1453, 2808, 3095, 3138, 3131, 3923, 3652,
	3996, 3021, 2364, 2866, 1730, 3426, 2590, 1454, 2118, 1493,
	2363, 1454, 2271, 3623, 2271, 3066, 1451, 2044, 1452, 1453,
	739, 738, 736, 1454, 2794, 3154, 2822, 87, 1457, 2366,
	2364, 2364, 2364, 2364, 2364, 944, 2441, 3104, 2782, 2996,
	3076, 3077, 3078, 3079, 3080, 3439, 1742, 2833, 2831, 2830,
	2364, 3404, 2535, 2364, 1025, 2371, 3486, 2366, 2366, 2366,
	2366, 2366, 3103, 3482, 3094, 4038, 3096, 1454, 3159, 2365,
	2361, 2800, 3176, 3128, 1970, 895, 1454, 2366, 894, 748,
	2366, 1454, 740, 3115, 730, 893, 892, 3500, 2273, 3119,
	2273, 3400, 3269, 1454, 2940, 3337, 3283, 1451, 3126, 1452,
	1453, 3129, 1454, 1451, 2942, 1452, 1453, 3336, 3141, 3142,
	2867, 3116, 3117, 3118, 3279, 1435, 1706, 3260, 724, 1084,
	3306, 3178, 3947, 1027, 3179, 3160, 2561, 3268, 3163, 3158,
	3127, 1026, 3172, 3161, 3162, 3334, 3164, 104, 105, 1705,
	3954, 3180, 1454, 1451, 3251, 1452, 1453, 1451, 3553, 1452,
	1453, 3328, 1454, 3232, 2916, 2457, 3186, 69, 1454, 1451,
	2772, 1452, 1453, 3219, 46, 2771, 3918, 3984, 3218, 3068,
	3217, 3070, 1454, 887, 884, 3220, 3221, 2767, 3625, 1454,
	2579, 1714, 1710, 3626, 1454, 3627, 2766, 3081, 3082, 3083,
	3084, 3270, 3089, 3090, 3271, 3241, 1711, 3967, 3144, 3968,
	2429, 3262, 883, 1451, 3969, 1452, 1453, 2173, 1454, 3277,
	1431, 1428, 1451, 3150, 1452, 1453, 4059, 1451, 3150, 1452,
	1453, 2327, 2328, 1713, 2019, 1712, 2765, 96, 1454, 1451,
	3294, 1452, 1453, 3297, 3296, 36, 2764, 35, 1451, 34,
	1452, 1453, 3304, 2834, 2837, 2838, 2839, 2835, 33, 2836,
	2840, 3311, 3312, 32, 3313, 26, 2763, 3315, 3263, 3317,
	25, 3319, 3314, 2762, 24, 23, 22, 29, 2753, 19,
	21, 20, 18, 3329, 3330, 3331, 3332, 3333, 1451, 3254,
	1452, 1453, 4081, 4126, 123, 1714, 1710, 55, 1451, 52,
	1452, 1453, 2752, 50, 1451, 131, 1452, 1453, 1506, 130,
	1711, 53, 1506, 2577, 3242, 49, 1198, 2582, 1451, 47,
	1452, 1453, 2751, 31, 30, 1451, 17, 1452, 1453, 16,
	1451, 3421, 1452, 1453, 15, 1707, 1708, 1713, 3425, 1712,
	2586, 14, 2587, 13, 12, 11, 7, 2594, 6, 39,
	38, 2596, 2597, 37, 1451, 28, 1452, 1453, 27, 40,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	4, 2614, 2903, 2459, 1451, 0, 1452, 1453, 0, 0,
	0, 3305, 0, 0, 0, 0, 0, 0, 2364, 3153,
	0, 0, 0, 0, 2620, 2621, 2622, 2623, 2624, 0,
	2626, 3499, 0, 3459, 2628, 0, 3466, 0, 2633, 2634,
	1454, 2635, 3451, 3452, 2638, 2366, 2639, 2641, 2643, 2644,
	2645, 2646, 2647, 2648, 2650, 2652, 2653, 2654, 2656, 728,
	2658, 2659, 2661, 2663, 2665, 2667, 2669, 2671, 2673, 2675,
	2677, 2679, 2681, 2683, 2685, 2687, 2689, 2691, 2693, 2695,
	2696, 2697, 3493, 2699, 3488, 2701, 3491, 2703, 2704, 3494,
	2706, 2708, 2710, 3501, 3502, 3270, 2713, 3456, 3271, 3471,
	2717, 3454, 1454, 0, 2722, 2723, 2724, 2725, 1454, 3518,
	0, 3520, 3299, 3300, 1454, 0, 0, 2736, 2737, 2738,
	2739, 2740, 2741, 1454, 2750, 2745, 2746, 3563, 3564, 1454,
	3481, 3512, 3513, 2748, 0, 0, 1454, 3428, 2754, 3430,
	3431, 3432, 1454, 0, 2757, 2758, 2759, 2760, 2761, 3495,
	3496, 0, 0, 0, 0, 2768, 2769, 0, 2770, 1454,
	0, 2773, 2775, 2332, 0, 2777, 0, 0, 1044, 0,
	1454, 1050, 1050, 0, 1454, 2789, 1451, 0, 1452, 1453,
	0, 0, 0, 0, 3546, 1454, 2747, 0, 3550, 3551,
	3552, 3565, 2742, 1454, 0, 0, 0, 0, 2735, 1454,
	0, 0, 0, 1454, 0, 0, 0, 2734, 0, 0,
	1454, 0, 3581, 2733, 0, 0, 0, 0, 3542, 3543,
	2732, 0, 0, 0, 0, 0, 2731, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 1454, 0, 1451, 0,
	1452, 1453, 1454, 2730, 1451, 0, 1452, 1453, 0, 1454,
	1451, 0, 1452, 1453, 2729, 0, 0, 0, 2728, 1451,
	0, 1452, 1453, 1454, 0, 1451, 0, 1452, 1453, 2727,
	1454, 0, 1451, 0, 1452, 1453, 1454, 2721, 1451, 0,
	1452, 1453, 3631, 2720, 3632, 3633, 3634, 2719, 0, 0,
	3641, 0, 3645, 3646, 2716, 1451, 0, 1452, 1453, 0,
	1454, 0, 0, 3621, 0, 0, 1451, 0, 1452, 1453,
	1451, 2715, 1452, 1453, 1454, 3154, 0, 87, 3647, 3154,
	2714, 1451, 0, 1452, 1453, 0, 2712, 0, 0, 1451,
	0, 1452, 1453, 2705, 2083, 1451, 0, 1452, 1453, 1451,
	2081, 1452, 1453, 0, 42, 0, 1451, 2702, 1452, 1453,
	1454, 0, 3585, 3676, 2700, 3648, 0, 3668, 3657, 3656,
	2698, 1454, 0, 1451, 0, 1452, 1453, 3664, 3666, 0,
	0, 0, 1451, 0, 1452, 1453, 0, 0, 1451, 0,
	1452, 1453, 0, 0, 2657, 1451, 3826, 1452, 1453, 0,
	0, 0, 0, 0, 0, 3680, 0, 0, 2637, 1451,
	0, 1452, 1453, 0, 0, 0, 1451, 0, 1452, 1453,
	0, 0, 1451, 0, 1452, 1453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3845, 0, 3818, 3817,
	0, 0, 0, 0, 2636, 0, 1451, 3833, 1452, 1453,
	0, 0, 0, 0, 3816, 2632, 3837, 3838, 0, 0,
	1451, 0, 1452, 1453, 3006, 3007, 3008, 3009, 3010, 0,
	3883, 3884, 2083, 3670, 3677, 3678, 0, 0, 2081, 0,
	0, 0, 0, 0, 3025, 0, 0, 0, 3828, 3829,
	3830, 3887, 0, 0, 0, 0, 1451, 0, 1452, 1453,
	0, 0, 0, 0, 0, 3612, 0, 1451, 0, 1452,
	1453, 0, 3150, 0, 0, 0, 0, 0, 3154, 3672,
	0, 0, 3890, 0, 0, 0, 3893, 0, 3821, 0,
	0, 0, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1641, 1642, 1643, 1644, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 3888, 3931, 3934, 3916, 3913, 3914, 1454, 3915, 0,
	0, 1454, 0, 0, 0, 3948, 1454, 0, 0, 3153,
	0, 0, 0, 3153, 0, 0, 0, 0, 0, 0,
	0, 0, 3156, 87, 0, 0, 0, 0, 0, 0,
	3933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3174, 0, 0, 0, 0, 3937, 0, 0, 0, 0,
	42, 0, 0, 3950, 0, 0, 0, 0, 3953, 0,
	0, 0, 0, 3955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3825, 2630, 0, 0, 0, 2595, 3922, 0, 0, 0,
	2584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3973, 0, 0, 3974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3993, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 1455,
	0, 3939, 0, 1451, 0, 1452, 1453, 1451, 3982, 1452,
	1453, 0, 1451, 0, 1452, 1453, 0, 0, 0, 42,
	3989, 0, 0, 3999, 3845, 4013, 0, 0, 0, 1511,
	0, 0, 3997, 4010, 4024, 3958, 4002, 3303, 4007, 4004,
	4003, 4001, 4006, 4005, 0, 0, 0, 0, 0, 0,
	4034, 0, 0, 0, 0, 0, 0, 0, 0, 3320,
	3321, 0, 3322, 4055, 3324, 3326, 0, 4037, 0, 4045,
	4050, 0, 3153, 0, 0, 0, 0, 0, 4063, 0,
	4065, 4079, 0, 0, 0, 0, 4024, 4076, 0, 0,
	3338, 1783, 0, 0, 0, 3342, 3343, 3344, 3346, 3347,
	3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357,
	3358, 3360, 3362, 3364, 3366, 3368, 3370, 3372, 3374, 3376,
	3378, 3380, 3382, 3384, 3386, 3388, 3390, 3391, 3393, 3394,
	3395, 3397, 1970, 2083, 3399, 4099, 3401, 3402, 3403, 2081,
	4108, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415,
	3416, 3417, 4109, 4112, 4106, 4110, 4105, 4120, 4095, 4080,
	3424, 4096, 4075, 4024, 3429, 3994, 4128, 0, 3433, 3434,
	3150, 3435, 3437, 0, 3440, 3442, 4134, 3444, 3445, 3446,
	3447, 4136, 0, 0, 0, 3453, 3962, 0, 0, 0,
	0, 2083, 0, 0, 3972, 0, 4144, 2081, 4145, 4146,
	3884, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	4143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3475, 3476, 0, 0, 3480, 0, 0, 0, 0, 3946,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 1471,
	0, 0, 0, 0, 0, 0, 4093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1480, 1479, 1481, 1482, 0, 4071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	3557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 1690,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3576, 0, 0, 3580, 0, 0, 0, 0,
	0, 0, 0, 1797, 1800, 1801, 1802, 1803, 1804, 1805,
	0, 1806, 1807, 1809, 1810, 1808, 1811, 1812, 1785, 1786,
	1787, 1788, 1769, 1770, 1798, 0, 1772, 3591, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 0, 663, 1782,
	1789, 1790, 1791, 1792, 0, 1793, 1794, 1795, 1796, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 1009, 0,
	0, 2112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	2275, 3614, 0, 958, 0, 0, 0, 0, 0, 0,
	1079, 1974, 0, 2082, 3622, 0, 0, 0, 0, 0,
	0, 0, 3629, 1797, 1800, 1801, 1802, 1803, 1804, 1805,
	0, 1806, 1807, 1809, 1810, 1808, 1811, 1812, 1785, 1786,
	1787, 1788, 1769, 1770, 1798, 0, 1772, 0, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 0, 0, 1782,
	1789, 1790, 1791, 1792, 0, 1793, 1794, 1795, 1796, 2104,
	2093, 2094, 2095, 2096, 2106, 2097, 2098, 2099, 2111, 2107,
	2100, 2101, 2108, 2109, 2110, 2102, 2103, 2105, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3834,
	0, 0, 0, 0, 0, 0, 0, 0, 3841, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3851, 3852,
	0, 3854, 0, 3855, 3856, 0, 0, 0, 3859, 3860,
	3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870,
	3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880,
	0, 3882, 3885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3894, 3895, 3896,
	3897, 3898, 3900, 3901, 3903, 3905, 3906, 3908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 2040, 2041, 2042, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2050, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 3938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 2090, 0, 0, 0, 0, 2113, 1050, 1050, 2117,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 0, 2145,
	0, 0, 0, 2167, 2168, 2169, 2170, 2171, 2172, 2174,
	0, 2179, 0, 2181, 2182, 2183, 0, 2185, 2186, 2187,
	0, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	0, 0, 0, 0, 0, 2267, 0, 2269, 0, 2276,
	2277, 2278, 2279, 2280, 2281, 1050, 0, 1050, 1050, 1050,
	1050, 1050, 0, 0, 0, 0, 0, 0, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 0, 2302, 2303, 2304,
	2305, 2306, 0, 0, 0, 0, 0, 0, 0, 3963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3979, 0, 0, 1050, 0, 0, 3980,
	3981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2344, 2345,
	0, 3992, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	1199, 0, 1205, 0, 2383, 1207, 0, 4018, 4019, 0,
	0, 129, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 4026, 4028, 4030, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4058, 0, 0, 0,
	195, 0, 0, 195, 0, 162, 0, 712, 0, 0,
	1427, 150, 718, 0, 0, 2425, 0, 0, 0, 0,
	190, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	169, 1837, 0, 170, 4077, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 129, 0, 151, 0, 0, 0,
	0, 0, 138, 139, 161, 160, 189, 172, 0, 0,
	0, 0, 0, 0, 718, 195, 718, 0, 4100, 4102,
	4104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 4125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 170, 0, 0, 4137,
	4138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 1842, 161, 160, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 136, 158,
	143, 135, 0, 156, 157, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	144, 0, 0, 86, 44, 45, 88, 0, 0, 0,
	0, 0, 0, 0, 147, 145, 140, 141, 142, 146,
	0, 0, 0, 92, 0, 0, 137, 48, 76, 77,
	0, 74, 78, 0, 0, 148, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 1843, 158, 0, 1840, 0, 156, 157, 0, 62,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 95, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2599, 2600, 2601, 2602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 51, 54, 57, 56, 59, 0, 73, 0, 0,
	82, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 61, 91, 90, 0, 0, 71,
	72, 58, 0, 0, 0, 1900, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1945, 0, 159, 0, 0, 0, 0, 0, 0, 63,
	64, 0, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	153, 0, 0, 1981, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 0, 0,
	165, 0, 0, 0, 0, 0, 1732, 177, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	152, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 195, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	177, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 718, 89, 718, 718, 0, 184, 186, 187,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 195, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 2032, 0, 0, 0,
	184, 186, 187, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1050, 0, 0, 2998, 2999,
	0, 0, 3001, 0, 0, 3003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3022, 3023, 3024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3029, 0, 0,
	3031, 3032, 3033, 0, 0, 0, 3034, 3035, 0, 0,
	3036, 0, 3037, 0, 0, 0, 0, 0, 0, 3038,
	0, 3039, 0, 0, 0, 3040, 0, 3041, 70, 0,
	3042, 0, 3043, 0, 3044, 0, 3045, 0, 3046, 0,
	3047, 0, 3048, 0, 3049, 0, 3050, 0, 3051, 0,
	3052, 0, 3053, 0, 3054, 0, 3055, 0, 3056, 0,
	3057, 0, 3058, 0, 3059, 1498, 0, 0, 3060, 0,
	3061, 0, 3062, 0, 0, 3063, 0, 3064, 0, 3065,
	0, 2239, 3067, 0, 0, 3069, 0, 0, 3071, 3072,
	3073, 3074, 0, 0, 0, 0, 3075, 2239, 2239, 2239,
	2239, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3085, 0, 0, 0, 0, 0, 0, 0,
	3098, 0, 195, 3102, 0, 1050, 718, 718, 0, 0,
	0, 0, 3105, 3106, 3107, 3108, 3109, 3110, 0, 0,
	0, 3111, 3112, 0, 3113, 195, 3114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 3145, 0, 2350, 0, 0, 0, 0, 0, 0,
	0, 2354, 0, 2357, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3175, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 718, 718, 0, 718, 0, 718, 718,
	0, 718, 718, 718, 718, 718, 718, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 1498, 718, 1498,
	195, 0, 0, 0, 0, 0, 0, 3238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 3327, 0, 0, 0, 95, 0, 0, 957,
	0, 0, 0, 945, 958, 959, 960, 961, 946, 0,
	0, 947, 948, 0, 949, 0, 0, 0, 3341, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 954, 962,
	963, 2514, 0, 0, 0, 0, 0, 0, 0, 0,
	2531, 2532, 0, 0, 2536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2541, 0, 0, 0, 0,
	0, 0, 2544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3272, 3273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2547, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 3274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 3538, 0, 0, 0, 0,
	1498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 3275,
	3276, 0, 0, 0, 0, 0, 0, 0, 3562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	697, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3582, 0, 3583, 0, 0, 3584, 0,
	0, 0, 0, 0, 0, 0, 3587, 3588, 717, 0,
	717, 0, 0, 0, 0, 3592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3593,
	0, 3594, 0, 3595, 0, 3596, 0, 3597, 0, 3598,
	0, 3599, 0, 3600, 0, 3601, 0, 3602, 0, 3603,
	0, 3604, 0, 3605, 0, 3606, 0, 3607, 0, 3608,
	0, 2287, 3609, 0, 0, 0, 3610, 0, 3611, 0,
	0, 0, 0, 0, 3613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3630, 0, 0,
	0, 0, 0, 0, 0, 195, 3635, 0, 3636, 3637,
	718, 3638, 0, 3639, 0, 0, 0, 0, 3640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2847,
	0, 0, 0, 0, 0, 195, 0, 0, 718, 0,
	0, 0, 0, 3665, 0, 0, 0, 0, 195, 0,
	0, 0, 718, 0, 3673, 2287, 195, 3675, 195, 0,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 3679,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 2945,
	2946, 2947, 2948, 2949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 2959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 718, 2967, 0,
	3921, 718, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 957, 0, 0, 0, 195, 958, 0, 0,
	0, 0, 0, 0, 0, 195, 195, 2082, 0, 195,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 897,
	0, 0, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 2287, 0, 193, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3961, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1051, 1051, 0, 0, 0, 0, 0, 0, 3975,
	664, 0, 3976, 0, 3977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 1414, 717, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4072, 3278, 4073,
	0, 4074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3295, 0, 0,
	3298, 0, 0, 896, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4123, 0, 4124, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 0, 0, 1075, 0, 1082, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 3455, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	717, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 195,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 3516, 0, 0, 0,
	0, 0, 0, 195, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3531, 0, 0, 3532,
	3533, 3534, 0, 0, 0, 0, 718, 0, 717, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1497, 1860, 0, 0, 1863, 1864, 717, 717, 0,
	717, 0, 717, 717, 0, 717, 717, 717, 717, 717,
	717, 0, 0, 0, 0, 0, 0, 0, 1497, 1895,
	1896, 1497, 717, 1497, 718, 1901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 664, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 1498, 0,
	0, 718, 718, 1498, 195, 195, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 195, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 1498,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 717, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 0, 0, 0, 0, 0,
	1499, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 1262, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 1499, 0, 1499, 664, 0, 3959, 0, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 1917, 717, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 195, 0, 0, 195, 195, 195, 0, 0, 717,
	0, 0, 0, 0, 718, 718, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 1994,
	1995, 664, 664, 664, 664, 664, 664, 664, 0, 0,
	0, 718, 718, 718, 718, 0, 717, 0, 0, 0,
	0, 0, 0, 2447, 2448, 2449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 1693, 1694, 0, 0, 717,
	1858, 0, 0, 1858, 0, 1858, 0, 0, 0, 0,
	0, 2479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 1756,
	0, 717, 0, 0, 0, 717, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1866, 0, 1866, 0, 1866, 1866, 0,
	1875, 1866, 1866, 1866, 1866, 1866, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 1498, 0, 0,
	0, 0, 718, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 95, 0, 0,
	957, 0, 1943, 0, 945, 958, 959, 960, 961, 946,
	0, 0, 947, 948, 0, 949, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 954,
	962, 963, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 1051, 1051, 0,
	0, 0, 1499, 0, 0, 0, 0, 195, 0, 0,
	718, 0, 1262, 0, 0, 1497, 0, 717, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 3272, 3273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	718, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3274, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 1051, 1969, 1051, 1051, 1051,
	1051, 1051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 1262,
	1917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 0, 0, 0, 0, 1051, 0, 0, 0,
	3275, 3276, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	1969, 664, 0, 664, 0, 664, 2373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2077,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 910, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 911, 912, 0, 0, 0, 913,
	915, 718, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1498, 0, 718, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 1858, 1858, 0, 0, 0, 717,
	1262, 718, 2287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1497, 2933, 0, 0, 0,
	0, 0, 0, 718, 664, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 195, 718, 0,
	664, 664, 0, 0, 664, 0, 2538, 0, 0, 2324,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2336, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 1738, 0, 0, 1262, 0, 0, 0, 0, 0,
	717, 0, 718, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 1075, 0, 0, 0, 0, 0,
	0, 718, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 1969, 0,
	0, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 0, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 0, 0, 2077, 0, 0, 0,
	2077, 2077, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 1497, 0, 0, 717, 717, 1497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 1917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 1497, 0, 0, 0, 0, 717, 0,
	0, 0, 1262, 0, 664, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	2902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	664, 664, 664, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 664, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 717, 717, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2336, 0,
	0, 0, 0, 0, 0, 2917, 0, 0, 0, 0,
	0, 0, 0, 0, 2922, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 1499, 664,
	664, 664, 664, 664, 0, 0, 0, 0, 0, 0,
	0, 3173, 0, 0, 0, 0, 0, 1917, 0, 664,
	0, 0, 664, 3181, 1969, 2077, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 1497, 0, 0, 1499, 0, 717, 0, 717, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3087, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3130,
	717, 0, 0, 0, 717, 717, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 0, 0, 0, 0,
	3157, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 3701, 3703, 3702,
	3766, 3767, 3768, 3769, 3770, 3771, 3772, 789, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 664,
	664, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	3420, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 0, 0, 0, 0, 3715, 3716,
	0, 0, 3791, 3790, 3789, 0, 0, 3787, 3788, 3786,
	0, 0, 1499, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2336, 2336, 717, 0, 717, 0, 0,
	0, 0, 3792, 910, 0, 765, 766, 3793, 3794, 914,
	3795, 768, 769, 911, 912, 0, 763, 767, 913, 915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 0, 0, 0, 0, 0, 0, 0,
	3570, 3571, 3572, 3573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3698, 3699, 3700, 3704, 3705, 3706,
	3717, 3764, 3765, 3773, 3775, 866, 3774, 3776, 3777, 3778,
	3781, 3782, 3783, 3784, 3779, 3780, 3785, 3681, 3685, 3682,
	3683, 3684, 3696, 3686, 3687, 3688, 3689, 3690, 3691, 3692,
	3693, 3694, 3695, 3697, 3796, 3797, 3798, 3799, 3800, 3801,
	3710, 3714, 3713, 3711, 3712, 3708, 3709, 3736, 3735, 3737,
	3738, 3739, 3740, 3741, 3742, 3744, 3743, 3745, 3746, 3747,
	3748, 3749, 3750, 3718, 3719, 3722, 3723, 3721, 3720, 3724,
	3733, 3734, 3725, 3726, 3727, 3728, 3729, 3730, 3732, 3731,
	3751, 3752, 3753, 3754, 3755, 3757, 3756, 3760, 3761, 3759,
	3758, 3763, 3762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 0, 917, 0, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3669, 0, 3671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 3836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1262, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3909, 0, 0, 0, 3909,
	3909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2336, 0,
	0, 0, 0, 0, 0, 0, 0, 4012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1262, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	3420, 0, 4040, 1397, 1383, 520, 0, 1325, 1400, 1294,
	1313, 1410, 1316, 1319, 1362, 1272, 1340, 411, 1310, 1265,
	1298, 1267, 1305, 1268, 1296, 1327, 269, 1293, 1385, 1344,
	1399, 362, 266, 1274, 1299, 425, 1315, 203, 1364, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 1406, 366, 1350, 0, 491, 396, 0,
	0, 0, 1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349,
	1401, 1311, 1359, 1402, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 4014, 941, 0, 0, 0,
	0, 4015, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 1307, 1356, 1396, 1308, 1358, 264, 319,
	271, 263, 572, 1407, 1388, 1271, 1337, 1395, 1332, 0,
	0, 228, 1398, 1331, 0, 1361, 0, 1413, 1266, 1352,
	0, 1269, 1273, 1409, 1393, 1302, 274, 0, 0, 0,
	0, 0, 0, 0, 1328, 1339, 1373, 1377, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1348,
	0, 0, 0, 1278, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 1281, 0, 1301, 1374, 0, 1264, 296, 1275,
	397, 256, 0, 448, 1381, 1392, 1323, 616, 1394, 1321,
	1320, 1368, 1279, 1387, 1314, 361, 1277, 328, 197, 224,
	0, 1312, 407, 456, 468, 1386, 1297, 1306, 252, 1304,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	1347, 1366, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 1276, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 1292,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 1382, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 1371, 1412, 420, 467, 239, 596, 490, 199, 1286,
	1291, 1284, 0, 253, 254, 1353, 567, 1287, 1285, 1342,
	1343, 1288, 1403, 1404, 1405, 1390, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 1375, 1280, 0, 1289, 1290, 1384,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 1346,
	196, 220, 364, 1408, 449, 287, 637, 606, 601, 205,
	222, 1283, 261, 1295, 1303, 0, 1309, 1317, 1318, 1330,
	1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370,
	1372, 1379, 1391, 1411, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 1345, 1351, 377, 280, 303, 318, 1360, 605,
	496, 226, 461, 289, 250, 1378, 1380, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 1341, 1369, 372, 568, 569, 314, 392, 0, 0,
	0, 1397, 1383, 520, 0, 1325, 1400, 1294, 1313, 1410,
	1316, 1319, 1362, 1272, 1340, 411, 1310, 1265, 1298, 1267,
	1305, 1268, 1296, 1327, 269, 1293, 1385, 1344, 1399, 362,
	266, 1274, 1299, 425, 1315, 203, 1364, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 1406, 366, 1350, 0, 491, 396, 0, 0, 0,
	1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311,
	1359, 1402, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 1307, 1356, 1396, 1308, 1358, 264, 319, 271, 263,
	572, 1407, 1388, 1271, 1337, 1395, 1332, 0, 0, 228,
	1398, 1331, 0, 1361, 0, 1413, 1266, 1352, 0, 1269,
	1273, 1409, 1393, 1302, 274, 0, 0, 0, 0, 0,
	0, 0, 1328, 1339, 1373, 1377, 1322, 0, 0, 0,
	0, 0, 0, 3182, 0, 1300, 0, 1348, 0, 0,
	0, 1278, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	1281, 0, 1301, 1374, 0, 1264, 296, 1275, 397, 256,
	0, 448, 1381, 1392, 1323, 616, 1394, 1321, 1320, 1368,
	1279, 1387, 1314, 361, 1277, 328, 197, 224, 0, 1312,
	407, 456, 468, 1386, 1297, 1306, 252, 1304, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 1347, 1366,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	1276, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 1292, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	1382, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 1371,
	1412, 420, 467, 239, 596, 490, 199, 1286, 1291, 1284,
	0, 253, 254, 1353, 567, 1287, 1285, 1342, 1343, 1288,
	1403, 1404, 1405, 1390, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 1375, 1280, 0, 1289, 1290, 1384, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 1346, 196, 220,
	364, 1408, 449, 287, 637, 606, 601, 205, 222, 1283,
	261, 1295, 1303, 0, 1309, 1317, 1318, 1330, 1333, 1334,
	1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379,
	1391, 1411, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	1345, 1351, 377, 280, 303, 318, 1360, 605, 496, 226,
	461, 289, 250, 1378, 1380, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1341,
	1369, 372, 568, 569, 314, 392, 0, 0, 0, 1397,
	1383, 520, 0, 1325, 1400, 1294, 1313, 1410, 1316, 1319,
	1362, 1272, 1340, 411, 1310, 1265, 1298, 1267, 1305, 1268,
	1296, 1327, 269, 1293, 1385, 1344, 1399, 362, 266, 1274,
	1299, 425, 1315, 203, 1364, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 1406,
	366, 1350, 0, 491, 396, 0, 0, 0, 1329, 1389,
	1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 1307,
	1356, 1396, 1308, 1358, 264, 319, 271, 263, 572, 1407,
	1388, 1271, 1337, 1395, 1332, 0, 0, 228, 1398, 1331,
	0, 1361, 0, 1413, 1266, 1352, 0, 1269, 1273, 1409,
	1393, 1302, 274, 0, 0, 0, 0, 0, 0, 0,
	1328, 1339, 1373, 1377, 1322, 0, 0, 0, 0, 0,
	0, 3143, 0, 1300, 0, 1348, 0, 0, 0, 1278,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 1281, 0,
	1301, 1374, 0, 1264, 296, 1275, 397, 256, 0, 448,
	1381, 1392, 1323, 616, 1394, 1321, 1320, 1368, 1279, 1387,
	1314, 361, 1277, 328, 197, 224, 0, 1312, 407, 456,
	468, 1386, 1297, 1306, 252, 1304, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 1347, 1366, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 1276, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 1292, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 1382, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 1371, 1412, 420,
	467, 239, 596, 490, 199, 1286, 1291, 1284, 0, 253,
	254, 1353, 567, 1287, 1285, 1342, 1343, 1288, 1403, 1404,
	1405, 1390, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	1375, 1280, 0, 1289, 1290, 1384, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 1346, 196, 220, 364, 1408,
	449, 287, 637, 606, 601, 205, 222, 1283, 261, 1295,
	1303, 0, 1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336,
	1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1345, 1351,
	377, 280, 303, 318, 1360, 605, 496, 226, 461, 289,
	250, 1378, 1380, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1341, 1369, 372,
	568, 569, 314, 392, 0, 0, 0, 1397, 1383, 520,
	0, 1325, 1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272,
	1340, 411, 1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327,
	269, 1293, 1385, 1344, 1399, 362, 266, 1274, 1299, 425,
	1315, 203, 1364, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 1406, 366, 1350,
	0, 491, 396, 0, 0, 0, 1329, 1389, 1338, 1376,
	1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402, 321, 247,
	323, 202, 408, 492, 285, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 1307, 1356, 1396,
	1308, 1358, 264, 319, 271, 263, 572, 1407, 1388, 1271,
	1337, 1395, 1332, 0, 0, 228, 1398, 1331, 0, 1361,
	0, 1413, 1266, 1352, 0, 1269, 1273, 1409, 1393, 1302,
	274, 0, 0, 0, 0, 0, 0, 0, 1328, 1339,
	1373, 1377, 1322, 0, 0, 0, 0, 0, 0, 2352,
	0, 1300, 0, 1348, 0, 0, 0, 1278, 1270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 1281, 0, 1301, 1374,
	0, 1264, 296, 1275, 397, 256, 0, 448, 1381, 1392,
	1323, 616, 1394, 1321, 1320, 1368, 1279, 1387, 1314, 361,
	1277, 328, 197, 224, 0, 1312, 407, 456, 468, 1386,
	1297, 1306, 252, 1304, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 1347, 1366, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 1276, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 1292, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 1382, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 1371, 1412, 420, 467, 239,
	596, 490, 199, 1286, 1291, 1284, 0, 253, 254, 1353,
	567, 1287, 1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 1375, 1280,
	0, 1289, 1290, 1384, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 1346, 196, 220, 364, 1408, 449, 287,
	637, 606, 601, 205, 222, 1283, 261, 1295, 1303, 0,
	1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355,
	1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1345, 1351, 377, 280,
	303, 318, 1360, 605, 496, 226, 461, 289, 250, 1378,
	1380, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1341, 1369, 372, 568, 569,
	314, 392, 0, 0, 0, 1397, 1383, 520, 0, 1325,
	1400, 1294, 1313, 1410, 1316, 1319, 1362, 1272, 1340, 411,
	1310, 1265, 1298, 1267, 1305, 1268, 1296, 1327, 269, 1293,
	1385, 1344, 1399, 362, 266, 1274, 1299, 425, 1315, 203,
	1364, 481, 251, 373, 370, 575, 281, 272, 268, 249,
	315, 381, 423, 510, 417, 1406, 366, 1350, 0, 491,
	396, 0, 0, 0, 1329, 1389, 1338, 1376, 1324, 1363,
	1282, 1349, 1401, 1311, 1359, 1402, 321, 247, 323, 202,
	408, 492, 285, 0, 95, 0, 0, 0, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 244, 0, 0, 0, 347, 356, 355, 336, 337,
	339, 341, 346, 353, 359, 1307, 1356, 1396, 1308, 1358,
	264, 319, 271, 263, 572, 1407, 1388, 1271, 1337, 1395,
	1332, 0, 0, 228, 1398, 1331, 0, 1361, 0, 1413,
	1266, 1352, 0, 1269, 1273, 1409, 1393, 1302, 274, 0,
	0, 0, 0, 0, 0, 0, 1328, 1339, 1373, 1377,
	1322, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 1348, 0, 0, 0, 1278, 1270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 1281, 0, 1301, 1374, 0, 1264,
	296, 1275, 397, 256, 0, 448, 1381, 1392, 1323, 616,
	1394, 1321, 1320, 1368, 1279, 1387, 1314, 361, 1277, 328,
	197, 224, 0, 1312, 407, 456, 468, 1386, 1297, 1306,
	252, 1304, 466, 421, 594, 232, 283, 453, 427, 464,
	435, 286, 1347, 1366, 465, 368, 577, 445, 591, 617,
	618, 262, 401, 603, 514, 611, 635, 225, 259, 415,
	499, 597, 488, 393, 573, 574, 327, 487, 294, 201,
	365, 623, 223, 474, 367, 241, 230, 579, 600, 288,
	451, 630, 212, 509, 589, 238, 478, 0, 0, 638,
	246, 498, 214, 586, 497, 389, 324, 325, 213, 0,
	452, 267, 292, 0, 0, 257, 410, 581, 582, 255,
	639, 227, 610, 219, 1276, 609, 403, 576, 587, 390,
	379, 218, 585, 388, 378, 332, 351, 352, 279, 305,
	442, 371, 443, 304, 306, 399, 398, 400, 206, 598,
	0, 207, 0, 493, 599, 640, 447, 211, 233, 234,
	236, 1292, 278, 282, 290, 293, 301, 302, 311, 363,
	414, 441, 437, 446, 1382, 571, 592, 604, 615, 621,
	622, 624, 625, 626, 627, 628, 631, 629, 402, 309,
	489, 331, 369, 1371, 1412, 420, 467, 239, 596, 490,
	199, 1286, 1291, 1284, 0, 253, 254, 1353, 567, 1287,
	1285, 1342, 1343, 1288, 1403, 1404, 1405, 1390, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 636, 500, 506, 501,
	502, 503, 504, 505, 0, 507, 1375, 1280, 0, 1289,
	1290, 1384, 583, 584, 659, 380, 480, 593, 333, 345,
	348, 338, 357, 0, 358, 334, 335, 340, 342, 343,
	344, 349, 350, 354, 360, 248, 209, 386, 394, 570,
	310, 215, 216, 217, 516, 517, 518, 519, 607, 608,
	612, 204, 457, 458, 459, 460, 291, 602, 307, 463,
	462, 329, 330, 375, 444, 532, 534, 545, 549, 551,
	553, 559, 562, 533, 535, 546, 550, 552, 554, 560,
	563, 522, 524, 526, 528, 541, 540, 537, 565, 566,
	543, 548, 527, 539, 544, 557, 564, 561, 521, 525,
	529, 538, 556, 555, 536, 547, 558, 542, 530, 523,
	531, 1346, 196, 220, 364, 1408, 449, 287, 637, 606,
	601, 205, 222, 1283, 261, 1295, 1303, 0, 1309, 1317,
	1318, 1330, 1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365,
	1367, 1370, 1372, 1379, 1391, 1411, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1345, 1351, 377, 280, 303, 318,
	1360, 605, 496, 226, 461, 289, 250, 1378, 1380, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1341, 1369, 372, 568, 569, 314, 392,
	0, 0, 0, 1397, 1383, 520, 0, 1325, 1400, 1294,
	1313, 1410, 1316, 1319, 1362, 1272, 1340, 411, 1310, 1265,
	1298, 1267, 1305, 1268, 1296, 1327, 269, 1293, 1385, 1344,
	1399, 362, 266, 1274, 1299, 425, 1315, 203, 1364, 481,
	251, 373, 370, 575, 281, 272, 268, 249, 315, 381,
	423, 510, 417, 1406, 366, 1350, 0, 491, 396, 0,
	0, 0, 1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349,
	1401, 1311, 1359, 1402, 321, 247, 323, 202, 408, 492,
	285, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 244,
	0, 0, 0, 347, 356, 355, 336, 337, 339, 341,
	346, 353, 359, 1307, 1356, 1396, 1308, 1358, 264, 319,
	271, 263, 572, 1407, 1388, 1271, 1337, 1395, 1332, 0,
	0, 228, 1398, 1331, 0, 1361, 0, 1413, 1266, 1352,
	0, 1269, 1273, 1409, 1393, 1302, 274, 0, 0, 0,
	0, 0, 0, 0, 1328, 1339, 1373, 1377, 1322, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1348,
	0, 0, 0, 1278, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 1281, 0, 1301, 1374, 0, 1264, 296, 1275,
	397, 256, 0, 448, 1381, 1392, 1323, 616, 1394, 1321,
	1320, 1368, 1279, 1387, 1314, 361, 1277, 328, 197, 224,
	0, 1312, 407, 456, 468, 1386, 1297, 1306, 252, 1304,
	466, 421, 594, 232, 283, 453, 427, 464, 435, 286,
	1347, 1366, 465, 368, 577, 445, 591, 617, 618, 262,
	401, 603, 514, 611, 635, 225, 259, 415, 499, 597,
	488, 393, 573, 574, 327, 487, 294, 201, 365, 623,
	223, 474, 367, 241, 230, 579, 600, 288, 451, 630,
	212, 509, 589, 238, 478, 0, 0, 638, 246, 498,
	214, 586, 497, 389, 324, 325, 213, 0, 452, 267,
	292, 0, 0, 257, 410, 581, 582, 255, 639, 227,
	610, 219, 1276, 609, 403, 576, 587, 390, 379, 218,
	585, 388, 378, 332, 351, 352, 279, 305, 442, 371,
	443, 304, 306, 399, 398, 400, 206, 598, 0, 207,
	0, 493, 599, 640, 447, 211, 233, 234, 236, 1292,
	278, 282, 290, 293, 301, 302, 311, 363, 414, 441,
	437, 446, 1382, 571, 592, 604, 615, 621, 622, 624,
	625, 626, 627, 628, 631, 629, 402, 309, 489, 331,
	369, 1371, 1412, 420, 467, 239, 596, 490, 199, 1286,
	1291, 1284, 0, 253, 254, 1353, 567, 1287, 1285, 1342,
	1343, 1288, 1403, 1404, 1405, 1390, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 636, 500, 506, 501, 502, 503,
	504, 505, 0, 507, 1375, 1280, 0, 1289, 1290, 1384,
	583, 584, 659, 380, 480, 593, 333, 345, 348, 338,
	357, 0, 358, 334, 335, 340, 342, 343, 344, 349,
	350, 354, 360, 248, 209, 386, 394, 570, 310, 215,
	216, 217, 516, 517, 518, 519, 607, 608, 612, 204,
	457, 458, 459, 460, 291, 602, 307, 463, 462, 329,
	330, 375, 444, 532, 534, 545, 549, 551, 553, 559,
	562, 533, 535, 546, 550, 552, 554, 560, 563, 522,
	524, 526, 528, 541, 540, 537, 565, 566, 543, 548,
	527, 539, 544, 557, 564, 561, 521, 525, 529, 538,
	556, 555, 536, 547, 558, 542, 530, 523, 531, 1346,
	196, 220, 364, 1408, 449, 287, 637, 606, 601, 205,
	222, 1283, 261, 1295, 1303, 0, 1309, 1317, 1318, 1330,
	1333, 1334, 1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370,
	1372, 1379, 1391, 1411, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 1345, 1351, 377, 280, 303, 318, 1360, 605,
	496, 226, 461, 289, 250, 1378, 1380, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 1341, 1369, 372, 568, 569, 314, 392, 0, 0,
	0, 1397, 1383, 520, 0, 1325, 1400, 1294, 1313, 1410,
	1316, 1319, 1362, 1272, 1340, 411, 1310, 1265, 1298, 1267,
	1305, 1268, 1296, 1327, 269, 1293, 1385, 1344, 1399, 362,
	266, 1274, 1299, 425, 1315, 203, 1364, 481, 251, 373,
	370, 575, 281, 272, 268, 249, 315, 381, 423, 510,
	417, 1406, 366, 1350, 0, 491, 396, 0, 0, 0,
	1329, 1389, 1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311,
	1359, 1402, 321, 247, 323, 202, 408, 492, 285, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 244, 0, 0,
	0, 347, 356, 355, 336, 337, 339, 341, 346, 353,
	359, 1307, 1356, 1396, 1308, 1358, 264, 319, 271, 263,
	572, 1407, 1388, 1271, 1337, 1395, 1332, 0, 0, 228,
	1398, 1331, 0, 1361, 0, 1413, 1266, 1352, 0, 1269,
	1273, 1409, 1393, 1302, 274, 0, 0, 0, 0, 0,
	0, 0, 1328, 1339, 1373, 1377, 1322, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 1348, 0, 0,
	0, 1278, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	1281, 0, 1301, 1374, 0, 1264, 296, 1275, 397, 256,
	0, 448, 1381, 1392, 1323, 616, 1394, 1321, 1320, 1368,
	1279, 1387, 1314, 361, 1277, 328, 197, 224, 0, 1312,
	407, 456, 468, 1386, 1297, 1306, 252, 1304, 466, 421,
	594, 232, 283, 453, 427, 464, 435, 286, 1347, 1366,
	465, 368, 577, 445, 591, 617, 618, 262, 401, 603,
	514, 611, 635, 225, 259, 415, 499, 597, 488, 393,
	573, 574, 327, 487, 294, 201, 365, 623, 223, 474,
	367, 241, 230, 579, 600, 288, 451, 630, 212, 509,
	589, 238, 478, 0, 0, 638, 246, 498, 214, 586,
	497, 389, 324, 325, 213, 0, 452, 267, 292, 0,
	0, 257, 410, 581, 582, 255, 639, 227, 610, 219,
	1276, 609, 403, 576, 587, 390, 379, 218, 585, 388,
	378, 332, 351, 352, 279, 305, 442, 371, 443, 304,
	306, 399, 398, 400, 206, 598, 0, 207, 0, 493,
	599, 640, 447, 211, 233, 234, 236, 1292, 278, 282,
	290, 293, 301, 302, 311, 363, 414, 441, 437, 446,
	1382, 571, 592, 604, 615, 621, 622, 624, 625, 626,
	627, 628, 631, 629, 402, 309, 489, 331, 369, 1371,
	1412, 420, 467, 239, 596, 490, 199, 1286, 1291, 1284,
	0, 253, 254, 1353, 567, 1287, 1285, 1342, 1343, 1288,
	1403, 1404, 1405, 1390, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 636, 500, 506, 501, 502, 503, 504, 505,
	0, 507, 1375, 1280, 0, 1289, 1290, 1384, 583, 584,
	659, 380, 480, 593, 333, 345, 348, 338, 357, 0,
	358, 334, 335, 340, 342, 343, 344, 349, 350, 354,
	360, 248, 209, 386, 394, 570, 310, 215, 216, 217,
	516, 517, 518, 519, 607, 608, 612, 204, 457, 458,
	459, 460, 291, 602, 307, 463, 462, 329, 330, 375,
	444, 532, 534, 545, 549, 551, 553, 559, 562, 533,
	535, 546, 550, 552, 554, 560, 563, 522, 524, 526,
	528, 541, 540, 537, 565, 566, 543, 548, 527, 539,
	544, 557, 564, 561, 521, 525, 529, 538, 556, 555,
	536, 547, 558, 542, 530, 523, 531, 1346, 196, 220,
	364, 1408, 449, 287, 637, 606, 601, 205, 222, 1283,
	261, 1295, 1303, 0, 1309, 1317, 1318, 1330, 1333, 1334,
	1335, 1336, 1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379,
	1391, 1411, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	1345, 1351, 377, 280, 303, 318, 1360, 605, 496, 226,
	461, 289, 250, 1378, 1380, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1341,
	1369, 372, 568, 569, 314, 392, 0, 0, 0, 1397,
	1383, 520, 0, 1325, 1400, 1294, 1313, 1410, 1316, 1319,
	1362, 1272, 1340, 411, 1310, 1265, 1298, 1267, 1305, 1268,
	1296, 1327, 269, 1293, 1385, 1344, 1399, 362, 266, 1274,
	1299, 425, 1315, 203, 1364, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 1406,
	366, 1350, 0, 491, 396, 0, 0, 0, 1329, 1389,
	1338, 1376, 1324, 1363, 1282, 1349, 1401, 1311, 1359, 1402,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 0, 941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 1307,
	1356, 1396, 1308, 1358, 264, 319, 271, 263, 572, 1407,
	1388, 1271, 1337, 1395, 1332, 0, 0, 228, 1398, 1331,
	0, 1361, 0, 1413, 1266, 1352, 0, 1269, 1273, 1409,
	1393, 1302, 274, 0, 0, 0, 0, 0, 0, 0,
	1328, 1339, 1373, 1377, 1322, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 1348, 0, 0, 0, 1278,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 1281, 0,
	1301, 1374, 0, 1264, 296, 1275, 397, 256, 0, 448,
	1381, 1392, 1323, 616, 1394, 1321, 1320, 1368, 1279, 1387,
	1314, 361, 1277, 328, 197, 224, 0, 1312, 407, 456,
	468, 1386, 1297, 1306, 252, 1304, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 1347, 1366, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 1276, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 1292, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 1382, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 1371, 1412, 420,
	467, 239, 596, 490, 199, 1286, 1291, 1284, 0, 253,
	254, 1353, 567, 1287, 1285, 1342, 1343, 1288, 1403, 1404,
	1405, 1390, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	1375, 1280, 0, 1289, 1290, 1384, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 1346, 196, 220, 364, 1408,
	449, 287, 637, 606, 601, 205, 222, 1283, 261, 1295,
	1303, 0, 1309, 1317, 1318, 1330, 1333, 1334, 1335, 1336,
	1354, 1355, 1357, 1365, 1367, 1370, 1372, 1379, 1391, 1411,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1345, 1351,
	377, 280, 303, 318, 1360, 605, 496, 226, 461, 289,
	250, 1378, 1380, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1341, 1369, 372,
	568, 569, 314, 392, 0, 0, 0, 0, 0, 520,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 749, 0, 0, 0,
	269, 754, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 760, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 756, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 957,
	941, 733, 907, 945, 958, 959, 960, 961, 946, 0,
	237, 947, 948, 244, 949, 0, 906, 791, 793, 792,
	856, 857, 858, 859, 860, 861, 862, 789, 954, 962,
	963, 0, 264, 319, 271, 263, 572, 0, 0, 2175,
	2176, 2177, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 729, 746, 0, 759, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 0, 0, 901, 0, 745, 0, 0, 753, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 900, 0,
	0, 616, 0, 0, 898, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 951, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 952,
	953, 255, 639, 797, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 805, 806,
	279, 305, 882, 881, 880, 304, 306, 878, 879, 877,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 888, 910, 899, 765, 766, 889, 890, 914,
	891, 768, 769, 911, 912, 762, 763, 767, 913, 915,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 902, 752,
	751, 0, 758, 0, 787, 788, 790, 794, 795, 796,
	807, 854, 855, 863, 865, 866, 864, 867, 868, 869,
	872, 873, 874, 875, 870, 871, 876, 770, 774, 771,
	772, 773, 785, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 786, 925, 926, 927, 928, 929, 930,
	800, 804, 803, 801, 802, 798, 799, 826, 825, 827,
	828, 829, 830, 831, 832, 834, 833, 835, 836, 837,
	838, 839, 840, 808, 809, 812, 813, 811, 810, 814,
	823, 824, 815, 816, 817, 818, 819, 820, 822, 821,
	841, 842, 843, 844, 845, 847, 846, 850, 851, 849,
	848, 853, 852, 750, 196, 220, 364, 0, 449, 287,
	637, 606, 601, 205, 222, 916, 261, 917, 0, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	931, 932, 933, 934, 935, 936, 937, 938, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 956,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 520, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 749, 0,
	0, 0, 269, 754, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 760,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	756, 757, 0, 0, 0, 0, 0, 0, 2381, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 95, 0,
	0, 957, 941, 733, 907, 945, 958, 959, 960, 961,
	946, 0, 237, 947, 948, 244, 949, 0, 906, 791,
	793, 792, 856, 857, 858, 859, 860, 861, 862, 789,
	954, 962, 963, 2382, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 729, 746, 0, 759, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 743,
	744, 0, 0, 0, 0, 901, 0, 745, 0, 0,
	753, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 755, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	900, 0, 0, 616, 0, 0, 898, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 951, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 952, 953, 255, 639, 797, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	805, 806, 279, 305, 882, 881, 880, 304, 306, 878,
	879, 877, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 888, 910, 899, 765, 766, 889,
	890, 914, 891, 768, 769, 911, 912, 762, 763, 767,
	913, 915, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	902, 752, 751, 0, 758, 0, 787, 788, 790, 794,
	795, 796, 807, 854, 855, 863, 865, 866, 864, 867,
	868, 869, 872, 873, 874, 875, 870, 871, 876, 770,
	774, 771, 772, 773, 785, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 786, 925, 926, 927, 928,
	929, 930, 800, 804, 803, 801, 802, 798, 799, 826,
	825, 827, 828, 829, 830, 831, 832, 834, 833, 835,
	836, 837, 838, 839, 840, 808, 809, 812, 813, 811,
	810, 814, 823, 824, 815, 816, 817, 818, 819, 820,
	822, 821, 841, 842, 843, 844, 845, 847, 846, 850,
	851, 849, 848, 853, 852, 750, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 916, 261, 917,
	0, 0, 921, 0, 0, 0, 923, 922, 0, 924,
	886, 885, 0, 0, 918, 919, 0, 920, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 931, 932, 933, 934, 935, 936, 937, 938,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 956, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 0, 392, 372,
	568, 569, 314, 86, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 733, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 729, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 94, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 0, 921, 0, 0, 0, 923,
	922, 0, 924, 886, 885, 0, 0, 918, 919, 0,
	920, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 931, 932, 933, 934, 935,
	936, 937, 938, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 956, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 733, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	729, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 4000, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 1716, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 0, 921,
	0, 0, 0, 923, 922, 0, 924, 886, 885, 0,
	0, 918, 919, 0, 920, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 931,
	932, 933, 934, 935, 936, 937, 938, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 956, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	1049, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 931, 932, 933, 934, 935, 936, 937, 938, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	956, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 733, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 729, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 0, 921, 0, 0, 0, 923, 922, 0,
	924, 886, 885, 0, 0, 918, 919, 0, 920, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 931, 932, 933, 934, 935, 936, 937,
	938, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 956, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 733, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 729, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 3101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 0, 921, 0, 0, 0, 923,
	922, 0, 924, 886, 885, 0, 0, 918, 919, 0,
	920, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 931, 932, 933, 934, 935,
	936, 937, 938, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 956, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 733, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	729, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 3097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 0, 921, 0, 0,
	0, 923, 922, 0, 924, 886, 885, 0, 0, 918,
	919, 0, 920, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 931, 932, 933,
	934, 935, 936, 937, 938, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 956, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	1070, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 0, 921,
	0, 0, 0, 923, 922, 0, 924, 886, 885, 0,
	0, 918, 919, 0, 920, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 931,
	932, 933, 934, 935, 936, 937, 938, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 956, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 1070, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	0, 921, 0, 0, 0, 923, 922, 0, 924, 886,
	885, 0, 0, 918, 919, 0, 920, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 931, 932, 933, 934, 935, 936, 937, 938, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	956, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 1070, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 2067, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 0, 921, 0, 0, 0, 923, 922, 0,
	924, 886, 885, 0, 0, 918, 919, 0, 920, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 931, 932, 933, 934, 935, 936, 937,
	938, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 956, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 1120, 616, 0, 0, 0,
	0, 0, 1117, 1118, 361, 1078, 328, 197, 224, 1111,
	1115, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1678, 941, 0, 0,
	1675, 0, 0, 0, 0, 1673, 0, 237, 1674, 1672,
	244, 1677, 0, 906, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 0, 392, 372, 568, 569, 314, 86, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 362, 266, 0, 0, 425,
	0, 203, 0, 481, 251, 373, 370, 575, 281, 272,
	268, 249, 315, 381, 423, 510, 417, 0, 366, 0,
	0, 491, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 247,
	323, 202, 408, 492, 285, 0, 95, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 244, 0, 0, 0, 347, 356, 355,
	336, 337, 339, 341, 346, 353, 359, 0, 0, 0,
	0, 0, 264, 319, 271, 263, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 397, 256, 0, 448, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 328, 197, 224, 0, 0, 407, 456, 468, 0,
	0, 0, 252, 0, 466, 421, 594, 232, 283, 453,
	427, 464, 435, 286, 0, 0, 465, 368, 577, 445,
	591, 617, 618, 262, 401, 603, 514, 611, 635, 225,
	259, 415, 499, 597, 488, 393, 573, 574, 327, 487,
	294, 201, 365, 623, 223, 474, 367, 241, 230, 579,
	600, 288, 451, 630, 212, 509, 589, 238, 478, 0,
	0, 638, 246, 498, 214, 586, 497, 389, 324, 325,
	213, 0, 452, 267, 292, 0, 0, 257, 410, 581,
	582, 255, 639, 227, 610, 219, 0, 609, 403, 576,
	587, 390, 379, 218, 585, 388, 378, 332, 351, 352,
	279, 305, 442, 371, 443, 304, 306, 399, 398, 400,
	206, 598, 0, 207, 0, 493, 599, 640, 447, 211,
	233, 234, 236, 0, 278, 282, 290, 293, 301, 302,
	311, 363, 414, 441, 437, 446, 0, 571, 592, 604,
	615, 621, 622, 624, 625, 626, 627, 628, 631, 629,
	402, 309, 489, 331, 369, 0, 0, 420, 467, 239,
	596, 490, 199, 0, 0, 0, 0, 253, 254, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 636, 500,
	506, 501, 502, 503, 504, 505, 0, 507, 0, 0,
	0, 0, 0, 0, 583, 584, 659, 380, 480, 593,
	333, 345, 348, 338, 357, 0, 358, 334, 335, 340,
	342, 343, 344, 349, 350, 354, 360, 248, 209, 386,
	394, 570, 310, 215, 216, 217, 516, 517, 518, 519,
	607, 608, 612, 204, 457, 458, 459, 460, 291, 602,
	307, 463, 462, 329, 330, 375, 444, 532, 534, 545,
	549, 551, 553, 559, 562, 533, 535, 546, 550, 552,
	554, 560, 563, 522, 524, 526, 528, 541, 540, 537,
	565, 566, 543, 548, 527, 539, 544, 557, 564, 561,
	521, 525, 529, 538, 556, 555, 536, 547, 558, 542,
	530, 523, 531, 0, 196, 220, 364, 94, 449, 287,
	637, 606, 601, 205, 222, 0, 261, 0, 0, 0,
	0, 0, 0, 2368, 0, 0, 2367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1735, 0, 372, 568, 569,
	314, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 1737, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 362, 266, 0,
	0, 425, 0, 203, 0, 481, 251, 373, 370, 575,
	281, 272, 268, 249, 315, 381, 423, 510, 417, 0,
	366, 0, 0, 491, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 247, 323, 202, 408, 492, 285, 0, 0, 0,
	0, 1739, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 244, 0, 0, 0, 347,
	356, 355, 336, 337, 339, 341, 346, 353, 359, 0,
	0, 0, 0, 0, 264, 319, 271, 263, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 1451, 0, 1452, 1453, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 397, 256, 0, 448,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 328, 197, 224, 0, 0, 407, 456,
	468, 0, 0, 0, 252, 0, 466, 421, 594, 232,
	283, 453, 427, 464, 435, 286, 0, 0, 465, 368,
	577, 445, 591, 617, 618, 262, 401, 603, 514, 611,
	635, 225, 259, 415, 499, 597, 488, 393, 573, 574,
	327, 487, 294, 201, 365, 623, 223, 474, 367, 241,
	230, 579, 600, 288, 451, 630, 212, 509, 589, 238,
	478, 0, 0, 638, 246, 498, 214, 586, 497, 389,
	324, 325, 213, 0, 452, 267, 292, 0, 0, 257,
	410, 581, 582, 255, 639, 227, 610, 219, 0, 609,
	403, 576, 587, 390, 379, 218, 585, 388, 378, 332,
	351, 352, 279, 305, 442, 371, 443, 304, 306, 399,
	398, 400, 206, 598, 0, 207, 0, 493, 599, 640,
	447, 211, 233, 234, 236, 0, 278, 282, 290, 293,
	301, 302, 311, 363, 414, 441, 437, 446, 0, 571,
	592, 604, 615, 621, 622, 624, 625, 626, 627, 628,
	631, 629, 402, 309, 489, 331, 369, 0, 0, 420,
	467, 239, 596, 490, 199, 0, 0, 0, 0, 253,
	254, 0, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	636, 500, 506, 501, 502, 503, 504, 505, 0, 507,
	0, 0, 0, 0, 0, 0, 583, 584, 659, 380,
	480, 593, 333, 345, 348, 338, 357, 0, 358, 334,
	335, 340, 342, 343, 344, 349, 350, 354, 360, 248,
	209, 386, 394, 570, 310, 215, 216, 217, 516, 517,
	518, 519, 607, 608, 612, 204, 457, 458, 459, 460,
	291, 602, 307, 463, 462, 329, 330, 375, 444, 532,
	534, 545, 549, 551, 553, 559, 562, 533, 535, 546,
	550, 552, 554, 560, 563, 522, 524, 526, 528, 541,
	540, 537, 565, 566, 543, 548, 527, 539, 544, 557,
	564, 561, 521, 525, 529, 538, 556, 555, 536, 547,
	558, 542, 530, 523, 531, 0, 196, 220, 364, 0,
	449, 287, 637, 606, 601, 205, 222, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 0, 392, 372,
	568, 569, 314, 86, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 1716, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 94, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	2368, 0, 0, 2367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 2318, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 1918, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 2316, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 1078, 328, 197, 224, 1076, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 2318, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1918, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 1716, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	3910, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 2078, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 2811, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 2796, 0, 0, 0,
	0, 237, 0, 0, 244, 2797, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 1758, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1757, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 709, 710, 711, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 4033, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 1918, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 3910, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1739, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 2030, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	2021, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 1885, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1883, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1881, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1879, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1877, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 1873, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1871, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1869, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 1844, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	1743, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 404, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1430, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 1429, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1030, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 392, 0, 372, 568, 569, 314, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 662, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 208,
	221, 231, 235, 242, 260, 275, 277, 284, 297, 308,
	316, 317, 320, 326, 376, 382, 383, 384, 385, 404,
	405, 406, 409, 412, 413, 416, 418, 419, 422, 426,
	430, 431, 432, 434, 436, 438, 450, 455, 469, 470,
	471, 472, 473, 476, 477, 482, 483, 484, 485, 486,
	494, 495, 508, 578, 580, 595, 613, 619, 475, 299,
	300, 439, 440, 312, 313, 633, 634, 298, 590, 620,
	588, 632, 614, 433, 374, 0, 0, 377, 280, 303,
	318, 0, 605, 496, 226, 461, 289, 250, 0, 0,
	210, 245, 229, 258, 273, 276, 322, 387, 395, 424,
	429, 295, 270, 243, 454, 240, 479, 511, 512, 513,
	515, 391, 265, 428, 392, 0, 372, 568, 569, 314,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 208, 221, 231, 235, 242, 260, 275, 277, 284,
	297, 308, 316, 317, 320, 326, 376, 382, 383, 384,
	385, 4041, 405, 406, 409, 412, 413, 416, 418, 419,
	422, 426, 430, 431, 432, 434, 436, 438, 450, 455,
	469, 470, 471, 472, 473, 476, 477, 482, 483, 484,
	485, 486, 494, 495, 508, 578, 580, 595, 613, 619,
	475, 299, 300, 439, 440, 312, 313, 633, 634, 298,
	590, 620, 588, 632, 614, 433, 374, 0, 0, 377,
	280, 303, 318, 0, 605, 496, 226, 461, 289, 250,
	0, 0, 210, 245, 229, 258, 273, 276, 322, 387,
	395, 424, 429, 295, 270, 243, 454, 240, 479, 511,
	512, 513, 515, 391, 265, 428, 392, 0, 372, 568,
	569, 314, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 208, 221, 231, 235, 242, 260, 275,
	277, 284, 297, 308, 316, 317, 320, 326, 376, 382,
	383, 384, 385, 404, 405, 406, 409, 412, 413, 416,
	418, 419, 422, 426, 430, 431, 432, 434, 436, 438,
	450, 455, 469, 470, 471, 472, 473, 476, 477, 482,
	483, 484, 485, 486, 494, 495, 508, 578, 580, 595,
	613, 619, 475, 299, 300, 439, 440, 312, 313, 633,
	634, 298, 590, 620, 588, 632, 614, 433, 374, 0,
	0, 377, 280, 303, 318, 0, 605, 496, 226, 461,
	289, 250, 0, 0, 210, 245, 229, 258, 273, 276,
	322, 387, 395, 424, 429, 295, 270, 243, 454, 240,
	479, 511, 512, 513, 515, 391, 265, 428, 392, 0,
	372, 568, 569, 314, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 941, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 208, 221, 231, 235, 242,
	260, 275, 277, 284, 297, 308, 316, 317, 320, 326,
	376, 382, 383, 384, 385, 404, 405, 406, 409, 412,
	413, 416, 418, 419, 422, 426, 430, 431, 432, 434,
	436, 438, 450, 455, 469, 470, 471, 472, 473, 476,
	477, 482, 483, 484, 485, 486, 494, 495, 508, 578,
	580, 595, 613, 619, 475, 299, 300, 439, 440, 312,
	313, 633, 634, 298, 590, 620, 588, 632, 614, 433,
	374, 0, 0, 377, 280, 303, 318, 0, 605, 496,
	226, 461, 289, 250, 0, 0, 210, 245, 229, 258,
	273, 276, 322, 387, 395, 424, 429, 295, 270, 243,
	454, 240, 479, 511, 512, 513, 515, 391, 265, 428,
	392, 0, 372, 568, 569, 314, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 208, 221, 231,
	235, 242, 260, 275, 277, 284, 297, 308, 316, 317,
	320, 326, 376, 382, 383, 384, 385, 404, 405, 406,
	409, 412, 413, 416, 418, 419, 422, 426, 430, 431,
	432, 434, 436, 438, 450, 455, 469, 470, 471, 472,
	473, 476, 477, 482, 483, 484, 485, 486, 494, 495,
	508, 578, 580, 595, 613, 619, 475, 299, 300, 439,
	440, 312, 313, 633, 634, 298, 590, 620, 588, 632,
	614, 433, 374, 0, 0, 377, 280, 303, 318, 0,
	605, 496, 226, 461, 289, 250, 0, 0, 210, 245,
	229, 258, 273, 276, 322, 387, 395, 424, 429, 295,
	270, 243, 454, 240, 479, 511, 512, 513, 515, 391,
	265, 428, 0, 0, 372, 568, 569, 314,
}

var yyPact = [...]int{
	-1000, -1000, 5194, -1000, -526, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2377, 2433, -1000, -1000, -1000, -1000, 2570, -1000, 995,
	2053, -1000, 2322, 4949, -1000, 54716, 509, -1000, 51828, 508,
	869, 239, 35944, -1000, 190, -1000, 177, 53272, 182, -1000,
	-1000, -1000, -1000, -435, 21502, 2254, 66, 59, 54716, -1000,
	-1000, -1000, -1000, -350, 2520, 2005, -1000, 411, -1000, -1000,
	-1000, -1000, -1000, -1000, 51106, -1000, 1083, -1000, -1000, 2332,
	2297, 2563, 918, 2259, -1000, 2434, 2005, -1000, 21502, 2500,
	2390, 20780, 20780, 462, -1000, -1000, 266, -1000, -1000, 30890,
	54716, 38832, 313, -1000, 2322, -1000, -1000, -1000, 203, -1000,
	346, 1917, -1000, 1915, -1000, 1072, 461, 415, 484, 460,
	414, 412, 404, 377, 374, 364, 361, 354, 421, -1000,
	936, 936, -192, -202, 1345, 474, 457, 457, 987, 496,
	2288, 2279, -1000, -1000, 936, 936, 936, 381, 936, 936,
	936, 936, 314, 304, 936, 936, 936, 936, 936, 936,
	936, 936, 936, 936, 936, 936, 936, 936, 936, 936,
	936, 909, 2322, 280, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54716, 183, 54716, -1000, 811, 54716, -439, 1093, 1093, 89,
	1093, 1093, 1093, 1093, 188, 965, 57, -1000, 187, 258,
	174, 276, 1085, 309, -1000, -1000, 260, 1085, 1699, -1000,
	924, 268, 175, -1000, 1093, 1093, -1000, 14257, 209, 14257,
	14257, -1000, 2306, -1000, -1000, -1000, -1000, -1000, 1287, -1000,
	-1000, -1000, -1000, -20, 492, -1000, -1000, -1000, -1000, 53272,
	50384, 263, -1000, -1000, 348, -1000, -1000, 1809, 1265, 21502,
	1568, 912, -1000, -1000, 1404, 874, -1000, -1000, -1000, -1000,
	-1000, 799, -1000, 23668, 23668, 23668, 23668, -1000, -1000, 1788,
	49662, 1788, 1788, 23668, 1788, 23668, 1788, 1788, 1788, 21502,
	1788, 1788, 1788, 1788, -1000, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, -1000, -1000, -1000, -1000, 1788, 810, 1788, 1788,
	1788, 1788, 1788, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1788, 1788, 1788, 1788, 1788, 1788, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26556, 1433, 1431, 1401, -1000, 18614, 1788, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 54716, -1000, 1788,
	211, 53272, 53272, 409, 1282, -1000, -1000, 2434, 2005, -1000,
	2520, 2532, 411, -1000, 3061, 1936, 1521, 1351, 2005, 1880,
	54716, -1000, 1947, -1000, -1000, -1000, -1000, 2151, 1360, 1697,
	-1000, -1000, -1000, -1000, 2676, 21502, -1000, -1000, 2550, -1000,
	28001, 809, 2549, 48940, -1000, 462, 462, 1910, 406, 5,
	-1000, -1000, -1000, -1000, 947, 35222, -1000, -1000, -1000, -1000,
	-1000, 1784, 54716, -1000, -1000, 4118, 1292, -1000, 2052, -1000,
	1774, -1000, 1998, 21502, 2012, 507, 1292, 501, 500, 490,
	-1000, -54, -1000, -1000, -1000, -1000, -1000, -1000, 936, 936,
	936, -1000, 416, 2495, 4949, 5032, -1000, -1000, -1000, 48218,
	2051, 1292, -1000, 2050, -1000, 1012, 872, 856, 856, 1292,
	-1000, -1000, 53994, 1292, 1009, 1008, 1292, 1292, 53272, 53272,
	-1000, 47496, -1000, 46774, 46052, 1280, 53272, 45330, 44608, 43886,
	43164, 42442, -1000, 2143, -1000, 2035, -1000, -1000, -1000, 53994,
	1292, 1292, 53994, 53272, 53994, 54716, 1292, -1000, -1000, 356,
	-1000, -1000, 1272, 1270, 1263, 936, 936, 1259, 1669, 1667,
	1649, 936, 936, 1256, 1599, 37388, 1570, 303, 1253, 1244,
	1241, 1245, 1567, 282, 1563, 1236, 1177, 1234, 53272, 2046,
	54716, -1000, 238, 943, 984, 946, 2322, 2233, 1908, 489,
	505, 1292, 466, 466, 53272, -1000, 14985, -1000, 227, -1000,
	1545, 21502, -1000, 1089, 1085, 1085, -1000, -1000, -1000, -1000,
	-1000, -1000, 1093, 54716, 1089, -1000, -1000, -1000, 1085, 1093,
	54716, 1093, 1093, 1093, 1093, 1085, 1085, 1085, 1093, 54716,
	54716, 54716, 54716, 54716, 54716, 54716, 54716, 54716, 14257, 924,
	1093, -440, -1000, 1526, -1000, -1000, 2150, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14257, 14257, -1000, -1000, -1000, -1000,
	-1000, 1907, -1000, 173, 26, 180, -1000, 41720, 494, 944,
	-1000, 494, -1000, -1000, -1000, 1886, 40998, -1000, -443, -444,
	-445, -448, -1000, -1000, -1000, -450, -451, -1000, -1000, -1000,
	21502, 21502, 21502, 21502, -246, -1000, 1441, 23668, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21502, 217, 961, 23668, 23668,
	23668, 23668, 23668, 23668, 23668, 25112, 24390, 23668, 23668, 23668,
	23668, 23668, 23668, -1000, -1000, 33056, 6822, 6822, 874, 874,
	874, 874, -1000, -163, 1884, 53994, -1000, -1000, -1000, 807,
	21502, 21502, 874, -1000, 1292, 4048, 18614, 20780, 20780, 21502,
	957, 1265, 53994, 21502, -1000, 1351, -1000, -1000, -1000, -1000,
	1176, -1000, -1000, 1034, 2301, 2301, 2301, 2301, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 2301, 21502,
	820, 820, 214, 21502, 21502, 21502, 21502, 21502, 21502, 17169,
	21502, 21502, 23668, 21502, 21502, 21502, 1351, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 1351, 21502, 1106, 21502,
	21502, 21502, 21502, 21502, 21502, 20780, 16441, 20780, 20780, 20780,
	20780, 20780, -1000, -1000, -1000, -1000, -1000, -1000, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, 1351, 21502, 21502, 21502,
	21502, 21502, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1465, 1509, 1503, 21502, -1000, 1881, -1000, -183,
	30168, 21502, 1524, 2547, 2070, 53272, -1000, -1000, -1000, -1000,
	2434, -1000, 2434, 1465, 2957, 2155, 20780, -1000, -1000, 2957,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1748, -1000,
	54716, 1880, 2375, 53272, 2147, 1522, 342, -1000, 21502, 21502,
	1877, -1000, 1193, 54716, -1000, -246, -1000, 40276, -1000, -1000,
	13529, 54716, 349, 54716, -1000, 29446, 39554, 273, -1000, 5,
	1851, -1000, 36, 23, 17891, 871, -1000, -1000, -1000, 1345,
	25834, 1790, 871, 112, -1000, -1000, -1000, 1998, -1000, 1998,
	1998, 1998, 1998, 342, 342, 342, 342, -1000, -1000, -1000,
	-1000, -1000, 2043, 2042, -1000, 1998, 1998, 1998, 1998, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2034, 2034, 2034, 2027,
	2027, 2000, 2000, 445, -1000, 21502, 469, 38832, 2331, 1233,
	1792, 238, 475, 2067, 1292, 1292, 1292, 475, -1000, 1335,
	1327, 1321, -1000, -515, 1874, -1000, -1000, 2494, -1000, -1000,
	1109, 1040, 1038, 913, 53272, 219, 336, -1000, 454, -1000,
	38832, 1292, 1005, 856, 1292, -1000, 1292, -1000, -1000, -1000,
	-1000, -1000, 1292, -1000, -1000, 1871, -1000, 1883, 1100, 1031,
	1065, 1029, 1871, -1000, -1000, -170, 1871, -1000, 1871, -1000,
	1871, -1000, 1871, -1000, 1871, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 989, 305, -327, 53272, 219, 487,
	-1000, 486, 33056, -1000, -1000, -1000, 33056, 33056, -1000, -1000,
	-1000, -1000, 1513, 1506, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -498, 54716, -1000, 229, 940, 320, 399,
	285, 54716, 286, 2422, 2411, 2404, 2397, 2337, 307, 300,
	54716, 54716, 466, 2113, 54716, 2352, 54716, -1000, -1000, -1000,
	-1000, 1498, 1494, -1000, 1265, 54716, -1000, -1000, 1093, 1093,
	-1000, -1000, 54716, 1093, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54716, -1000,
	-1000, -1000, -1000, -20, 169, -1000, -1000, 53272, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -66, -1000, 771,
	32, 371, -1000, -1000, -1000, -1000, -1000, 2428, -1000, 1265,
	993, 996, -1000, 1788, -1000, -1000, 1242, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 217, 23668, 23668, 23668, 1456,
	826, 1476, 1331, 1136, 1543, 1543, 1200, 23668, 1200, 23668,
	878, 878, 878, 878, 878, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1491, -1000, 1788, 53994, 1742, 16441, 2954,
	2185, 1351, 907, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3822, 1740, -1000, 1740, 1516, 963, -1000,
	21502, 1351, 3817, -1000, -1000, 1351, 1351, 21502, -1000, -1000,
	21502, 21502, 21502, 21502, 1792, 1792, 1792, 1792, 1792, 1792,
	1792, 1792, 1792, 1792, 21502, 1792, 1866, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1865, 2545, 2617, 1792, 1792,
	1792, 1792, 1792, 21502, 1548, -1000, -1000, -1000, 1359, 3813,
	1344, 3517, 1792, 1792, -1000, 1792, 3506, 3470, 1351, 1809,
	2642, 2638, 1792, 1792, 1792, 1792, 1792, 2626, 2613, 1792,
	1792, 2600, 1792, 3456, 1792, 2525, 2521, 2513, 2482, 2457,
	2453, 2449, 2435, 2416, 2412, 2354, 2349, 2345, 2334, 2330,
	2305, 2289, 2284, 1792, 1792, 1792, 3432, 1792, 3426, 1792,
	3419, 1792, 1792, 3405, 2248, 2244, 1351, 1861, -1000, 3398,
	1792, 3392, 3383, 3366, 2224, 3359, 3355, 3349, 1792, 1792,
	1792, 2208, 3341, 3330, 3326, 3315, 3298, 3292, 3285, 3279,
	3270, 1792, 1503, 1503, 1503, 1503, 1503, 3264, -254, 1792,
	1351, -1000, -1000, -1000, -1000, -1000, 3258, 2201, 3196, 3024,
	3004, 2980, 1351, 1855, 1788, 805, -1000, -1000, 1740, 1351,
	1351, 1740, 1740, 2975, 2968, 2948, 2938, 2898, 2889, 1792,
	1792, -1000, 1792, 2877, 2872, 2176, 2165, 1351, -1000, 1503,
	54716, -1000, -422, -1000, 6, 941, 1788, -1000, 37388, 1351,
	-1000, 4328, -1000, 1113, -1000, -1000, -1000, -1000, -1000, 34500,
	1862, 2957, -1000, -1000, 1788, 1736, -1000, -1000, 342, 85,
	33778, 865, 865, 119, 1265, 1265, 21502, -1000, -1000, -1000,
	-1000, -1000, -1000, 804, 2518, 396, 1788, -1000, 1863, 2976,
	-1000, -1000, -1000, 2371, 27279, -1000, -1000, 1788, 1788, 54716,
	1777, 1686, -1000, 803, -1000, 1298, 1851, 5, 12, -1000,
	-1000, -1000, -1000, 1265, -1000, 1319, 351, 359, -1000, 467,
	-1000, -1000, -1000, -1000, 2270, 93, -1000, -1000, -1000, 829,
	342, -1000, -1000, -1000, -1000, -1000, -1000, 1478, 1478, -1000,
	-1000, -1000, -1000, -1000, 1221, -1000, -1000, -1000, -1000, 1220,
	-1000, -1000, 1218, -1000, -1000, 2491, 2064, 469, -1000, -1000,
	936, 1469, -1000, -1000, 2274, 936, 936, 53272, -1000, -1000,
	1787, 2331, 229, 54716, 951, 2111, -1000, 2067, 2067, 2067,
	54716, -1000, -1000, -1000, -1000, -1000, -1000, -506, 164, 589,
	-1000, -1000, -1000, 2001, 53272, 1731, -1000, 208, -1000, 1743,
	-1000, 53272, -1000, 1722, 2014, 1292, 1292, -1000, -1000, -1000,
	53272, 1788, -1000, -1000, -1000, -1000, 504, 2320, 337, -1000,
	-1000, -284, -1000, -1000, 219, 208, 53994, 1292, 871, -1000,
	-1000, -1000, -1000, -1000, -501, 1718, 498, 218, 488, 54716,
	54716, 54716, 54716, 54716, 782, -1000, -1000, 46, -1000, -1000,
	199, -1000, -1000, -1000, -1000, 199, -1000, -1000, -1000, -1000,
	287, 481, -1000, 54716, 54716, 919, -1000, -1000, -1000, -1000,
	-1000, 1085, -1000, -1000, 1085, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2313, 54716, 30,
	-471, -1000, -466, 21502, -1000, -1000, -1000, -1000, 1226, 822,
	1476, 23668, 23668, 4048, 4048, 23668, -1000, -1000, -1000, 768,
	768, 33056, -1000, 23668, 21502, 20780, -1000, -1000, 21502, 21502,
	942, -1000, 21502, 1182, -1000, 21502, -1000, -254, 1503, 1792,
	1792, 1792, 1792, -254, -254, -254, -254, -254, -254, -254,
	-254, -254, -254, 1795, -1000, 21502, 21502, 21502, 1351, 330,
	-1000, -1000, -1000, -1000, -1000, 2542, -1000, 21502, -1000, 33056,
	21502, 21502, 21502, -1000, -1000, -1000, 21502, 21502, -1000, -1000,
	21502, -1000, 21502, -1000, -1000, -1000, -1000, -1000, -1000, 21502,
	-1000, 21502, -1000, -1000, -1000, 21502, -1000, 21502, -1000, -1000,
	21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000,
	21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000,
	21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000,
	21502, -1000, 21502, -1000, 21502, -1000, -1000, -1000, 21502, -1000,
	21502, -1000, 21502, -1000, -1000, 21502, -1000, 21502, -1000, 21502,
	-1000, 21502, 21502, -1000, 21502, 21502, 21502, -1000, 21502, 21502,
	21502, 21502, -1000, -1000, -1000, -1000, 21502, 21502, 21502, 21502,
	21502, 21502, 21502, 21502, 21502, 21502, -1000, -1000, -1000, -1000,
	-1000, -1000, 21502, -1000, 38832, 74, -254, 1106, 74, 1106,
	22946, 814, 813, 22224, -1000, 20780, 15713, -1000, -1000, -1000,
	-1000, -1000, 21502, 21502, 21502, 21502, 21502, 21502, -1000, -1000,
	-1000, 21502, 21502, -1000, 21502, -1000, 21502, -1000, -1000, -1000,
	-1000, -1000, 941, -1000, 856, 856, 856, 53272, -1000, -1000,
	-1000, -1000, 1848, -1000, 2402, -1000, 2179, 2161, 2535, 2518,
	-1000, 29446, 2957, -1000, -1000, 53272, -390, -1000, 2219, 2273,
	865, 865, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12801,
	2434, 21502, 2110, 53994, 210, -1000, 28724, 53272, 53994, 29446,
	29446, 29446, 29446, 29446, -1000, 2130, 2127, -1000, 2142, 2139,
	2214, 54716, -1000, 1465, 1711, -1000, 21502, 31612, 1838, 29446,
	-1000, -1000, 29446, 54716, 12073, -1000, -1000, 29, 17, -1000,
	-1000, -1000, -1000, 1345, -1000, -1000, 1517, 2363, 2262, -1000,
	-1000, -1000, -1000, -1000, 1696, -1000, 1694, 1841, 1692, 1682,
	305, -1000, 1941, 2312, 936, 936, -1000, 1197, -1000, 1292,
	1467, 1463, -1000, -1000, -1000, 485, -1000, 2344, 54716, 2108,
	2106, 2105, -1000, -514, 1194, 2010, 1934, 21502, 2006, 2487,
	1832, 53272, -1000, -1000, 53994, -1000, 283, -1000, 469, 53272,
	-1000, -1000, -1000, 336, 54716, -1000, 6139, -1000, -1000, -1000,
	208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 54716, 232,
	-1000, 2002, 1204, -1000, -1000, 2037, -1000, -1000, -1000, -1000,
	200, 289, 1457, 192, 1448, 192, -1000, 54716, 898, 2064,
	54716, -1000, -1000, -1000, 1093, 1093, -1000, -1000, 2311, -1000,
	1292, 1792, 23668, 23668, -1000, 874, -1000, -1000, 367, -216,
	1998, 1998, -1000, 1998, 2000, -1000, 1998, 165, 1998, 154,
	1998, -1000, -1000, 1351, 1351, -1000, 1503, -1000, 2152, 1611,
	-1000, 1265, 21502, 2863, -1000, -1000, -254, -254, -254, -254,
	-254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -60, 2819, 2807, 1792, -1000, 1997, 1995, 21502, 1792,
	1351, 2137, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
	1792, 1792, 1792, 1792, 2132, 2128, 2119, 2107, 2103, 2028,
	2024, 2015, 2011, 2007, 1948, 1938, 1933, 1929, 1918, 1842,
	1792, 1792, 1835, 1792, 1818, 1761, -1000, 1265, 1503, 2803,
	1503, 1792, 1792, 2763, 290, 1792, 1680, 1680, 1680, 1680,
	1680, 1503, 1503, 1503, 1503, 1792, 53272, -1000, -254, -1000,
	-1000, -287, -307, -1000, 1351, -254, 1839, 23668, 1792, 23668,
	23668, 23668, 1792, 1351, -1000, 1728, 1724, 2757, 1705, 1792,
	2650, 1792, 1792, 1792, 1661, -1000, 2426, 2426, 2426, 1673,
	1113, 54716, -1000, -1000, -1000, -1000, 2518, 2516, 1833, -1000,
	-1000, 85, 623, -1000, 2250, 2273, -1000, 2486, 2207, 2478,
	-1000, -1000, -1000, -1000, -1000, 1265, -1000, 2324, 1823, -1000,
	939, 1817, -1000, -1000, 20058, 1678, 2160, 798, 1673, 1837,
	2976, 2066, 2102, 2335, -1000, -1000, -1000, -1000, 2126, -1000,
	2117, -1000, -1000, 1947, -1000, 2370, 349, 29446, 1786, 1786,
	-1000, 789, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1062,
	8370, 2560, -1000, 1443, -1000, 1312, 205, 1168, -1000, -1000,
	936, 936, -1000, 1004, 1002, -1000, 54716, 1992, -1000, 342,
	1436, 342, 1164, -1000, -1000, 1142, -1000, -1000, -1000, -1000,
	1909, 2120, -1000, -1000, -1000, -1000, 54716, -1000, -1000, 54716,
	54716, 54716, 1987, 2473, -1000, 21502, 1975, 937, 2376, 53272,
	53272, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 419, 936, -482, 293, 292, 936, 936, 936,
	-521, -1000, -1000, 1654, 1645, -1000, -196, -1000, 21502, -1000,
	-1000, -1000, 1249, 1249, 1433, 1431, 1401, -1000, 1947, -1000,
	-1000, -1000, 1706, -1000, -1000, -180, 53272, 53272, 53272, 53272,
	-1000, -1000, 1098, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 874, 1351, 395, -182, 1351,
	-1000, -1000, 342, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21502, -1000, 21502, -1000, 1265, 21502, -1000,
	-1000, -1000, -1000, -1000, 2434, 1397, 21502, 21502, -1000, 1119,
	1111, 1792, -1000, -1000, -1000, 21502, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21502,
	-1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502,
	-1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502,
	-1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502, -1000, 21502,
	-1000, -1000, 21502, -1000, -1000, -1000, 21502, -1000, 21502, -1000,
	21502, -1000, -1000, -1000, 21502, 274, 768, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1351, 343,
	-1000, -1000, -1000, -1000, 2533, -1000, 1351, 21502, 4048, -1000,
	4048, 4048, 4048, -1000, -1000, -1000, 21502, -1000, 21502, 21502,
	-1000, 21502, -1000, 21502, -1000, -1000, -1000, -1000, 21502, 1788,
	2215, 1788, 1788, 31612, -1000, -1000, 2516, 2512, 2470, 2190,
	2186, 2186, 2250, -1000, 2463, 2459, -1000, 1393, 2458, 1390,
	999, -1000, 53994, 21502, 210, -1000, 407, 53272, 210, 53272,
	-1000, 2483, -1000, -1000, 21502, 1958, -1000, 21502, -1000, -1000,
	-1000, -1000, 6822, 2518, 1786, -1000, -1000, 884, -1000, 21502,
	-1000, -1000, -1000, 10099, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1385, 1379, -1000, -1000, 1952, 21502, -1000, -1000,
	-1000, 1655, 1646, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1947, -1000, -1000, -1000, -1000, 336, -510, 2020, 53272,
	1107, -1000, 1641, 1832, 288, 210, 1377, 936, 936, 936,
	1103, 1091, 37388, 1619, -1000, 53272, 425, -1000, 336, -1000,
	-203, -205, 1792, -1000, -1000, 2359, -1000, -1000, 15713, -1000,
	-1000, 1944, 2044, -1000, -1000, -1000, -1000, 2141, -166, -188,
	-1000, -1000, 1792, 1792, 1293, 1351, -1000, 1792, 1792, 1642,
	1518, -1000, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
	1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
	1792, 1792, 1503, 1648, -1000, 274, 1351, 2101, -1000, -1000,
	6822, -1000, -1000, 2483, 2448, 74, -1000, -1000, 213, 74,
	1265, 994, 1351, 1351, 994, 1605, 1792, 1598, 1447, 1792,
	1792, 32334, -1000, 2447, 2436, 38110, 38110, 941, 2512, -263,
	21502, 21502, 2183, 1137, -1000, -1000, -1000, -1000, 1362, 1355,
	-1000, 1341, -1000, 2534, -1000, 1265, -1000, 210, -1000, 542,
	1817, -1000, 2434, 1265, 53272, 1265, 84, 2483, -1000, 1792,
	-1000, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
	-1000, -1000, 53272, 1898, -1000, -1000, 2355, 1616, 163, -1000,
	1504, 1832, -1000, -1000, 206, -1000, 21502, -1000, 37388, 1329,
	1323, -1000, -1000, -1000, -1000, -521, -1000, -1000, -1000, -1000,
	-1000, -1000, 411, 1829, -1000, 933, 53272, 54716, -1000, 2140,
	-1000, -1000, -1000, 21502, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21502, -1000, 1351, 2100, -1000, -358, -1000, -487, 21502,
	-254, -1000, -1000, -254, -1000, -1000, -1000, -1000, -1000, 21502,
	-1000, -1000, 21502, -1000, 21502, -1000, -1000, 1574, -1000, -1000,
	-1000, -1000, -1000, 1574, 1574, -1000, -263, -1000, 1824, -1000,
	53272, 1265, 1809, -1000, 1097, -1000, -1000, -1000, -1000, -1000,
	53994, 1817, 53272, -1000, 1550, 1351, 1788, 2434, -1000, 1544,
	-1000, 411, -1000, 1943, 1934, -1000, -1000, -1000, 19336, -1000,
	-1000, -1000, -1000, -1000, 198, -177, 15713, 11345, 1512, -1000,
	-175, 1792, 1503, -1000, -458, -1000, -1000, -1000, -1000, 254,
	-1000, -1000, 1809, -1000, -1000, 1440, 1382, 1350, 36666, -1000,
	-1000, -1000, -1000, -263, -1000, -1000, 2350, -1000, -1000, 1336,
	-1000, -1000, 31612, 52550, -1000, -161, 298, -177, 21502, 1942,
	1351, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -32,
	-1000, -1000, 531, -1000, -1000, -1000, 2037, -184, -1000, -1000,
	-1000, 291, -474, -285, -289, 23668, -1000, 21502, -1000, 21502,
	-1000, 21502, -1000, -1000, -1000, 53272, 1788, -1000, 1369, -1000,
	4008, -318, 2097, -1000, -77, -1000, -1000, -1000, 1060, 1294,
	-1000, -1000, -1000, -1000, -1000, -1000, 1805, 53272, -1000, 443,
	-1000, -1000, 14985, -180, -194, 971, -1000, -1000, -1000, -1000,
	-1000, 4048, 1339, 1334, 1792, -1000, 53272, -1000, 52550, -312,
	871, 6822, -1000, 2095, 2084, 2530, -1000, -1000, -1000, -1000,
	-1000, -1000, -523, 1366, 234, -1000, -1000, -1000, 291, -301,
	-1000, 21502, -1000, 21502, -1000, 1351, -1000, -1000, 2343, 84,
	-1000, 2522, -1000, 2555, 923, 923, -1000, 1088, -523, -1000,
	-1000, -1000, -1000, 1792, 1792, -1000, -321, -1000, -1000, -1000,
	-1000, -1000, 440, 1139, -1000, -1000, -1000, -1000, -1000, 6822,
	-1000, -1000, -1000, 264, 264, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3163, 3162, 28, 12, 38, 37, 3160, 3149, 3148,
	174, 3145, 3143, 3140, 3139, 3138, 3136, 2626, 2620, 2615,
	3135, 3134, 3133, 3131, 3124, 3119, 3116, 3114, 3113, 40,
	96, 27, 104, 217, 210, 3109, 176, 163, 201, 3106,
	3105, 3101, 117, 194, 79, 85, 196, 3099, 3095, 73,
	3093, 3089, 3087, 191, 190, 188, 1057, 3084, 183, 111,
	50, 3083, 3082, 3079, 3072, 3071, 3070, 3069, 3067, 3066,
	3065, 3064, 3060, 3055, 3053, 3048, 3039, 3037, 3035, 291,
	3027, 3024, 15, 3016, 75, 3011, 3010, 3007, 3004, 3002,
	8, 2999, 2997, 29, 32, 66, 2993, 2992, 46, 2985,
	2983, 2978, 2974, 2973, 76, 2967, 16, 2966, 41, 2964,
	2957, 124, 2955, 2954, 2953, 42, 2948, 2944, 2940, 13,
	164, 2939, 2935, 143, 2926, 2922, 2920, 171, 203, 2919,
	2918, 175, 106, 108, 2916, 2915, 98, 193, 2914, 120,
	2910, 2904, 2896, 154, 2894, 3219, 2892, 63, 64, 2887,
	199, 2886, 2885, 197, 67, 14, 7, 20, 2884, 2882,
	62, 69, 2879, 116, 2878, 2875, 99, 71, 2871, 95,
	102, 2870, 2869, 25, 6, 2865, 4, 2, 5, 80,
	2863, 2856, 114, 2855, 2852, 2849, 91, 2848, 2847, 4309,
	2846, 87, 133, 100, 84, 2838, 170, 130, 2835, 2828,
	2826, 2824, 2822, 51, 2821, 2820, 2817, 142, 254, 168,
	2813, 144, 354, 53, 146, 2810, 189, 78, 200, 173,
	2809, 2808, 141, 129, 2806, 2805, 58, 165, 187, 2804,
	94, 128, 119, 177, 93, 135, 2803, 2800, 57, 61,
	2799, 2798, 2797, 2796, 172, 2794, 2791, 60, 2789, 55,
	2788, 185, 2787, 138, 72, 2786, 169, 167, 2777, 140,
	2776, 2773, 65, 101, 110, 39, 2772, 159, 162, 125,
	166, 2771, 2765, 54, 2763, 2762, 2758, 198, 305, 2754,
	2752, 307, 180, 147, 151, 89, 2751, 322, 2749, 2748,
	19, 4964, 7273, 2746, 17, 161, 2744, 2741, 6999, 45,
	44, 24, 2739, 205, 2737, 2736, 2733, 2732, 209, 204,
	105, 160, 56, 2729, 2728, 2725, 68, 2724, 2723, 2718,
	2717, 2716, 2697, 70, 36, 35, 34, 218, 59, 9,
	97, 182, 156, 77, 2696, 2695, 2693, 123, 83, 2692,
	158, 157, 132, 126, 2691, 181, 148, 131, 2690, 90,
	33, 2685, 2684, 2683, 2681, 92, 2669, 2666, 2662, 2659,
	155, 149, 121, 81, 2658, 82, 118, 152, 150, 52,
	2657, 48, 2651, 2650, 31, 195, 26, 2649, 47, 103,
	112, 2647, 6438, 186, 2645, 11, 320, 153, 2644, 2640,
	10, 18, 21, 2639, 2638, 2636, 2632, 139, 2628, 2627,
	2616, 2611, 23, 49, 22, 1, 109, 74, 2605, 2598,
	145, 2594, 2590, 2586, 0, 1015, 127, 2585, 202,
}

//line sql.y:8575
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 412, 413, 413, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 259, 382, 383, 383, 257, 257, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 29, 29, 29, 29, 30, 30, 30, 30,
	30, 15, 16, 34, 34, 17, 17, 109, 109, 18,
	19, 19, 19, 19, 416, 416, 184, 184, 182, 182,
	183, 183, 262, 262, 20, 266, 266, 268, 268, 268,
	268, 258, 258, 258, 21, 21, 267, 267, 269, 269,
	269, 272, 272, 272, 272, 311, 311, 311, 22, 22,
	22, 22, 22, 129, 129, 385, 385, 384, 378, 378,
	377, 377, 376, 381, 381, 380, 380, 379, 40, 41,
	50, 50, 50, 50, 51, 52, 386, 386, 351, 57,
	57, 56, 56, 56, 56, 56, 56, 58, 58, 54,
	54, 53, 53, 55, 55, 353, 353, 339, 339, 352,
	352, 352, 352, 352, 352, 352, 338, 338, 140, 140,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 401, 401, 401,
	400, 400, 237, 237, 237, 237, 237, 237, 237, 237,
	149, 149, 160, 160, 160, 160, 160, 160, 147, 147,
	148, 146, 146, 146, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 159, 159, 155, 155, 155, 156, 156,
	156, 157, 157, 402, 402, 402, 402, 316, 316, 316,
	316, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 318, 318, 318, 318, 318, 318, 318, 320,
	320, 320, 320, 320, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	322, 322, 322, 322, 322, 322, 322, 322, 337, 337,
	323, 323, 331, 331, 332, 332, 333, 333, 333, 334,
	334, 334, 335, 335, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 330, 330, 329, 329, 329, 340, 365,
	365, 364, 364, 362, 362, 362, 362, 362, 362, 362,
	362, 349, 349, 359, 359, 359, 359, 359, 348, 348,
	344, 344, 344, 345, 345, 346, 346, 343, 343, 347,
	347, 361, 361, 360, 360, 341, 341, 342, 342, 367,
	403, 403, 403, 403, 403, 404, 404, 368, 393, 395,
	395, 395, 394, 394, 391, 392, 390, 390, 390, 390,
	390, 84, 84, 84, 285, 285, 286, 286, 357, 357,
	356, 356, 356, 358, 358, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 280, 280, 280, 389,
	389, 389, 389, 389, 389, 388, 388, 388, 354, 354,
	354, 354, 387, 387, 59, 59, 217, 217, 406, 406,
	407, 407, 407, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 111, 111, 112, 112, 112, 112, 114,
	114, 114, 370, 370, 60, 60, 3, 3, 172, 174,
	175, 175, 173, 173, 173, 173, 173, 173, 62, 62,
	61, 61, 177, 176, 178, 178, 178, 1, 1, 2,
	2, 4, 4, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 336, 336, 336, 369, 369,
	371, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 117, 116, 116, 115, 118, 118, 118, 118, 118,
	118, 118, 118, 373, 373, 373, 63, 63, 374, 324,
	325, 326, 5, 6, 350, 372, 125, 125, 24, 39,
	39, 25, 25, 25, 25, 26, 26, 64, 67, 67,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 279, 279, 288, 288, 278, 278, 303, 303,
	303, 281, 281, 281, 282, 282, 399, 399, 399, 275,
	275, 66, 66, 66, 304, 304, 304, 304, 69, 69,
	408, 408, 409, 409, 410, 410, 410, 70, 71, 71,
	306, 306, 307, 307, 72, 73, 85, 85, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 110, 110, 110,
	10, 10, 10, 10, 81, 81, 81, 9, 9, 11,
	68, 68, 75, 396, 396, 397, 398, 398, 398, 398,
	76, 78, 27, 27, 27, 27, 27, 27, 135, 135,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 130, 130, 130, 124, 124, 417, 79, 80,
	80, 128, 128, 128, 121, 121, 121, 127, 127, 127,
	12, 12, 13, 261, 261, 14, 14, 132, 132, 134,
	134, 134, 134, 134, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 133, 133, 133, 133, 296, 296, 296,
	295, 295, 166, 166, 168, 167, 167, 169, 169, 170,
	170, 170, 170, 215, 215, 192, 192, 254, 254, 255,
	255, 253, 253, 260, 260, 256, 256, 256, 256, 263,
	263, 171, 171, 171, 171, 179, 179, 180, 180, 181,
	181, 305, 305, 301, 301, 301, 300, 300, 185, 185,
	185, 187, 186, 186, 186, 186, 188, 188, 190, 190,
	189, 189, 191, 196, 196, 195, 195, 193, 193, 193,
	193, 194, 194, 194, 194, 197, 197, 145, 145, 145,
	145, 145, 145, 145, 145, 158, 158, 158, 158, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	244, 244, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 220, 220, 219, 219, 87, 87, 87, 88,
	88, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 90, 90, 92, 92, 91, 91, 210, 210, 293,
	293, 93, 94, 94, 95, 95, 98, 98, 97, 96,
	96, 102, 102, 99, 99, 101, 101, 100, 103, 103,
	104, 105, 105, 276, 276, 198, 198, 206, 206, 206,
	206, 199, 199, 199, 199, 199, 199, 199, 207, 207,
	207, 214, 208, 208, 204, 204, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 163, 163, 163,
	163, 225, 225, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	164, 164, 164, 164, 165, 165, 165, 165, 165, 165,
	165, 313, 313, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 418, 418, 327, 327, 327, 205, 205, 205, 205,
	205, 126, 126, 126, 126, 126, 310, 310, 310, 314,
	314, 314, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 315, 315, 223,
	223, 122, 122, 221, 221, 222, 224, 224, 216, 216,
	216, 216, 218, 218, 201, 201, 201, 226, 226, 227,
	227, 106, 107, 107, 108, 108, 228, 228, 230, 229,
	229, 231, 232, 232, 232, 233, 233, 234, 234, 234,
	49, 49, 49, 49, 49, 44, 44, 44, 44, 45,
	45, 45, 45, 137, 137, 137, 137, 139, 139, 138,
	138, 82, 82, 83, 83, 83, 143, 143, 144, 144,
	144, 141, 141, 142, 142, 251, 251, 235, 235, 235,
	242, 242, 242, 238, 238, 240, 240, 240, 241, 241,
	241, 239, 248, 248, 250, 250, 249, 249, 245, 245,
	246, 246, 247, 247, 247, 243, 243, 200, 200, 200,
	200, 200, 252, 252, 252, 252, 264, 264, 211, 211,
	213, 213, 212, 212, 162, 265, 265, 273, 270, 270,
	271, 271, 297, 297, 297, 274, 274, 287, 287, 283,
	283, 284, 284, 277, 277, 289, 289, 289, 77, 209,
	209, 366, 366, 363, 292, 292, 294, 294, 298, 298,
	302, 302, 299, 299, 8, 411, 411, 411, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 414, 415, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 5, 7, 10, 9, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 5, 5,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 1, 0, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 2, 2, 5, 6, 6, 6, 6, 6, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 8,
	4, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 6, 4, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 4,
	4, 4, 6, 4, 6, 4, 4, 6, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 4,
	4, 6, 4, 6, 4, 8, 6, 4, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 5, 9, 6, 9, 8, 6, 8,
	8, 8, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -79, -417, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 10, 11, -109, -35, 33, -40,
	-50, 227, -51, -41, 228, -52, 230, 229, 267, 231,
	379, 260, 75, 315, 316, 318, 319, 320, 321, -110,
	684, 265, 266, 233, 37, 46, 34, 35, 38, 237,
	273, 274, 236, 133, -33, -36, 9, -414, 12, 469,
	262, 261, 29, -34, 578, 87, -80, -413, 732, -251,
	-235, 23, 34, 30, -234, -230, -128, -235, 21, 19,
	8, -79, -79, -79, 13, 14, -79, -351, -353, 87,
	160, 87, -79, -57, -56, -54, -53, -55, -58, 32,
	-47, -48, -375, -46, -43, 232, 229, 277, 123, 124,
	267, 268, 269, 231, 251, 266, 270, 265, 286, -42,
	82, 34, 578, 581, -358, 228, 234, 235, 230, 470,
	126, 125, 76, -355, 374, 611, 702, -58, 704, 101,
	104, 703, 45, 241, 705, 706, 707, 618, 708, 250,
	709, 710, 711, 712, 718, 659, 719, 720, 721, 127,
	8, -79, -302, -298, 91, -291, 575, 253, 609, 423,
	610, 302, 82, 42, 514, 584, 371, 374, 611, 499,
	702, 380, 315, 331, 325, 504, 505, 506, 354, 346,
	576, 612, 585, 305, 254, 290, 696, 344, 136, 704,
	309, 613, 268, 381, 382, 614, 383, 101, 318, 420,
	717, 308, 615, 715, 104, 703, 323, 80, 498, 52,
	699, 45, 263, 428, 429, 342, 236, 338, 705, 291,
	616, 587, 284, 126, 123, 724, 37, 334, 51, 31,
	714, 125, 50, 706, 151, 617, 707, 618, 385, 361,
	690, 49, 386, 269, 619, 85, 274, 580, 312, 698,
	387, 519, 335, 388, 301, 713, 233, 620, 679, 671,
	672, 389, 390, 691, 366, 362, 367, 521, 621, 412,
	503, 391, 675, 676, 731, 53, 622, 623, 692, 124,
	624, 79, 708, 81, 329, 330, 625, 299, 252, 524,
	525, 414, 358, 481, 488, 489, 111, 112, 484, 113,
	490, 114, 491, 492, 493, 482, 115, 108, 483, 494,
	495, 359, 360, 116, 496, 110, 109, 485, 487, 117,
	497, 250, 36, 392, 577, 303, 59, 307, 278, 415,
	47, 364, 728, 46, 686, 526, 626, 689, 357, 353,
	478, 54, 627, 628, 629, 630, 500, 709, 356, 328,
	352, 723, 4, 296, 501, 710, 63, 235, 369, 368,
	370, 285, 411, 349, 631, 632, 633, 257, 83, 634,
	339, 22, 635, 636, 393, 292, 637, 57, 638, 639,
	418, 266, 640, 55, 711, 40, 641, 271, 725, 712,
	642, 643, 644, 685, 645, 273, 646, 395, 647, 673,
	674, 394, 363, 365, 527, 280, 396, 379, 238, 579,
	648, 313, 333, 270, 716, 649, 258, 515, 516, 517,
	518, 697, 523, 522, 272, 277, 265, 419, 259, 650,
	651, 652, 653, 654, 306, 670, 655, 656, 319, 718,
	479, 44, 657, 658, 659, 660, 661, 300, 295, 413,
	422, 62, 84, 376, 662, 663, 695, 327, 324, 293,
	460, 462, 463, 464, 465, 466, 461, 468, 664, 316,
	56, 719, 720, 721, 287, 722, 507, 508, 509, 510,
	10, 561, 544, 572, 545, 562, 546, 555, 547, 563,
	571, 573, 528, 536, 529, 537, 567, 550, 564, 556,
	549, 548, 570, 553, 557, 530, 538, 568, 554, 531,
	539, 532, 540, 533, 541, 566, 565, 558, 569, 534,
	542, 560, 535, 543, 559, 551, 552, 431, 729, 730,
	502, 398, 127, 297, 298, 48, 350, 279, 665, 310,
	666, 340, 341, 475, 476, 355, 326, 351, 682, 317,
	680, 281, 399, 480, 267, 667, 421, 294, 372, 377,
	311, 583, 520, 286, 400, 694, 582, 511, 512, 348,
	345, 288, 513, 668, 684, 401, 242, 282, 283, 669,
	681, 402, 403, 304, 404, 405, 406, 407, 408, 410,
	314, 409, 683, 677, 678, 289, 459, 581, 322, 343,
	378, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 477,
	240, -79, 240, -189, -298, 240, 179, -270, 382, -288,
	384, 397, 392, 402, 390, -279, 393, 395, 280, -399,
	412, 240, 399, 227, 385, 394, 403, 404, 304, 410,
	405, 314, 409, 289, 406, 407, 408, -382, 179, 707,
	722, 136, 347, 389, 387, 413, 686, 91, -304, 91,
	92, 93, -291, 317, -306, 322, -292, -382, -291, 320,
	-79, -79, -308, -308, -130, 686, 688, -208, -145, 144,
	-158, -259, -161, 92, -150, -153, -202, -203, -204, -205,
	-159, -218, -257, 168, 169, 176, 145, -214, -162, 27,
	574, 471, 470, 179, 32, 222, 69, 70, 473, 147,
	58, 12, 436, 437, -160, 426, 427, 438, 432, 433,
	498, 500, 501, 502, 499, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 503, 514, 475, 476, 118,
	477, 108, 110, 109, 478, 479, 480, 344, 526, 527,
	521, 524, 525, 523, 522, 359, 360, 481, 544, 545,
	549, 548, 546, 547, 550, 553, 554, 555, 556, 557,
	558, 560, 559, 551, 552, 529, 528, 530, 531, 532,
	533, 534, 535, 537, 536, 538, 539, 540, 541, 542,
	543, 561, 562, 563, 564, 565, 567, 566, 571, 570,
	568, 569, 573, 572, 482, 483, 111, 112, 113, 114,
	115, 116, 117, 484, 487, 485, 486, 488, 489, 490,
	495, 496, 491, 492, 493, 494, 497, 370, 368, 369,
	365, 364, 363, -89, -102, 600, 599, -103, 423, 428,
	429, 431, -151, -152, -164, -165, -292, -298, 245, 425,
	239, 174, 469, -154, -148, -216, 107, 93, -31, -212,
	424, 434, 435, 439, 430, 440, 586, 588, 603, 604,
	606, 591, 596, 595, 598, 515, 516, 517, 518, 519,
	520, 671, 672, 673, 674, 675, 676, 677, 678, -382,
	-291, 91, -156, -155, -198, 94, 99, 102, 103, 105,
	-405, 263, 340, 341, 119, -414, 700, 90, 95, 96,
	97, 98, 120, 121, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 45, 398, 398, -189,
	-79, -79, -79, -79, -411, 703, 579, -228, -128, -230,
	-33, -31, -414, 9, -79, -31, -32, -30, -36, -38,
	605, -37, -298, 100, -235, -251, 13, 163, 43, 51,
	-233, -234, -34, -31, -145, 20, 24, 25, -133, 170,
	-145, -298, -133, -277, 244, -79, -79, -266, -311, 317,
	-268, 413, 686, 412, -258, -271, 91, -257, -270, 411,
	92, -352, 160, -338, -342, -292, 255, -368, 251, -189,
	-361, -360, -292, -414, -129, -287, 241, 249, 248, 137,
	-386, 140, 297, 425, 239, -53, -54, -55, -270, 178,
	706, -111, 272, 276, 88, 88, -342, -341, -340, -387,
	276, 255, -367, -359, 247, 256, -348, 248, 249, -343,
	241, 138, -387, -343, 246, 256, 251, 255, 276, 276,
	127, 276, 127, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 271, -349, 152, -349, 582, 582, -355, -387,
	251, 241, -387, -387, 247, -289, -343, 243, 26, 243,
	36, 36, -349, -349, -349, -270, 178, -349, -349, -349,
	-349, 284, 284, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	240, -386, -137, 409, 304, 82, -56, 286, -39, -189,
	-287, 241, 242, -386, 273, -189, 223, -189, 689, -281,
	160, 16, -281, -278, 398, 396, 383, 388, -281, -281,
	-281, -281, 287, 381, -344, 241, 36, 252, 398, 287,
	381, 287, 288, 287, 288, 391, 401, 287, -303, 15,
	163, 425, 386, 390, 280, 240, 281, 242, 400, 288,
	-303, 90, -282, 160, 287, 398, 283, -281, -281, -309,
	-414, -294, -292, -290, 232, 24, 143, 26, 28, 146,
	179, 130, 20, 147, 38, 234, 347, 251, 178, 247,
	470, 227, 73, 586, 426, 433, 424, 432, 436, 472,
	473, 425, 384, 32, 14, 588, 29, 261, 25, 39,
	172, 229, 150, 589, 264, 27, 262, 118, 121, 591,
	23, 76, 256, 15, 249, 41, 17, 592, 593, 18,
	245, 244, 163, 241, 71, 12, 222, 30, 159, 67,
	594, 138, 133, 595, 596, 597, 598, 131, 69, 160,
	21, 726, 434, 435, 34, 687, 574, 275, 174, 74,
	60, 688, 144, 430, 599, 600, 119, 601, 122, 77,
	693, 140, 19, 72, 43, 602, 276, 603, 246, 727,
	604, 416, 605, 161, 230, 469, 70, 162, 700, 606,
	701, 239, 397, 9, 474, 33, 260, 248, 129, 68,
	440, 607, 240, 149, 243, 132, 120, 8, 137, 35,
	13, 75, 78, 437, 438, 439, 58, 128, 578, 148,
	16, 608, 417, 142, -382, 689, -309, -309, 33, 92,
	-408, -409, -410, 578, 416, 243, -292, -189, -85, 679,
	231, -86, 685, 24, 238, -135, 398, -123, 179, 707,
	690, 691, 692, 689, 395, 697, 695, 693, 287, 694,
	88, 140, 142, 143, 4, -145, 159, -199, 152, 153,
	154, 155, 156, 157, 158, 164, 163, 144, 146, 160,
	-244, 141, 165, 166, 167, 168, 169, 170, 171, 173,
	172, 174, 175, 161, 162, 178, 225, 226, -153, -153,
	-153, -153, -214, -220, -219, -414, -216, -382, -291, -298,
	-414, -414, -153, -276, -414, -150, -414, -414, -414, -414,
	-223, -145, -414, -414, -418, -414, -418, -418, -418, -327,
	-414, -327, -327, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, 223, -414, -414, -414,
	-414, -414, -327, -327, -327, -327, -327, -327, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, 103, 99, 102, 94, -218, 105, 90, 90,
	90, 90, -31, -32, -208, -414, -308, -396, -397, -192,
	-189, -414, 304, -292, -292, 273, 96, -233, -34, -31,
	-228, -234, -230, -31, -79, -121, -134, 64, 65, -136,
	25, 39, 68, 66, 24, -415, 89, -415, -251, -415,
	88, -38, -254, 87, 62, 44, 90, 90, 88, 22,
	-229, -231, -145, 15, -296, 4, -295, 26, -292, 90,
	223, 15, -190, 30, -189, -277, -277, 88, 91, 317,
	-267, -269, 414, 416, 152, -297, -292, 90, 32, 89,
	88, -189, -316, -319, -321, -320, -322, -317, -318, 344,
	345, 179, 348, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 361, 33, 263, 340, 341, 342, 343, 362,
	363, 364, 365, 367, 368, 369, 370, 325, 346, 576,
	326, 327, 328, 329, 330, 331, 333, 334, 337, 335,
	336, 338, 339, -383, -382, 87, 89, 88, -323, 87,
	-145, -137, 240, -382, 241, 241, 241, -79, 469, -349,
	-349, -349, 271, 20, -46, -43, -375, 19, -42, -43,
	232, 123, 124, 229, 87, -338, 87, -347, -383, -382,
	87, 138, 246, 137, -346, -343, -346, -347, -382, -216,
	-382, 138, 138, -382, -382, -263, -292, -263, -263, 24,
	-263, 24, -263, 24, 96, -292, -263, 24, -263, 24,
	-263, 24, -263, 24, -263, 24, 32, 79, 80, 81,
	32, 83, 84, 85, -216, -382, -382, -216, -338, -216,
	-189, -382, -270, 96, 96, 96, -349, -349, 96, 90,
	90, 90, -349, -349, 96, 90, -300, -298, 90, 90,
	-388, 257, 301, 303, 96, 96, 96, 96, 32, 90,
	-389, 32, 714, 713, 715, 716, 717, 90, 96, 32,
	96, 32, 96, -292, 87, -189, -143, 291, 227, 229,
	232, 77, 90, 307, 308, 305, 310, 311, 152, 45,
	88, 243, 240, -382, -283, 245, -283, -292, -299, -298,
	-290, 243, 380, 90, -145, -345, 15, 163, -303, -303,
	-281, -189, -345, -303, -281, -189, -281, -281, -281, -281,
	-303, -303, -303, -281, -298, -298, -189, -189, -189, -189,
	-189, -189, -189, -309, -282, -281, 689, 90, -275, 15,
	77, -309, -309, 88, 323, 417, 418, -307, 320, -81,
	-292, 90, -10, -29, -18, -17, -19, 152, -10, 88,
	578, -182, -189, 689, 689, 689, 689, 689, 689, -145,
	-145, -145, -145, 601, -206, 119, 144, 120, 121, -161,
	-145, -207, -212, -214, 106, 163, 146, 160, -244, -150,
	-153, -150, -150, -150, -150, -150, -150, 222, -150, 222,
	-150, -150, -150, -150, -150, -150, -310, -292, 90, 179,
	-157, -156, 105, -405, -157, 575, 88, -219, 223, -145,
	-145, -382, -119, 442, 443, 444, 445, 447, 448, 449,
	452, 453, 457, 458, 441, 459, 446, 451, 454, 455,
	456, 450, 343, -145, -131, -133, -131, -145, -221, -222,
	148, -216, -145, -415, -415, 96, 170, -127, 25, 39,
	-127, -127, -127, -127, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -127, -145, -120, 441, 459, 446,
	451, 454, 455, 456, 450, 343, 460, 461, 462, 463,
	464, 465, 466, 467, 468, -120, -119, -145, -145, -145,
	-145, -145, -145, -87, -145, 130, 131, 132, -208, -145,
	-150, -145, -145, -145, -415, -145, -145, -145, -209, -208,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -381, -380, -379, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -208, -208, -208, -208, -208, -145, -415, -145,
	-163, -148, 96, -259, 105, 92, -145, -145, -145, -145,
	-145, -145, -132, -131, -294, -299, -290, -291, -131, -132,
	-132, -131, -131, -145, -145, -145, -145, -145, -145, -145,
	-145, -415, -145, -145, -145, -145, -145, -251, -415, -208,
	88, -398, 416, 417, 687, -301, 276, -300, 26, -209,
	90, 15, -261, 78, -292, -233, -233, 64, 65, 60,
	-131, -136, -415, -37, 26, -253, -292, 63, 90, -328,
	-270, 371, 372, 179, -145, -145, 88, -232, 28, 29,
	-189, -295, 170, -299, -189, -262, 276, -189, -167, -169,
	-170, -171, -192, -215, -414, -172, -31, 597, 594, 15,
	-182, -183, -191, -298, -268, -311, -267, 88, 415, 417,
	418, 77, 122, -145, -329, 178, -357, -356, -355, -338,
	-340, -341, -342, 89, -329, -334, 377, 376, -323, -323,
	-323, -323, -323, -328, -328, -328, -328, 87, 87, -323,
	-323, -323, -323, -331, 87, -331, -331, -332, -331, 87,
	-332, -333, 87, -333, -368, -145, -365, -364, -362, -363,
	250, 101, 669, 625, 578, 618, 659, 78, -360, -232,
	96, -415, -143, -284, 245, -366, -363, -382, -382, -382,
	-284, 91, 90, 91, 90, 91, 90, -112, -60, -1,
	726, 727, 728, 88, 20, -339, -338, -59, 301, -371,
	-372, 276, -367, -361, -347, 138, -346, -347, -347, -382,
	88, 30, 127, 127, 127, 127, 578, 229, 33, -285,
	617, 144, 669, 625, -338, -59, 243, 243, -310, -310,
	-310, 90, 90, -280, 722, -182, -139, 293, 152, 282,
	282, 240, 240, 295, -189, 306, 309, 307, 308, 305,
	310, 311, 24, 24, 24, 24, 24, 294, 296, 298,
	284, -189, -189, -283, 77, -184, -189, 27, -298, 90,
	90, -189, -281, -281, -189, -281, -281, -189, -410, 324,
	-292, 358, 680, 681, 683, 682, -123, 416, 88, 578,
	23, -124, 23, -414, 119, 120, 121, -207, -150, -153,
	-150, 143, 264, -150, -150, -414, -216, -415, -294, 26,
	88, 78, -415, 168, 88, 88, -415, -415, 88, 15,
	-224, -222, 150, -145, -415, 88, -415, -415, -208, -145,
	-145, -145, -145, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -208, -415, 88, 88, 15, -314, 26,
	-415, -415, -415, -415, -415, -223, -415, 15, -415, 78,
	88, 163, 88, -415, -415, -415, 88, 88, -415, -415,
	88, -415, 88, -415, -415, -415, -415, -415, -415, 88,
	-415, 88, -415, -415, -415, 88, -415, 88, -415, -415,
	88, -415, 88, -415, 88, -415, 88, -415, 88, -415,
	88, -415, 88, -415, 88, -415, 88, -415, 88, -415,
	88, -415, 88, -415, 88, -415, 88, -415, 88, -415,
	88, -415, 88, -415, 88, -415, -415, -415, 88, -415,
	88, -415, 88, -415, -415, 88, -415, 88, -415, 88,
	-415, 88, 88, -415, 88, 88, 88, -415, 88, 88,
	88, 88, -415, -415, -415, -415, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, -415, -415, -415, -415,
	-415, -415, 88, -94, 602, -415, -415, 88, -415, 88,
	88, 88, 88, 88, -415, -414, 223, -415, -415, -415,
	-415, -415, 88, 88, 88, 88, 88, 88, -415, -415,
	-415, 88, 88, -415, 88, -415, 88, -415, -397, 686,
	417, -196, -195, -193, 75, 244, 76, -414, -300, -415,
	-157, -259, -260, -259, -201, -292, 96, 105, -235, -166,
	-168, 15, -136, -214, 89, 88, -328, -239, -245, -278,
	-292, 90, 179, -330, 179, -330, 371, 372, -231, 223,
	-197, 16, -200, 33, 58, -29, -414, -414, 33, 88,
	-185, -187, -186, -188, 67, 71, 73, 68, 69, 70,
	74, -305, 26, -31, -167, -31, -414, -189, -182, -416,
	15, 78, -416, 88, 223, -269, -272, 419, 416, 422,
	-382, 90, -111, 88, -355, -342, -236, -140, 41, -335,
	378, -328, 585, -328, -337, 90, -337, 96, 96, 96,
	89, -49, -44, -45, 34, 82, -362, -349, 90, 40,
	-349, -349, -292, 89, -232, -139, -189, 144, 77, -366,
	-366, -366, -298, -2, 725, 731, 138, 87, 383, 19,
	-253, 88, 89, -217, 302, 89, -113, -292, 89, 87,
	-347, -347, -292, -414, 240, 32, 32, 669, 625, 617,
	-59, -217, -216, -382, -329, 724, 723, 89, 242, 300,
	-144, 436, -141, 90, 91, -189, -189, -189, -189, -189,
	232, 229, 406, -406, 312, -406, 285, 243, -182, -189,
	88, -84, 259, 254, -303, -303, 34, -189, 416, 698,
	696, -145, 143, 264, -161, -153, -119, -119, -150, -312,
	179, 344, 263, 342, 338, 358, 349, 376, 340, 377,
	335, 334, 333, -312, -310, -150, -208, -133, -145, -145,
	151, -145, 149, -145, -95, -94, -415, -415, -415, -415,
	-415, -95, -95, -95, -95, -95, -95, -95, -95, -95,
	-95, -228, -145, -145, -145, -415, 179, 344, 15, -145,
	-310, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -379, -145, -208, -145,
	-208, -145, -145, -145, -145, -145, -380, -380, -380, -380,
	-380, -208, -208, -208, -208, -145, -414, -292, -98, -97,
	-96, 652, 244, -94, -163, -98, -163, 222, -145, 222,
	222, 222, -145, -132, -294, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -193, -343, -343, -343, -263,
	88, -274, 23, 15, 58, 58, -166, -197, -167, -136,
	-292, -242, 679, -248, 47, -246, -247, 48, -243, 49,
	57, -330, -330, 170, -233, -145, -264, 77, -265, -273,
	-216, -211, -213, -212, -414, -252, -415, -292, -263, -265,
	-169, -170, -170, -169, -170, 67, 67, 67, 72, 67,
	72, 67, -186, -298, -415, -145, -301, 78, -167, -167,
	-191, -298, 170, 416, 420, 421, -355, -404, 119, 144,
	32, 77, 374, 101, -402, 178, 614, 664, 669, 625,
	618, 659, -403, 246, 137, 138, 258, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -286, -285, -45, -44,
	-349, -349, 96, -382, 90, 90, 242, 27, -189, 77,
	77, 77, -114, 729, 96, 87, -3, 82, -145, 87,
	20, -338, -216, -373, -324, -374, -325, -326, -5, -6,
	-350, -117, 58, 101, -63, 45, 241, 709, 710, 127,
	-414, 722, -365, -253, -369, -371, -189, -147, -414, -146,
	-148, -154, 168, 169, 263, 340, 341, -217, -189, -138,
	291, 299, 87, -142, 92, -385, 78, 282, 374, 282,
	90, -407, 313, 90, -407, -189, -84, -49, -189, -281,
	-281, 34, -382, -415, -161, -153, -126, 163, 578, -315,
	584, -323, -323, -323, -333, -323, 330, -323, 330, -323,
	-415, -415, -415, 88, -415, 23, -415, -145, 88, -95,
	-95, -95, -95, -95, -122, 474, 88, 88, -415, 87,
	87, -145, -415, -415, -415, 88, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, 88,
	-415, 88, -415, 88, -415, 88, -415, 88, -415, 88,
	-415, 88, -415, 88, -415, 88, -415, 88, -415, 88,
	-415, 88, -415, 88, -415, 88, -415, 88, -415, 88,
	-415, -415, 88, -415, -415, -415, 88, -415, 88, -415,
	88, -415, -415, -415, 88, -313, 670, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -93, -293,
	-292, -94, 634, 634, -415, -94, -225, 88, -150, -415,
	-150, -150, -150, -415, -415, -415, 88, -415, 88, 88,
	-415, 88, -415, 88, -415, -415, -415, -415, 88, -194,
	23, -194, -194, -415, -259, -189, -197, -226, 17, -239,
	52, 350, -250, -249, 56, 48, -247, 20, 50, 20,
	31, -264, 88, 152, 88, -415, -415, 88, 58, 223,
	-415, -197, -180, -179, 77, 78, -181, 77, -179, 67,
	67, -254, 88, -262, -167, -197, -197, 223, 119, -414,
	-149, -160, -147, 13, 90, 90, -382, -401, 713, 714,
	32, 96, -349, -349, 138, 138, -189, 87, -328, 90,
	-328, 96, 96, 32, 83, 84, 85, 32, 79, 80,
	81, -189, -189, -189, -189, -370, 87, 20, -145, 87,
	152, 89, -253, -253, 278, 163, -349, 707, 284, 284,
	-349, -349, -349, -116, -115, 729, 89, -415, 88, -336,
	578, 581, -145, -155, -155, -254, 89, -378, 578, -384,
	-292, -292, -292, -292, 96, 98, -415, 576, 74, 579,
	-415, -328, -145, -145, -145, -233, 90, -145, -145, 96,
	96, -415, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -208, -145, -415, -177, -176, -178, 690, 119,
	32, -312, -415, -210, 276, -101, -100, -99, 15, -415,
	-145, -119, -119, -119, -119, -145, -145, -145, -145, -145,
	-145, -414, 67, 19, 17, -414, -414, -301, -226, -227,
	18, 20, -240, 54, -238, 53, -238, -249, 20, 20,
	90, 20, 90, 138, -273, -145, -213, 58, -29, -292,
	-211, -292, -228, -145, 87, -145, -157, -197, -197, -145,
	-203, 498, 500, 501, 502, 499, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 503, 514, 475, 476,
	477, 108, 110, 109, 478, 479, 480, 344, 526, 527,
	521, 524, 525, 523, 522, 359, 360, 481, 544, 545,
	549, 548, 546, 547, 550, 553, 554, 555, 556, 557,
	558, 560, 559, 551, 552, 529, 528, 530, 531, 532,
	533, 534, 535, 537, 536, 538, 539, 540, 541, 542,
	543, 561, 562, 563, 564, 565, 567, 566, 571, 570,
	568, 569, 573, 572, 482, 483, 111, 112, 113, 114,
	115, 116, 117, 484, 487, 485, 488, 489, 490, 495,
	496, 491, 492, 493, 494, 497, 370, 368, 369, 365,
	364, 363, 423, 428, 429, 431, 515, 516, 517, 518,
	519, 520, 671, 672, 673, 674, 675, 676, 677, 678,
	90, 90, 87, -145, 89, 89, -254, -369, -60, 89,
	-255, -253, 96, 89, 279, -212, -414, 90, -349, -349,
	-349, 96, 96, -300, -415, 88, -292, -403, -371, 582,
	582, -415, 26, -377, -376, -294, 87, 78, 63, 577,
	580, -415, -415, 88, -415, -415, -415, 89, 89, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, 88, -415, -176, -178, -415, 77, -157, -228, 20,
	-98, 301, 303, -98, -415, -415, -415, -415, -415, 88,
	-415, -415, 88, -415, 88, -415, -415, -256, -415, -292,
	246, 20, 20, -256, -256, -196, -227, -108, -107, -106,
	608, -145, -208, -241, 55, 77, 122, 90, 90, 90,
	13, -211, 223, -233, -253, -174, 383, -228, -415, -253,
	89, 26, 89, 731, 138, 89, -212, -125, -414, 275,
	-300, 90, 90, -115, -118, -29, 88, 152, -253, -189,
	63, -145, -208, -415, 77, 589, 690, -92, -91, -88,
	701, 727, -208, -94, -94, -145, -145, -145, 88, -415,
	-415, -415, -108, 88, -105, -104, -292, 77, 122, -265,
	-292, 89, -415, -414, -233, 89, -237, -29, 87, -3,
	275, -324, -374, -325, -326, -5, -6, -350, -82, 578,
	-376, -354, -298, -294, 90, 96, 89, 578, -415, -415,
	-90, 146, 699, 667, -155, 222, -415, 88, -415, 88,
	-415, 88, -292, 246, -106, 88, 26, -301, -175, -173,
	-292, 631, -394, -393, 574, -404, -400, 119, 144, 101,
	-402, 669, 625, 128, 129, -82, -145, 87, -415, -83,
	290, 686, 223, -385, 579, -90, 700, 645, 620, 645,
	620, -150, -145, -145, -145, -104, -414, -415, 88, 23,
	-316, -62, 642, -391, -392, 77, -395, 389, 641, 662,
	119, 90, 89, -253, 251, -299, -378, 580, 143, -119,
	-415, 88, -415, 88, -415, -93, -173, 638, -329, -157,
	-392, 77, -391, 77, 14, 13, -4, 730, 89, 292,
	-90, 645, 620, -145, -145, -415, -61, 27, -174, -390,
	259, 254, 257, 33, -390, 96, -4, -415, -415, 642,
	253, 32, 119, -157, -177, -176, -176,
}

var yyDef = [...]int{
	877, -2, -2, 879, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 72, 74, 75, 877, 877, 877, 0, 877, 0,
	0, 877, -2, -2, 877, 1610, 0, 877, 0, 0,
	0, -2, 792, 798, 0, 807, -2, 0, 0, 877,
	877, 2234, 2234, 872, 0, 0, 0, 0, 0, 877,
	877, 877, 877, 1615, 1476, 52, 877, 0, 87, 88,
	827, 828, 829, 67, 0, 2232, 878, 1, 3, 73,
	77, 0, 0, 0, 60, 1485, 0, 80, 0, 0,
	881, 0, 0, 1593, 877, 877, 0, 128, 129, 0,
	0, 0, -2, 132, -2, 161, 162, 163, 0, 168,
	603, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1595, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1503, 167, 1611, 1608, 1609, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	0, 1587, 0, 716, 980, 0, 0, 781, 781, 0,
	781, 781, 781, 781, 0, 0, 0, 730, 0, 0,
	0, 0, 778, 0, 746, 747, 0, 778, 0, 753,
	784, 0, 0, 759, 781, 781, 762, 2235, 0, 2235,
	2235, 1578, 0, 775, 773, 787, 788, 42, 791, 794,
	795, 796, 797, 800, 0, 811, 814, 1604, 1605, 0,
	816, 823, 840, 841, 0, 873, 874, 47, 1132, 0,
	1002, 0, 1008, -2, 1019, 1036, 1037, 1038, 1039, 1040,
	1042, 1043, 1044, 0, 0, 0, 0, 1049, 1050, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 0, 1449,
	0, 0, 1411, 1411, 1147, 1411, 1411, 1413, 1413, 1413,
	1820, 1958, 1966, 2142, 1781, 1787, 1788, 1789, 2088, 2089,
	2090, 2091, 2179, 2180, 2184, 1882, 1776, 2155, 2156, 0,
	2231, 1919, 1927, 1928, 1952, 2052, 2165, 1799, 1947, 2016,
	1879, 1901, 1902, 2034, 2035, 1923, 1924, 1905, 2094, 2096,
	2112, 2113, 2098, 2100, 2109, 2115, 2120, 2099, 2111, 2116,
	2129, 2133, 2136, 2137, 2138, 2106, 2104, 2117, 2121, 2123,
	2125, 2131, 2134, 2107, 2105, 2118, 2122, 2124, 2126, 2132,
	2135, 2093, 2097, 2101, 2110, 2128, 2108, 2127, 2102, 2114,
	2119, 2130, 2103, 2095, 1917, 1920, 1908, 1909, 1911, 1913,
	1918, 1925, 1931, 1910, 1930, 1929, 0, 1906, 1907, 1912,
	1922, 1926, 1914, 1915, 1916, 1921, 1932, 1972, 1971, 1970,
	2015, 1943, 2014, 0, 0, 0, 0, 0, 1771, 1825,
	1826, 2139, 1333, 1334, 1335, 1336, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 1462, 1463, 46, 1131, 1574,
	1413, 1413, 1413, 1413, 1413, 1413, 1071, 1072, 1073, 1074,
	1075, 1101, 1102, 1108, 1109, 2029, 2030, 2031, 2032, 1863,
	2174, 1871, 1872, 2011, 2012, 1884, 1885, 2205, 2206, -2,
	-2, -2, 234, 235, 236, 237, 238, 239, 240, 241,
	0, 1824, 2153, 2154, 230, 0, 0, 298, 299, 295,
	296, 297, 1115, 1116, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 291, 292, 2234, 0, 850, 0,
	0, 0, 0, 0, 0, 1616, 1617, 1485, 0, 1477,
	1476, 65, 0, 877, -2, 0, 0, 0, 0, 49,
	0, 54, 937, 880, 79, 78, 1525, 0, 0, 0,
	61, 1486, 69, 71, 1487, 0, 882, 883, 0, 913,
	917, 0, 0, 0, 1594, 1593, 1593, 104, 0, 0,
	105, 125, 126, 127, 0, 0, 111, 112, 1580, 1581,
	45, 0, 0, 179, 180, 0, 43, 428, 0, 175,
	0, 421, 360, 0, 1503, 0, 0, 0, 0, 0,
	877, 0, 1588, 156, 157, 164, 165, 166, 401, 401,
	401, 575, 0, 0, 167, 167, 533, 534, 535, 0,
	0, -2, 426, 0, 513, 0, 0, 415, 415, 419,
	417, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 402, 0, 573, 574, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 1597, 0,
	550, 551, 0, 0, 0, 401, 401, 0, 0, 0,
	0, 401, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 1516, 0, 0, 0, -2, 0, 708, 0,
	0, 0, 1589, 1589, 0, 715, 0, 717, 0, 720,
	0, 0, 721, 0, 778, 778, 776, 777, 723, 724,
	725, 726, 781, 0, 0, 410, 411, 412, 778, 781,
	0, 781, 781, 781, 781, 778, 778, 778, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2235, 784,
	781, 0, 754, 0, 755, 756, 757, 760, 761, 763,
	2236, 2237, 1606, 1607, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 2235, 2235, 767, 771, 1579, 793,
	799, 801, 802, 0, 0, 812, 815, 834, 51, 1870,
	822, 51, 824, 825, 826, 852, 853, 858, 0, 0,
	0, 0, 864, 865, 866, 0, 0, 869, 870, 871,
	0, 0, 0, 0, 0, 1000, 0, 0, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 1021, 0, 0, 0, 1045, 1046,
	1047, 1048, 1051, 0, 1062, 0, 1064, 1458, -2, 0,
	0, 0, 1056, 1057, 0, 0, 0, 0, 0, 0,
	0, 1450, 0, 0, 1145, 0, 1146, 1148, 1149, 1150,
	0, 1151, 1152, 887, 887, 887, 887, 887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 887, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 897, 0, 0, 897, 897,
	0, 0, 222, 223, 224, 225, 226, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 300, 248,
	249, 250, 1131, 0, 0, 0, 48, 842, 843, 0,
	963, 1599, 0, 0, 893, 0, 1614, 59, 68, 70,
	1485, 63, 1485, 0, 899, 0, 0, -2, -2, 900,
	906, 907, 908, 909, 910, 56, 2233, 57, 0, 76,
	0, 50, 0, 0, 0, 0, 374, 1528, 0, 0,
	1478, 1479, 1482, 0, 914, 1964, 918, 0, 920, 921,
	0, 0, 102, 0, 979, 0, 0, 0, 113, 0,
	115, 116, 0, 0, 0, 385, 1582, 1583, 1584, -2,
	408, 0, 385, 369, 308, 309, 310, 360, 312, 360,
	360, 360, 360, 374, 374, 374, 374, 343, 344, 345,
	346, 347, 0, 0, 329, 360, 360, 360, 360, 350,
	351, 352, 353, 354, 355, 356, 357, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 362, 362, 362, 362,
	362, 366, 366, 0, 44, 0, 389, 0, 1482, 0,
	0, 1516, 1591, 1601, 0, 0, 0, 1591, 134, 0,
	0, 0, 576, 614, 527, 564, 577, 0, 530, 531,
	-2, 0, 0, 512, 0, 514, 0, 409, 0, -2,
	0, 419, 0, 415, 419, 416, 419, 407, 420, 554,
	555, 556, 0, 558, 559, 644, 949, 0, 0, 0,
	0, 0, 650, 651, 652, 0, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 565, 566, 567, 568,
	569, 570, 571, 572, 0, 0, 0, 0, 514, 0,
	561, 0, 0, 465, 466, 467, 0, 0, 470, 471,
	472, 473, 0, 0, 476, 477, 478, 966, 967, 479,
	480, 505, 506, 507, 481, 482, 483, 484, 485, 486,
	487, 499, 500, 501, 502, 503, 504, 488, 489, 490,
	491, 492, 493, 496, 0, 149, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1589, 0, 0, 0, 0, 896, 981, 1612,
	1613, 0, 0, 782, 783, 0, 413, 414, 781, 781,
	727, 768, 0, 781, 731, 769, 732, 734, 733, 735,
	748, 749, 781, 738, 779, 780, 739, 740, 741, 742,
	743, 744, 745, 764, 750, 751, 752, 785, 0, 789,
	790, 765, 766, 0, 0, 805, 806, 0, 813, 837,
	835, 836, 838, 830, 831, 832, 833, 0, 839, 0,
	0, 855, 98, 860, 861, 862, 863, 875, 868, 1133,
	997, 998, 999, 0, 1001, 1005, 0, 1117, 1119, 1007,
	1003, 1009, 1128, 1129, 1130, 0, 0, 0, 0, 0,
	1013, 1017, 1022, 1023, 1024, 1025, 1026, 0, 1027, 0,
	1030, 1031, 1032, 1033, 1034, 1035, 1041, 1426, 1427, 1428,
	1060, 301, 302, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1132, 0, 911, 0, 0, 1456, 1453,
	0, 0, 0, 1412, 1414, 0, 0, 0, 888, 889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 0, 0, 1429, 0, 0,
	0, 0, 0, 1449, 0, 1066, 1067, 1068, 0, 0,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 1600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1337, 1338, 1339, 1340, 41, 0, 0, 0, 0,
	0, 0, 0, 898, 1460, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 1572, 0,
	0, 845, 846, 848, 0, 983, 0, 964, 0, 0,
	851, 0, 892, 0, 895, 62, 64, 904, 905, 0,
	922, 901, 58, 53, 0, 0, 941, 1526, 374, 1548,
	0, 383, 383, 380, 1488, 1489, 0, 1481, 1483, 1484,
	81, 919, 915, 0, 995, 0, 0, 978, 0, 925,
	927, 928, 929, 961, 0, 932, 933, 0, 0, 0,
	0, 0, 100, 980, 106, 0, 114, 0, 0, 119,
	120, 107, 108, 109, 110, 0, 603, -2, 460, 181,
	183, 184, 185, 176, -2, 372, 370, 371, 311, 374,
	374, 337, 338, 339, 340, 341, 342, 0, 0, 330,
	331, 332, 333, 322, 0, 323, 324, 325, 364, 0,
	326, 327, 0, 328, 427, 0, 1490, 390, 391, 393,
	401, 0, 396, 397, 0, 401, 401, 0, 422, 423,
	0, 1482, 1507, 0, 0, 0, 1602, 1601, 1601, 1601,
	0, 169, 170, 171, 172, 173, 174, 639, 0, 0,
	615, 637, 638, 167, 0, 0, 177, 516, 515, 0,
	671, 0, 425, 0, 0, 419, 419, 404, 405, 557,
	0, 0, 646, 647, 648, 649, 0, 0, 0, 543,
	454, 0, 544, 545, 514, 516, 0, 0, 385, 468,
	469, 474, 475, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 591, 592, 595, 597,
	518, 601, 594, 596, 598, 518, 602, 1504, 1505, 1506,
	0, 0, 709, 0, 0, 451, 96, 1590, 714, 718,
	719, 778, 737, 770, 778, 729, 736, 758, 803, 804,
	809, 817, 818, 819, 820, 821, 859, 0, 0, 0,
	0, 867, 0, 0, 1006, 1118, 1120, 1010, 0, 1014,
	1018, 0, 0, 0, 0, 0, 1065, 1063, 1460, 0,
	0, 0, 1114, 0, 0, 0, 1136, 1137, 0, 0,
	0, 1454, 0, 0, 1143, 0, 1415, 1095, 0, 0,
	0, 0, 0, 1095, 1095, 1095, 1095, 1095, 1095, 1095,
	1095, 1095, 1095, 1476, 1170, 0, 0, 0, 0, 0,
	1175, 1176, 1177, 1178, 1179, 0, 1181, 0, 1182, 0,
	0, 0, 0, 1189, 1190, 1192, 0, 0, 1195, 1196,
	0, 1198, 0, 1200, 1201, 1202, 1203, 1204, 1205, 0,
	1207, 0, 1209, 1210, 1211, 0, 1213, 0, 1215, 1216,
	0, 1218, 0, 1220, 0, 1223, 0, 1226, 0, 1229,
	0, 1232, 0, 1235, 0, 1238, 0, 1241, 0, 1244,
	0, 1247, 0, 1250, 0, 1253, 0, 1256, 0, 1259,
	0, 1262, 0, 1265, 0, 1268, 1269, 1270, 0, 1272,
	0, 1274, 0, 1277, 1278, 0, 1280, 0, 1283, 0,
	1286, 0, 0, 1287, 0, 0, 0, 1291, 0, 0,
	0, 0, 1300, 1301, 1302, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1314, 1315, 1316, 1317,
	1318, 1319, 0, 1321, 0, 1096, 0, 0, 1096, 0,
	0, 0, 0, 0, 1134, 897, 0, 1416, 1417, 1418,
	1419, 1420, 0, 0, 0, 0, 0, 0, 1360, 1361,
	1363, 0, 0, 1366, 0, 1368, 0, 1573, 844, 847,
	849, 935, 984, 985, 0, 0, 0, 0, 965, 1598,
	890, 891, 894, 943, 0, 1464, 0, 0, 922, 995,
	923, 0, 902, 55, 938, 0, 1530, 1529, 1542, 1555,
	383, 383, 377, 378, 384, 379, 381, 382, 1480, 0,
	1485, 0, 1566, 0, 0, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 971, 0, 0,
	0, 0, 962, 933, 0, 934, 0, -2, 0, 0,
	94, 95, 0, 0, 0, 117, 118, 0, 0, 124,
	386, 387, 158, 167, 462, 182, 435, 0, 0, 307,
	373, 334, 335, 336, 0, 358, 0, 0, 0, 0,
	456, 130, 1494, 1493, 401, 401, 392, 0, 395, 0,
	0, 0, 1603, 361, 424, 0, 148, 0, 0, 0,
	0, 0, 154, 609, 0, 0, 616, 0, 0, 0,
	525, 0, 536, 537, 0, 643, -2, 705, 389, 0,
	403, 406, 950, 0, 0, 538, 0, 541, 542, 455,
	516, 547, 548, 562, 549, 497, 498, 495, 0, 0,
	1517, 1518, 1523, 1521, 1522, 135, 583, 585, 584, 588,
	0, 0, 0, 520, 0, 520, 581, 0, 451, 1490,
	0, 713, 452, 453, 781, 781, 854, 99, 0, 857,
	0, 0, 0, 0, 1011, 1015, 1028, 1029, 1421, 1447,
	360, 360, 1434, 360, 366, 1437, 360, 1439, 360, 1442,
	360, 1445, 1446, 0, 0, 1058, 0, 912, 0, 0,
	1142, 1457, 0, 0, 1153, 1094, 1095, 1095, 1095, 1095,
	1095, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1451, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 147, 0, 0,
	0, 0, 0, 0, 1371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1089, 1093, 0, 1097,
	1098, 0, 0, 1323, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 1461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 991, 991, 991, 0,
	0, 0, 1585, 1586, 1465, 1466, 995, 1467, 924, 903,
	942, 1548, 0, 1541, 0, -2, 1550, 0, 0, 0,
	1556, 375, 376, 916, 82, 996, 85, 0, 1566, 1575,
	0, 1557, 1568, 1570, 0, 0, 0, 1562, 0, 995,
	926, 957, 959, 0, 954, 969, 970, 972, 0, 974,
	0, 976, 977, 937, 931, 0, 102, 0, 995, 995,
	101, 0, 982, 121, 122, 123, 461, 186, 191, 0,
	0, 0, 196, 0, 198, 0, 0, 0, 203, 204,
	401, 401, 436, 0, 304, 306, 0, 0, 189, 374,
	0, 374, 0, 365, 367, 0, 437, 457, 1491, 1492,
	0, 0, 394, 398, 399, 400, 0, 1592, 150, 0,
	0, 0, 612, 0, 640, 0, 0, 0, 0, 0,
	0, 178, 517, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 0, 401, 0, 0, 0, 401, 401, 401,
	0, 697, 388, 0, 0, 668, 665, 539, 0, 228,
	229, 231, 0, 0, 0, 0, 0, 546, 937, 1508,
	1509, 1510, 0, 1520, 1524, 138, 0, 0, 0, 0,
	593, 599, 0, 519, 600, 710, 711, 712, 97, 722,
	728, 856, 876, 1004, 1012, 1016, 0, 0, 0, 0,
	1448, 1432, 374, 1435, 1436, 1438, 1440, 1441, 1443, 1444,
	1054, 1055, 1059, 0, 1139, 0, 1141, 1455, 0, 1154,
	1155, 1156, 1157, 1158, 1485, 0, 0, 0, 1173, 0,
	0, 0, 1184, 1183, 1185, 0, 1187, 1188, 1193, 1194,
	1197, 1199, 1206, 1208, 1212, 1214, 1217, 1219, 1221, 0,
	1224, 0, 1227, 0, 1230, 0, 1233, 0, 1236, 0,
	1239, 0, 1242, 0, 1245, 0, 1248, 0, 1251, 0,
	1254, 0, 1257, 0, 1260, 0, 1263, 0, 1266, 0,
	1271, 1273, 0, 1276, 1279, 1281, 0, 1284, 0, 1288,
	0, 1290, 1292, 1293, 0, 0, 0, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1320, 0, 1087,
	1090, 1322, 1099, 1100, 1105, 1325, 0, 0, 0, 1328,
	0, 0, 0, 1332, 1135, 1343, 0, 1348, 0, 0,
	1354, 0, 1358, 0, 1364, 1365, 1367, 1369, 0, 0,
	0, 0, 0, 963, 944, 66, 1467, 1469, 0, 1535,
	1533, 1533, 1543, 1544, 0, 0, 1551, 0, 0, 0,
	0, 86, 0, 0, 0, 1571, 0, 0, 0, 0,
	103, 1476, 951, 958, 0, 0, 952, 0, 953, 973,
	975, 930, 0, 995, 995, 92, 93, 0, 192, 0,
	194, 220, 221, 0, 197, 199, 200, 201, 207, 208,
	209, 202, 0, 0, 303, 305, 0, 0, 348, 359,
	349, 0, 0, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 937, 151, 152, 153, 604, 0, 614, 0, 939,
	0, 607, 0, 528, 0, 0, 0, 401, 401, 401,
	0, 0, 0, 0, 682, 0, 0, 645, 0, 653,
	0, 0, 0, 232, 233, 0, 1519, 582, 0, 136,
	137, 0, 0, 587, 521, 522, 1052, 0, 0, 0,
	1053, 1433, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 634, 635,
	0, 1372, 1092, 1476, 0, 1096, 1106, 1107, 0, 1096,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 992, 0, 0, 0, 0, 983, 1469, 1474,
	0, 0, 1538, 0, 1531, 1534, 1532, 1545, 0, 0,
	1552, 0, 1554, 0, 1576, 1577, 1569, 0, 1561, 1564,
	1560, 1563, 1485, 955, 0, 960, 0, 1476, 91, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 206, 0, 0, 363, 368, 0, 0, 0, 605,
	0, 940, 617, 608, 0, 695, 0, 699, 0, 0,
	0, 702, 703, 704, 681, 0, 685, 429, 669, 666,
	667, 540, 0, 139, 140, 0, 0, 0, 1422, 0,
	1425, 1138, 1140, 0, 1169, 1171, 1172, 1430, 1431, 1186,
	1222, 1225, 1228, 1231, 1234, 1237, 1240, 1243, 1246, 1249,
	1252, 1255, 1258, 1261, 1264, 1267, 1275, 1282, 1285, 1289,
	1294, 0, 1297, 0, 0, 1298, 0, 636, 1083, 0,
	0, 1103, 1104, 0, 1327, 1329, 1330, 1331, 1344, 0,
	1349, 1350, 0, 1355, 0, 1359, 1370, 0, 988, 945,
	946, 993, 994, 0, 0, 936, 1474, 84, 1475, 1472,
	0, 1470, 1468, 1527, 0, 1536, 1537, 1546, 1547, 1553,
	0, 1559, 0, 89, 0, 0, 0, 1485, 193, 0,
	212, 0, 613, 0, 616, 606, 693, 694, 0, 706,
	698, 700, 701, 683, -2, 1511, 0, 0, 0, 589,
	1423, 0, 0, 1299, 0, 632, 633, 1091, 1084, 0,
	1069, 1070, 1088, 1324, 1326, 0, 0, 0, 0, 987,
	989, 990, 83, 0, 1471, 1111, 0, 1539, 1540, 1567,
	1565, 956, 963, 0, 90, 442, 435, 1511, 0, 0,
	0, 686, 687, 688, 689, 690, 691, 692, 579, 1513,
	141, 142, 0, 509, 510, 511, 135, 0, 1144, 1295,
	1085, 0, 0, 0, 0, 0, 1345, 0, 1351, 0,
	1356, 0, 947, 948, 1473, 0, 0, 618, 0, 620,
	0, -2, 430, 443, 0, 187, 213, 214, 0, 0,
	217, 218, 219, 210, 211, 131, 0, 0, 707, 0,
	1514, 1515, 0, 138, 0, 0, 1076, 1077, 1078, 1079,
	1081, 0, 0, 0, 0, 1112, 1089, 619, 0, 0,
	385, 0, 629, 431, 432, 0, 438, 439, 440, 441,
	215, 216, 641, 0, 0, 508, 586, 1424, 0, 0,
	1346, 0, 1352, 0, 1357, 0, 621, 622, 630, 0,
	433, 0, 434, 0, 0, 0, 610, 0, 641, 1512,
	1086, 1080, 1082, 0, 0, 1110, 0, 631, 627, 444,
	446, 447, 0, 0, 445, 642, 611, 1347, 1353, 0,
	448, 449, 450, 623, 624, 625, 626,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 173, 165, 3,
	87, 89, 170, 168, 88, 169, 223, 171, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 732,
	153, 152, 154, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 175, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 141, 3, 176,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 142, 143, 144, 146,
	147, 148, 149, 150, 151, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 166, 167, 172, 174, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:613
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:618
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:663
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:974
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:978
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1019
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1071
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1127
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1184
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1237
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1244
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1273
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1280
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1291
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1384
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1394
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1399
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1432
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1441
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1916
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1954
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2215
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2244
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2254
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2326
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2349
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2358
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2364
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2378
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2383
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2419
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2423
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = "key"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2502
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2512
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2516
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2522
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2526
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2532
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2542
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2548
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2552
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2579
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2585
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2591
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2614
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2620
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2626
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2661
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2683
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2689
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2703
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2901
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2919
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2932
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2936
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2940
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3096
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3148
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3302
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3363
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3372
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3380
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3389
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3408
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3417
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3432
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3446
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3450
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3456
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3462
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3468
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3472
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3478
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3482
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3488
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3494
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3500
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3506
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3542
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3546
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3550
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3556
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3560
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3565
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3569
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3574
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3578
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3584
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3588
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3592
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3596
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3687
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3697
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3702
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3706
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3711
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3716
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3721
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3726
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3731
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3737
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3743
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3748
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3754
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3760
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3770
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3775
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3779
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3784
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3789
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3794
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3799
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3805
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3818
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3825
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3832
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3840
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3844
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3850
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3856
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3862
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3868
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3874
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3880
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3892
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3914
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3918
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = ""
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = "extended "
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4216
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4234
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4238
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4248
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4325
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4331
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4341
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4345
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4371
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4393
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4397
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4401
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4405
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4409
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4413
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4417
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4422
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4426
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4430
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4434
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4495
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4517
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4527
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4533
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4537
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4541
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4545
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4551
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4557
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4563
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4670
		{
			setAllowComments(yylex, true)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4680
		{
			yyVAL.strs = nil
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4684
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4690
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = SQLCacheStr
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4730
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4734
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4744
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4753
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4759
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4772
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4777
		{
			yyVAL.strs = nil
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4793
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4829
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4839
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4843
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4847
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4851
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4856
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4876
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4880
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4886
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4892
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4896
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4906
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4910
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4914
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4918
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4924
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4928
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4934
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4938
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4947
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4956
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4962
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4966
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4972
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4982
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4986
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4990
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5000
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5017
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5021
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5035
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5037
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5041
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5052
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5057
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5065
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5078
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5082
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5086
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5092
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5098
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5102
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5106
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5110
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5116
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5130
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5144
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5150
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5159
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5165
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5169
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5175
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5179
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5183
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5187
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5192
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5196
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5200
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5204
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5496
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5500
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5506
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5510
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5516
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5520
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5524
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5530
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5534
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5541
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5545
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5549
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5553
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5557
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5563
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5567
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5571
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5575
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5579
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5583
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5587
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5596
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5602
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5606
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5615
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5629
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5635
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5639
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5645
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5649
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5662
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5668
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5672
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5678
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5682
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5688
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5692
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5704
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5710
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5714
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5720
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5726
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5730
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = ""
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5740
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5746
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5750
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5757
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5761
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5765
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5769
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5775
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5779
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5791
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5795
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5799
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5805
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5809
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5813
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5820
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5826
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5830
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6812
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6818
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6822
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6826
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6830
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6834
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6838
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6842
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6846
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6850
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6854
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6858
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6862
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6866
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6870
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6874
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6878
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6882
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6886
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6890
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6894
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6900
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6904
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6908
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6912
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6916
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6920
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6924
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6928
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6932
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6936
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6940
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6944
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6948
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6952
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6956
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6960
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6964
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6968
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6978
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6982
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6986
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6996
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7000
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7004
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7008
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7012
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7018
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7022
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7026
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7030
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7034
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7040
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7044
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7058
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7062
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7068
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7072
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7076
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7080
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7084
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7090
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7094
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7098
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7102
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7106
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7110
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7114
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7118
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7122
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7126
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7132
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7136
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7145
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7150
		{
			yyVAL.str = string("")
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7160
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7164
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7170
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7179
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7185
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7189
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7193
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7197
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7203
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7207
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7213
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7222
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7226
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7235
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7250
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7256
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7260
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7269
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7278
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7284
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7290
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7294
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7300
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7305
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7309
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7313
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7322
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7328
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7332
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7336
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7345
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7349
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7353
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7357
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7364
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7368
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7372
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7376
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7382
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7386
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7390
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7394
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7399
		{
			yyVAL.str = ""
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7403
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7407
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7411
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7416
		{
			yyVAL.str = ""
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7420
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7426
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7435
		{
			yyVAL.str = ""
		}
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7444
		{
			yyVAL.str = "cascaded"
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7461
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7467
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7473
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7479
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7488
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7492
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7497
		{
			yyVAL.str = ""
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7507
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7511
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7517
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7521
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7525
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7530
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7534
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7538
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7543
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7547
		{
			yyVAL.str = " header"
		}
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = ""
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = " manifest on"
		}
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7560
		{
			yyVAL.str = " manifest off"
		}
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = " overwrite on"
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = " overwrite off"
		}
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7579
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7588
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7608
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7613
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7617
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7627
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = ""
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = " optionally"
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7663
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7667
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7671
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7675
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7679
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7685
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7689
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7693
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7697
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7706
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7712
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7716
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7722
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7726
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7732
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7736
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7741
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7751
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7755
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7761
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = "charset"
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7778
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7782
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7786
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7795
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7797
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7800
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7802
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7805
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7812
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7815
		{
			yyVAL.empty = struct{}{}
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7817
		{
			yyVAL.empty = struct{}{}
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7819
		{
			yyVAL.empty = struct{}{}
		}
	case 1598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7823
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7832
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7839
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7843
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7849
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7853
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7860
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7866
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7870
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7876
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7880
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7887
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7893
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7899
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7903
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7907
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8550
		{
		}
	case 2233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8555
		{
		}
	case 2234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8559
		{
			skipToEnd(yylex)
		}
	case 2235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8564
		{
			skipToEnd(yylex)
		}
	case 2236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8568
		{
			skipToEnd(yylex)
		}
	case 2237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8572
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
